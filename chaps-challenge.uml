<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_zAC-wErPEe2NP6AzGuGlzg" name="chaps_challenge">
    <eAnnotations xmi:id="_zOOksErPEe2NP6AzGuGlzg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_zOOksUrPEe2NP6AzGuGlzg" source="codegen">
        <details xmi:id="_zOOkskrPEe2NP6AzGuGlzg" key="codegenDirectory" value="/chaps-challenge"/>
        <details xmi:id="_2I60MErPEe2NP6AzGuGlzg" key="AssociatedSourceCode" value="/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/app/GUI.java;3981022063/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/app/Main.java;4054868255/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/app/TitleScreen.java;3775609329/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/app/UserListener.java;4194307432/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/app/fileLevel.java;737821382/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/app/pingTimer.java;1389812672/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/AuthenticationColour.java;3172095083/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/Direction.java;800583326/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/Domain.java;669055638/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/DomainBuilder.java;2264737240/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/EmptyState.java;477382342/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/Enemy.java;2625384798/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/ExitLockState.java;3608711900/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/ExitTile.java;3053895456/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/FreeTile.java;3783251823/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/FreeTileState.java;270621321/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/InformationState.java;2702183002/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/KeyState.java;3903887421/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/LockedDoorState.java;2443092141/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/Player.java;39009772/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/Point.java;954596936/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/Printable.java;3289912365/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/Tile.java;1962118766/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/TreasureState.java;3317068805/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/WallTile.java;1317981255/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/renderer/TestRender.java;563833804/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/fuzz/BasicInput.java;2516393942/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/fuzz/Fuzz.java;913340607/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/fuzz/InputGenerator.java;3268796101/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/persistency/ActorLoader.java;3414581387/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/persistency/MainPersistency.java;2744513849/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/persistency/MockPersistency.java;3583503868/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/persistency/Parser.java;347574621/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/persistency/PersistencyTests.java;1804610761/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/persistency/TriConsumer.java;3101059905/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/recorder/MockRecorder.java;1507321814/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/recorder/RecordReader.java;257185518/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/recorder/RecordWriter.java;3908345787/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/recorder/Recorder.java;3789586427/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/recorder/ReplayGui.java;496458745/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/recorder/ReplayListener.java;3976210888/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/recorder/ReplayTimer.java;2714790720/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/renderer/BoardPanel.java;1861932670/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/renderer/Renderer.java;481851695/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/renderer/Sounds/SoundEffects.java;4278145313/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/renderer/Sprites/Img.java;1976081490/1;/chaps-challenge/nz/ac/vuw/ecs/swen225/gp22/domain/tests/DomainTests.java;1380980736/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_0P6rMErPEe2NP6AzGuGlzg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_0P7SQErPEe2NP6AzGuGlzg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_0P7SQUrPEe2NP6AzGuGlzg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_0P7SQkrPEe2NP6AzGuGlzg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_0P7SQ0rPEe2NP6AzGuGlzg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_0P7SRErPEe2NP6AzGuGlzg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_0P7SRUrPEe2NP6AzGuGlzg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_0P7SRkrPEe2NP6AzGuGlzg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_0P75UErPEe2NP6AzGuGlzg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_0NxWIErPEe2NP6AzGuGlzg" name="nz">
      <packagedElement xmi:type="uml:Package" xmi:id="_0NzyYErPEe2NP6AzGuGlzg" name="ac">
        <packagedElement xmi:type="uml:Package" xmi:id="_0NzyYUrPEe2NP6AzGuGlzg" name="vuw">
          <packagedElement xmi:type="uml:Package" xmi:id="_0N0ZcErPEe2NP6AzGuGlzg" name="ecs">
            <packagedElement xmi:type="uml:Package" xmi:id="_0N0ZcUrPEe2NP6AzGuGlzg" name="swen225">
              <packagedElement xmi:type="uml:Package" xmi:id="_0N0ZckrPEe2NP6AzGuGlzg" name="gp22">
                <packagedElement xmi:type="uml:Package" xmi:id="_0N3cwkrPEe2NP6AzGuGlzg" name="recorder">
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RVngUrPEe2NP6AzGuGlzg" name="MockRecorder">
                    <ownedComment xmi:id="_0ghTDErPEe2NP6AzGuGlzg">
                      <body>The class to create mock tick input so we could create test 
* the code we wrote, such as saving and loading.
*
* @author Kalani Sheridan - ID: 300527652</body>
                    </ownedComment>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gOYFErPEe2NP6AzGuGlzg" name="randomEnum" specification="_0eocoErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gOYFUrPEe2NP6AzGuGlzg" name="clazz" type="_0eddgErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gOYFkrPEe2NP6AzGuGlzg" type="_0en1kErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>int x = new Random().nextInt(clazz.getEnumConstants().length);
     return clazz.getEnumConstants()[x];
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gOYF0rPEe2NP6AzGuGlzg" name="run" specification="_0RWOkErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>Recorder.setUp(&quot;level1.xml&quot;);
     for(int i=0; i&lt;1000; i++){
         Recorder.tick( randomEnum(Direction.class) );
     }
     Recorder.save(&quot;recorded_games/&quot;);
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RWOkErPEe2NP6AzGuGlzg" name="run" isStatic="true" method="_0gOYF0rPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0eocoErPEe2NP6AzGuGlzg" name="randomEnum" isStatic="true" method="_0gOYFErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0eocoUrPEe2NP6AzGuGlzg" name="clazz" type="_0eddgErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0eoco0rPEe2NP6AzGuGlzg" type="_0en1kErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RWOkUrPEe2NP6AzGuGlzg" name="RecordReader">
                    <ownedComment xmi:id="_0ghTDUrPEe2NP6AzGuGlzg">
                      <body>This is the class we will be using to read the saved xml files.

@author Kalani Sheridan - ID: 300527652</body>
                    </ownedComment>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gO_IErPEe2NP6AzGuGlzg" name="loadDoc" specification="_0epqwUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gO_IUrPEe2NP6AzGuGlzg" name="clazz" type="_0eddgErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gO_IkrPEe2NP6AzGuGlzg" type="_0epDsUrPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gO_I0rPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>URL url;
     JFileChooser fileChooser = new JFileChooser(
         new File(System.getProperty(&quot;user.dir&quot;)).getAbsolutePath() +
         &quot;/nz/ac/vuw/ecs/swen225/gp22/levels/&quot;
     );
     int responce = fileChooser.showOpenDialog(null);
     if(responce == JFileChooser.APPROVE_OPTION){
         url = new File(fileChooser.getSelectedFile().getAbsolutePath()).toURI().toURL();
         Document doc = parse(url);
         try {
             return actionList(clazz,doc);
         } catch (XmlFormatException e) { e.printStackTrace(); }
     }
     JOptionPane.showMessageDialog(null, &quot;No file chosen!&quot;, null, JOptionPane.INFORMATION_MESSAGE);
     return List.of();
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gO_JErPEe2NP6AzGuGlzg" name="loadPartial" specification="_0eq44ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gO_JUrPEe2NP6AzGuGlzg" name="clazz" type="_0eddgErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>Document doc = DocumentHelper.createDocument();
     List&lt;E> actionList = loadDoc(clazz);

     //Set writer first to change the writer
     Recorder.setWriter(new RecordWriter(doc, Recorder.getLevel()));
     for(E action : actionList){
         Recorder.tick(action);
     }
     Recorder.setDocument(doc);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gO_JkrPEe2NP6AzGuGlzg" name="parse" specification="_0esHAErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gO_J0rPEe2NP6AzGuGlzg" name="url" type="_0clOMUrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gO_KErPEe2NP6AzGuGlzg" type="_0df0M0rPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>SAXReader reader = new SAXReader();
     Document document = reader.read(url);
     return document;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gO_KUrPEe2NP6AzGuGlzg" name="actionList" specification="_0esuEErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gO_KkrPEe2NP6AzGuGlzg" name="clazz" type="_0eddgErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gO_K0rPEe2NP6AzGuGlzg" name="doc" type="_0df0M0rPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gO_LErPEe2NP6AzGuGlzg" type="_0epDsUrPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gO_LUrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>Element e = doc.getRootElement();
     List&lt;E> moves = new ArrayList&lt;E>();
     for(Iterator&lt;Element> it = e.elementIterator(); it.hasNext();){
         Element tick = it.next();

         if(tick.getName().equals(&quot;level&quot;)){
             Recorder.setLevel(tick.getText());
             tick = it.next();
         }

         if(!(tick.node(1) instanceof Element))  {
             throw new XmlFormatException(&quot;tick.node(1) is not an element!&quot;);
         }
         Element moveEle = (Element) tick.node(1);
         if(!moveEle.getName().equals(&quot;move&quot;)) {
             throw new XmlFormatException(&quot;The element tick.node(1) is not a move!&quot;);
         }
         String moveStr = moveEle.getText();
         E move = E.valueOf(clazz, moveStr);
         moves.add(move);
     }

     return Collections.unmodifiableList(moves);
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0epqwUrPEe2NP6AzGuGlzg" name="loadDoc" isStatic="true" method="_0gO_IErPEe2NP6AzGuGlzg" raisedException="_0cfHkUrPEe2NP6AzGuGlzg _0cfuoUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0epqwkrPEe2NP6AzGuGlzg" name="clazz" type="_0eddgErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0eqR0ErPEe2NP6AzGuGlzg" type="_0epDsUrPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0eqR0UrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0eq44ErPEe2NP6AzGuGlzg" name="loadPartial" isStatic="true" method="_0gO_JErPEe2NP6AzGuGlzg" raisedException="_0cfHkUrPEe2NP6AzGuGlzg _0cfuoUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0eq44UrPEe2NP6AzGuGlzg" name="clazz" type="_0eddgErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0esHAErPEe2NP6AzGuGlzg" name="parse" visibility="private" isStatic="true" method="_0gO_JkrPEe2NP6AzGuGlzg" raisedException="_0cfuoUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0esHAUrPEe2NP6AzGuGlzg" name="url" type="_0clOMUrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0esHAkrPEe2NP6AzGuGlzg" type="_0df0M0rPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0esuEErPEe2NP6AzGuGlzg" name="actionList" visibility="private" isStatic="true" method="_0gO_KUrPEe2NP6AzGuGlzg" raisedException="_0RW1oErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0esuEUrPEe2NP6AzGuGlzg" name="clazz" type="_0eddgErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0esuEkrPEe2NP6AzGuGlzg" name="doc" type="_0df0M0rPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0esuFErPEe2NP6AzGuGlzg" type="_0epDsUrPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0esuFUrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <nestedClassifier xmi:type="uml:Class" xmi:id="_0RW1oErPEe2NP6AzGuGlzg" name="XmlFormatException" visibility="private">
                      <eAnnotations xmi:id="_0RW1oUrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0RW1okrPEe2NP6AzGuGlzg" key="static"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gh6EErPEe2NP6AzGuGlzg">
                        <body>Custom exception for checking that the xml recorded games are correctly formatted</body>
                      </ownedComment>
                      <generalization xmi:id="_0et8MUrPEe2NP6AzGuGlzg" general="_0etVIUrPEe2NP6AzGuGlzg"/>
                      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gO_LkrPEe2NP6AzGuGlzg" name="XmlFormatException" specification="_0RXcsErPEe2NP6AzGuGlzg">
                        <ownedParameter xmi:id="_0gO_L0rPEe2NP6AzGuGlzg" name="errorMessage">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        </ownedParameter>
                        <ownedParameter xmi:id="_0gO_MErPEe2NP6AzGuGlzg" type="_0RW1oErPEe2NP6AzGuGlzg" direction="return"/>
                        <language>java</language>
                        <body>super(&quot;Incorrect XML format: &quot;+errorMessage);
     </body>
                      </ownedBehavior>
                      <ownedOperation xmi:id="_0RXcsErPEe2NP6AzGuGlzg" name="XmlFormatException" visibility="package" method="_0gO_LkrPEe2NP6AzGuGlzg">
                        <eAnnotations xmi:id="_0RXcskrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                          <details xmi:id="_0RXcs0rPEe2NP6AzGuGlzg" key="create"/>
                        </eAnnotations>
                        <ownedParameter xmi:id="_0RXcsUrPEe2NP6AzGuGlzg" name="errorMessage">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        </ownedParameter>
                        <ownedParameter xmi:id="_0RXctErPEe2NP6AzGuGlzg" type="_0RW1oErPEe2NP6AzGuGlzg" direction="return"/>
                      </ownedOperation>
                    </nestedClassifier>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RYq0ErPEe2NP6AzGuGlzg" name="RecordWriter">
                    <ownedComment xmi:id="_0gh6EUrPEe2NP6AzGuGlzg">
                      <body>This is the class we will be using to write (save) xml files

@author Kalani Sheridan - ID: 300527652</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fbt4ErPEe2NP6AzGuGlzg" name="document" visibility="private" type="_0df0M0rPEe2NP6AzGuGlzg" association="_0g5tgUrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fbt4krPEe2NP6AzGuGlzg" name="game" visibility="private" type="_0dgbQ0rPEe2NP6AzGuGlzg" association="_0g5thErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fcU8UrPEe2NP6AzGuGlzg" name="tickNum" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gO_MUrPEe2NP6AzGuGlzg" name="RecordWriter" specification="_0eujQErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gO_MkrPEe2NP6AzGuGlzg" name="document" type="_0df0M0rPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gO_M0rPEe2NP6AzGuGlzg" name="level">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gO_NErPEe2NP6AzGuGlzg" type="_0RYq0ErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>this.document = document;
     this.game = this.document.addElement(&quot;game&quot;);
     this.game.addElement(&quot;level&quot;)
              .addText(level);
     this.tickNum = 0;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gPmMErPEe2NP6AzGuGlzg" name="tick" specification="_0evKUUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gPmMUrPEe2NP6AzGuGlzg" name="move" type="_0epDsUrPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>Element tick = this.game.addElement(&quot;tick&quot;)
             .addAttribute(&quot;tick&quot;, this.tickNum + &quot;&quot;);

     this.move(tick, &quot;player&quot;, move.name());
     tickNum++;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gPmMkrPEe2NP6AzGuGlzg" name="move" specification="_0evxYkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gPmM0rPEe2NP6AzGuGlzg" name="tick" type="_0dgbQ0rPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gPmNErPEe2NP6AzGuGlzg" name="actor">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gPmNUrPEe2NP6AzGuGlzg" name="move">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>tick.addElement(&quot;move&quot;)
             .addAttribute(&quot;actor&quot;, actor)
             .addText(move);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gPmNkrPEe2NP6AzGuGlzg" name="save" specification="_0RZR4ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gPmN0rPEe2NP6AzGuGlzg" name="dir">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>DateTimeFormatter dtf = DateTimeFormatter.ofPattern(&quot;dd-MM-yyyy-HHmmss&quot;);
     LocalDateTime now = LocalDateTime.now();
     String nowStr = dtf.format(now);

     document.addComment(nowStr);

     // Pretty print write to a xml file
     FileWriter fileWriter = new FileWriter(dir + &quot;game_record_&quot; + nowStr + &quot;.xml&quot;);
     OutputFormat format = OutputFormat.createPrettyPrint();
     XMLWriter writer = new XMLWriter(fileWriter, format);
     writer.write(document);
     writer.close();
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RZR4ErPEe2NP6AzGuGlzg" name="save" method="_0gPmNkrPEe2NP6AzGuGlzg" raisedException="_0ceggErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gh6FErPEe2NP6AzGuGlzg">
                        <body>Saves the recorded game.
     * 
     * @param dir - THe directory of where we are saving the game.
     * @throws IOException</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RZR4UrPEe2NP6AzGuGlzg" name="dir">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0eujQErPEe2NP6AzGuGlzg" name="RecordWriter" method="_0gO_MUrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0eujQ0rPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0eujRErPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gh6EkrPEe2NP6AzGuGlzg">
                        <body>Recorder constructor.
     * 
     * @param document - The dom4j document we are writing too.
     * @param level - The level xml name.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0eujQUrPEe2NP6AzGuGlzg" name="document" type="_0df0M0rPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0eujQkrPEe2NP6AzGuGlzg" name="level">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0evKUErPEe2NP6AzGuGlzg" type="_0RYq0ErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0evKUUrPEe2NP6AzGuGlzg" name="tick" method="_0gPmMErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0evKUkrPEe2NP6AzGuGlzg" name="move" type="_0epDsUrPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0evxYkrPEe2NP6AzGuGlzg" name="move" visibility="private" method="_0gPmMkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gh6E0rPEe2NP6AzGuGlzg">
                        <body>Record a given move.
     *
     * @param tick - The dom4j element we have formatted to be the tick.
     * @param actor - The actor that is doing the move.
     * @param move - The move that is being recorded in this tick.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0evxY0rPEe2NP6AzGuGlzg" name="tick" type="_0dgbQ0rPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0ewYcErPEe2NP6AzGuGlzg" name="actor">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0ewYcUrPEe2NP6AzGuGlzg" name="move">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RagAErPEe2NP6AzGuGlzg" name="Recorder">
                    <ownedComment xmi:id="_0gh6FUrPEe2NP6AzGuGlzg">
                      <body>The Recorder class, the place where every other class will access Recorder/Replay functions/methods. 

@author Kalani Sheridan - ID: 300527652</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fcU80rPEe2NP6AzGuGlzg" name="recWriter" visibility="private" isStatic="true" type="_0RYq0ErPEe2NP6AzGuGlzg" association="_0g6UkUrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fc8AErPEe2NP6AzGuGlzg" name="document" visibility="private" isStatic="true" type="_0df0M0rPEe2NP6AzGuGlzg" association="_0g6UlErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fc8AkrPEe2NP6AzGuGlzg" name="clazz" visibility="private" isLeaf="true" isStatic="true" type="_0eddgErPEe2NP6AzGuGlzg" isReadOnly="true" association="_0g67oUrPEe2NP6AzGuGlzg">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fdjEErPEe2NP6AzGuGlzg" value="Direction.class"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fdjEUrPEe2NP6AzGuGlzg" name="level" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gPmPErPEe2NP6AzGuGlzg" name="setUp" specification="_0RagAUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gPmPUrPEe2NP6AzGuGlzg" name="level">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>System.out.println(&quot;RECORDER: Recorder has been setup.&quot;);
     document = DocumentHelper.createDocument();
     recWriter = new RecordWriter(document, level);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gPmPkrPEe2NP6AzGuGlzg" name="tick" specification="_0ew_gErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gPmP0rPEe2NP6AzGuGlzg" name="move" type="_0epDsUrPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>recWriter.tick(move);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQNQErPEe2NP6AzGuGlzg" name="save" specification="_0RbHEErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gQNQUrPEe2NP6AzGuGlzg" name="directory">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>System.out.println(&quot;RECORDER: Recorder has saved.&quot;);
     try {
         recWriter.save(directory);
     } catch (IOException e) {
         e.printStackTrace();
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQNQkrPEe2NP6AzGuGlzg" name="loadPartial" specification="_0RbHEkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         RecordReader.loadPartial(clazz);
     } catch (MalformedURLException | DocumentException e) {
         e.printStackTrace();
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQNQ0rPEe2NP6AzGuGlzg" name="load" specification="_0RbHE0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gQNRErPEe2NP6AzGuGlzg" type="_0QX-MErPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gQNRUrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>try {
         return RecordReader.loadDoc(clazz);
     } catch (MalformedURLException | DocumentException e) {
         System.out.println(&quot;Load failed: &quot;+e);
         return List.of();
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQNRkrPEe2NP6AzGuGlzg" name="setWriter" specification="_0dvEwErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gQNR0rPEe2NP6AzGuGlzg" name="writer" type="_0RYq0ErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>recWriter = writer;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQNSErPEe2NP6AzGuGlzg" name="setDocument" specification="_0exmkUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gQNSUrPEe2NP6AzGuGlzg" name="doc" type="_0df0M0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>document = doc;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RagAUrPEe2NP6AzGuGlzg" name="setUp" isStatic="true" method="_0gPmPErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gh6FkrPEe2NP6AzGuGlzg">
                        <body>Called when a new level is created/started.
     * 
     * Creates the dom4j document and record writer, for a new level
     * 
     * @param level - The level xml name</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RagAkrPEe2NP6AzGuGlzg" name="level">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RbHEErPEe2NP6AzGuGlzg" name="save" isStatic="true" method="_0gQNQErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gh6F0rPEe2NP6AzGuGlzg">
                        <body>Saves a recorded game to an xml file.
     * 
     * @param directory - The directory of where to save the game</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RbHEUrPEe2NP6AzGuGlzg" name="directory">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RbHEkrPEe2NP6AzGuGlzg" name="loadPartial" isStatic="true" method="_0gQNQkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gh6GErPEe2NP6AzGuGlzg">
                        <body>Loads a level which is partially completed.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RbHE0rPEe2NP6AzGuGlzg" name="load" isStatic="true" method="_0gQNQ0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gh6GUrPEe2NP6AzGuGlzg">
                        <body>Loads a game from a record xml file.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RbHFErPEe2NP6AzGuGlzg" type="_0QX-MErPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0RbHFUrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dvEwErPEe2NP6AzGuGlzg" name="setWriter" isStatic="true" method="_0gQNRkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gh6GkrPEe2NP6AzGuGlzg">
                        <body>Sets a new record writer. 
     *
     * @param writer - The new writer to set.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dvEwUrPEe2NP6AzGuGlzg" name="writer" type="_0RYq0ErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ew_gErPEe2NP6AzGuGlzg" name="tick" isStatic="true" method="_0gPmPkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0ew_gUrPEe2NP6AzGuGlzg" name="move" type="_0epDsUrPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0exmkUrPEe2NP6AzGuGlzg" name="setDocument" isStatic="true" method="_0gQNSErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gh6G0rPEe2NP6AzGuGlzg">
                        <body>Sets a new Document.
     * 
     * @param doc - The new document to set</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0exmkkrPEe2NP6AzGuGlzg" name="doc" type="_0df0M0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RcVMErPEe2NP6AzGuGlzg" name="ReplayGui">
                    <ownedComment xmi:id="_0gh6HErPEe2NP6AzGuGlzg">
                      <body>This class is similar to the APP GUI, and the structure of it is based around it.
The class extends the Renderer's JFrame class and adds a menu and buttons
to allow display a Replay of a recorded game.

It has the replay options of autoplay, and step by step.

@author Kalani Sheridan - ID: 300527652</body>
                    </ownedComment>
                    <generalization xmi:id="_0dzWMErPEe2NP6AzGuGlzg" general="_0RnUUErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0feKIErPEe2NP6AzGuGlzg" name="instance" isStatic="true" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g67pErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0feKIkrPEe2NP6AzGuGlzg" name="rl" type="_0RgmoErPEe2NP6AzGuGlzg" association="_0g67p0rPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fexMUrPEe2NP6AzGuGlzg" name="pauseButton" visibility="private" type="_0cRsM0rPEe2NP6AzGuGlzg" association="_0g7isUrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fexM0rPEe2NP6AzGuGlzg" name="stepButton" visibility="private" type="_0cRsM0rPEe2NP6AzGuGlzg" association="_0g7itErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fexNUrPEe2NP6AzGuGlzg" name="speedSlider" visibility="private" type="_0dw58ErPEe2NP6AzGuGlzg" association="_0g8JwUrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0ffYQUrPEe2NP6AzGuGlzg" name="sliderLabel" visibility="private" type="_0ccrUUrPEe2NP6AzGuGlzg" association="_0g8JxErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0ffYQ0rPEe2NP6AzGuGlzg" name="menuBar" visibility="private" type="_0cS6UUrPEe2NP6AzGuGlzg" association="_0g8Jx0rPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0ffYRUrPEe2NP6AzGuGlzg" name="menu" visibility="private" type="_0cSTQUrPEe2NP6AzGuGlzg" association="_0g8w0UrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0ff_UUrPEe2NP6AzGuGlzg" name="stepByStep" visibility="private" type="_0cS6U0rPEe2NP6AzGuGlzg" association="_0g8w1ErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0ff_U0rPEe2NP6AzGuGlzg" name="autoPlay" visibility="private" type="_0cS6U0rPEe2NP6AzGuGlzg" association="_0g9X4UrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0ff_VUrPEe2NP6AzGuGlzg" name="exit" visibility="private" type="_0cS6U0rPEe2NP6AzGuGlzg" association="_0g9X5ErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fgmYUrPEe2NP6AzGuGlzg" name="desc" visibility="private" type="_0cS6U0rPEe2NP6AzGuGlzg" association="_0g9-8UrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fgmY0rPEe2NP6AzGuGlzg" name="frame" visibility="package" isLeaf="true" isStatic="true" type="_0ccEQ0rPEe2NP6AzGuGlzg" isReadOnly="true" association="_0g9-9ErPEe2NP6AzGuGlzg">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fgmZErPEe2NP6AzGuGlzg" value="new JFrame()"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQNSkrPEe2NP6AzGuGlzg" name="ReplayGui" specification="_0Rc8QErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gQNS0rPEe2NP6AzGuGlzg" type="_0RcVMErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>super(1000, 1000);
 instance = this;
 System.out.println(&quot;REPLAY GUI: Creating user listener....&quot;);
 rl = new ReplayListener();

 setUpGUI();
 setLayout(new BorderLayout());

 runStepByStep();

 //Make exiting, saving and showing rules menu items
 menuBar = new JMenuBar();
 menu = new JMenu(&quot;Other Options&quot;);
 
 stepByStep = new JMenuItem(&quot;Step by step&quot;);
 autoPlay = new JMenuItem(&quot;Auto Replay&quot;);
 desc = new JMenuItem(&quot;Description&quot;);
 exit = new JMenuItem(&quot;Exit Game&quot;);

 menu.add(stepByStep);
 menu.add(autoPlay);
 menu.add(desc);
 menu.add(exit);

 autoPlay.addActionListener(e -> runAutoPlay());
 stepByStep.addActionListener(e -> runStepByStep());
 exit.addActionListener(e -> closeReplay());
 desc.addActionListener(e -> showDesc());

 menuBar.add(menu);
 this.setJMenuBar(menuBar);
 //Add keylistener to JFrame
 this.addKeyListener(rl);
 this.setFocusable(true);
 System.out.println(&quot;REPLAY GUI: Keys are listening...&quot;);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQNTErPEe2NP6AzGuGlzg" name="endOfReplay" specification="_0Rc8RErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>JOptionPane.showMessageDialog(frame, &quot;The replay has been completed!&quot;);
 this.delPauseButton();
 this.delSpeedSlider();
 this.delStepButton();
 closeReplay();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0UErPEe2NP6AzGuGlzg" name="showDesc" specification="_0RdjUErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>String descMessage = &quot;The replay with show a replay of a game that has been recorded.&quot;
 +&quot;\n\nStep-by-step is manual control of each tick the game goes through.&quot;
 +&quot;\n\nAutoplay is when a game is played at a speed spesified by the controling slider.&quot;;
 JOptionPane.showMessageDialog(frame, descMessage);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0UUrPEe2NP6AzGuGlzg" name="drawText" specification="_0ezbwErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gQ0UkrPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>g.setFont(new Font(&quot;Roboto&quot;, Font.BOLD, 20));
 g.setColor(Color.PINK);
 g.drawString(&quot;Replay: Step by Step&quot;, 50, 50);
 g.setColor(Color.RED);
 g.drawString(&quot;Current level: &quot; + ReplayListener.currentLevel, 50, 70);
 g.setColor(Color.YELLOW);
 g.drawString(&quot;Time left: &quot;+ReplayListener.displayTime , 50, 90);
 g.setColor(Color.GREEN);
 g.drawString(
   &quot;Keys collected: &quot; + ReplayListener.currentGame.keysCollected(),
   50,
   110
 );
 g.setColor(Color.BLUE);
 g.drawString(
   &quot;Treasures left: &quot; + ReplayListener.currentGame.treasuresLeft(),
   50,
   130
 );
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0U0rPEe2NP6AzGuGlzg" name="actPauseButton" specification="_0RdjUUrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>//Make a JButton pauseButton
 pauseButton = new JButton(&quot;⏸&quot;);
 pauseButton.setPreferredSize(new Dimension(40, 40));
 pauseButton.addActionListener(
   e -> {
     if (!ReplayListener.paused) {
       ReplayListener.pauseGame();
       pauseButton.setText(&quot;▶&quot;);
     } else {
       ReplayListener.resumeGame(speedSlider.getValue());
       pauseButton.setText(&quot;⏸&quot;);
     }
   }
 );
 panel.setLayout(null);
 pauseButton.setFont(
   new Font(pauseButton.getFont().getName(), Font.PLAIN, 40)
 );
 pauseButton.setMargin(new Insets(0, 0, 0, 0));
 pauseButton.setBounds(900, 50, 50, 50);
 panel.add(pauseButton);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0VErPEe2NP6AzGuGlzg" name="delPauseButton" specification="_0RdjUkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>if(pauseButton != null){
   panel.remove(pauseButton);
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0VUrPEe2NP6AzGuGlzg" name="actStepButton" specification="_0RdjU0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>stepButton = new JButton(&quot;Next Tick!&quot;);
 stepButton.setPreferredSize(new Dimension(100, 40));
 stepButton.addActionListener( e -> ReplayListener.nextMove() );
 panel.setLayout(null);
 stepButton.setFont(
   new Font(stepButton.getFont().getName(), Font.PLAIN, 20)
 );
 stepButton.setMargin(new Insets(0, 0, 0, 0));
 stepButton.setBounds(800, 50, 100, 50);
 panel.add(stepButton);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0VkrPEe2NP6AzGuGlzg" name="delStepButton" specification="_0RdjVErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>if(stepButton != null){
   panel.remove(stepButton);
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0V0rPEe2NP6AzGuGlzg" name="actSpeedSlider" specification="_0RdjVUrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>sliderLabel = new JLabel();
 speedSlider = new JSlider(100,500,200);
 sliderLabel.setText(&quot;Ticks delay in milliseconds = &quot; + speedSlider.getValue());
 panel.setLayout(null);

 sliderLabel.setBounds(400, 25, 200, 50);
 speedSlider.setBounds(400, 75, 200, 50);
 speedSlider.addChangeListener(new ChangeListener() {
   public void stateChanged(ChangeEvent ce) {
     ReplayListener.changeTimerSpeed(speedSlider.getValue());
     sliderLabel.setText(&quot;Ticks delay in milliseconds = &quot; + speedSlider.getValue());
     repaint();
   }
});
 panel.add(sliderLabel);
 panel.add(speedSlider);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0WErPEe2NP6AzGuGlzg" name="delSpeedSlider" specification="_0RdjVkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>if(sliderLabel != null){
   panel.remove(sliderLabel);
 }
 if(speedSlider != null){
   panel.remove(speedSlider);
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0WUrPEe2NP6AzGuGlzg" name="runAutoPlay" specification="_0ReKYErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>System.out.println(&quot;Running autoplay&quot;);
 delSpeedSlider();
 delPauseButton();
 delStepButton();
 actSpeedSlider();
 actPauseButton();
 ReplayListener.pauseGame();
 pauseButton.setText(&quot;▶&quot;);
 ReplayListener.setAutoPlay();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0WkrPEe2NP6AzGuGlzg" name="runStepByStep" specification="_0ReKYUrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>System.out.println(&quot;Running step by step&quot;);
 delSpeedSlider();
 delPauseButton();
 delStepButton();
 actStepButton();
 ReplayListener.setStepByStep();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gQ0W0rPEe2NP6AzGuGlzg" name="closeReplay" specification="_0ReKYkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>frame.dispose();
 instance.dispose();
 ReplayListener.stopTimer();
 GUI.closeReplayGui();
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0Rc8QErPEe2NP6AzGuGlzg" name="ReplayGui" method="_0gQNSkrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0Rc8QUrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0Rc8QkrPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gihIErPEe2NP6AzGuGlzg">
                        <body>Makes the GUI for saving, loading, pausing and other functionality</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0Rc8Q0rPEe2NP6AzGuGlzg" type="_0RcVMErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Rc8RErPEe2NP6AzGuGlzg" name="endOfReplay" method="_0gQNTErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihIUrPEe2NP6AzGuGlzg">
                        <body>Ends the replay, and removes the buttons to continue the replay.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RdjUErPEe2NP6AzGuGlzg" name="showDesc" visibility="private" method="_0gQ0UErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihIkrPEe2NP6AzGuGlzg">
                        <body>Shows the description of replay</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RdjUUrPEe2NP6AzGuGlzg" name="actPauseButton" visibility="private" method="_0gQ0U0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihJErPEe2NP6AzGuGlzg">
                        <body>Creates a new pause button.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RdjUkrPEe2NP6AzGuGlzg" name="delPauseButton" visibility="private" method="_0gQ0VErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihJUrPEe2NP6AzGuGlzg">
                        <body>Deletes a pause button if one exists.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RdjU0rPEe2NP6AzGuGlzg" name="actStepButton" visibility="private" method="_0gQ0VUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihJkrPEe2NP6AzGuGlzg">
                        <body>Creates a new step/next-tick button.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RdjVErPEe2NP6AzGuGlzg" name="delStepButton" visibility="private" method="_0gQ0VkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihJ0rPEe2NP6AzGuGlzg">
                        <body>Deletes a step/next-tick button if one exists.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RdjVUrPEe2NP6AzGuGlzg" name="actSpeedSlider" visibility="private" method="_0gQ0V0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihKErPEe2NP6AzGuGlzg">
                        <body>Creates a new autoplay speed slider.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RdjVkrPEe2NP6AzGuGlzg" name="delSpeedSlider" visibility="private" method="_0gQ0WErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihKUrPEe2NP6AzGuGlzg">
                        <body>Deletes a autoplay speed slider if one exists.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ReKYErPEe2NP6AzGuGlzg" name="runAutoPlay" visibility="private" method="_0gQ0WUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihKkrPEe2NP6AzGuGlzg">
                        <body>Sets the replay to be autoplay.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ReKYUrPEe2NP6AzGuGlzg" name="runStepByStep" visibility="private" method="_0gQ0WkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihK0rPEe2NP6AzGuGlzg">
                        <body>Sets the replay to be step by step.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ReKYkrPEe2NP6AzGuGlzg" name="closeReplay" isStatic="true" method="_0gQ0W0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihLErPEe2NP6AzGuGlzg">
                        <body>Closes the replay GUI.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ezbwErPEe2NP6AzGuGlzg" name="drawText" isStatic="true" method="_0gQ0UUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihI0rPEe2NP6AzGuGlzg">
                        <body>Draws game information on the top left, like in the regular APP gui.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ezbwUrPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RgmoErPEe2NP6AzGuGlzg" name="ReplayListener">
                    <ownedComment xmi:id="_0gihLUrPEe2NP6AzGuGlzg">
                      <body>This class listens to player input for the replay and does actions based on that.
This class is based on the structure of APPS UserListener as it does similar things to it,
and the other classes are made based around its structure.

@author Kalani Sheridan - ID: 300527652</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fhNcErPEe2NP6AzGuGlzg" name="currentGame" isStatic="true" type="_0QZzYErPEe2NP6AzGuGlzg" association="_0g-mAUrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fh0gUrPEe2NP6AzGuGlzg" name="move" isStatic="true" type="_0QX-MErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fh0g0rPEe2NP6AzGuGlzg" name="paused" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fh0hErPEe2NP6AzGuGlzg" value="false"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fibkUrPEe2NP6AzGuGlzg" name="currentLevel" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fibk0rPEe2NP6AzGuGlzg" name="isAutoPlay" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fiblErPEe2NP6AzGuGlzg" value="false"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fjCoUrPEe2NP6AzGuGlzg" name="displayTime" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fjCo0rPEe2NP6AzGuGlzg" name="timer" visibility="private" isStatic="true" type="_0Rjp8ErPEe2NP6AzGuGlzg" association="_0g-mBErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fjpsErPEe2NP6AzGuGlzg" name="index" visibility="private" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fjpskrPEe2NP6AzGuGlzg" name="moves" isStatic="true" type="_0QX-MErPEe2NP6AzGuGlzg" isOrdered="true">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0fjptErPEe2NP6AzGuGlzg" value="*"/>
                    </ownedAttribute>
                    <interfaceRealization xmi:id="_0e0p4ErPEe2NP6AzGuGlzg" client="_0RgmoErPEe2NP6AzGuGlzg" supplier="_0ePbEErPEe2NP6AzGuGlzg" contract="_0ePbEErPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gRbYErPEe2NP6AzGuGlzg" name="ReplayListener" specification="_0RhNsErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gRbYUrPEe2NP6AzGuGlzg" type="_0RgmoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>isAutoPlay = false;
 moves = Recorder.load();

 if(moves.isEmpty()) moves = List.of(Direction.NONE);

 index = 0;
 move = moves.get(index);
 currentLevel = Recorder.getLevel();

 displayTime =  60 * 1000 * pingTimer.getLevelNum(currentLevel);

 timer = new ReplayTimer(200);
 System.out.println(&quot;REPLAY LISTENER: starting file name is &quot; + currentLevel);
 System.out.println(&quot;REPLAY LISTENER: Loading level...&quot;);
 loadLevel();
 System.out.println(&quot;REPLAY LISTENER: Loaded level.&quot;);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gRbYkrPEe2NP6AzGuGlzg" name="keyReleased" specification="_0e2fEErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gRbY0rPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>switch (e.getKeyCode()) {
   case KeyEvent.VK_SPACE:
     pauseGame();
     break;
   case KeyEvent.VK_ESCAPE:
     resumeGame();
     break;
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gRbZErPEe2NP6AzGuGlzg" name="pauseGame" specification="_0RhNtErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>if(isAutoPlay){
   System.out.println(&quot;The game is paused&quot;);
   paused = true;
   timer.cancel();
   JOptionPane.showMessageDialog(ReplayGui.instance, &quot;The replay is Paused&quot;);
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gRbZUrPEe2NP6AzGuGlzg" name="resumeGame" specification="_0RhNtUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gRbZkrPEe2NP6AzGuGlzg" name="speed">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if(isAutoPlay){
   System.out.println(&quot;The game has resumed&quot;);
   paused = false;
   timer = new ReplayTimer(speed);
   JOptionPane.getRootFrame().dispose();
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gRbZ0rPEe2NP6AzGuGlzg" name="resumeGame" specification="_0RhNt0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>System.out.println(&quot;The game has resumed&quot;);
 paused = false;
 timer = new ReplayTimer(timer);
 JOptionPane.getRootFrame().dispose();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gRbaErPEe2NP6AzGuGlzg" name="loadLevel" specification="_0Rh0wErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
   currentGame = Parser.loadLevel(currentLevel);
   System.out.println(&quot;REPLAY LISTENER: Parser has parsed a level file!&quot;);
 } catch (DocumentException e) {
   System.out.println(&quot;Exception loading a level&quot;);
   ReplayGui.closeReplay();
 }
 loadTimer();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gRbaUrPEe2NP6AzGuGlzg" name="loadTimer" specification="_0Rh0wUrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>System.out.println(&quot;BREAKPOINT: Ping timer is loaded.&quot;);
 timer.cancel();
 timer = new ReplayTimer(timer);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSCcErPEe2NP6AzGuGlzg" name="nextMove" specification="_0Rh0wkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>if (GUI.replayGui() != null) {
   if(index&lt;moves.size()-1){
     currentGame.moveActors();
     move = moves.get(index);
     currentGame.movePlayer(move);
     System.out.println(&quot;Tick number: &quot;+index+&quot; Move: &quot;+move.name());
     index++;
     displayTime -= 200;
     GUI.replayGui().panel.revalidate();
     GUI.replayGui().panel.repaint();
   }else {
     System.out.println(&quot;The replay is over!&quot;);
     paused = true;
     timer.cancel();
     GUI.replayGui().endOfReplay();
   };
 } 
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSCcUrPEe2NP6AzGuGlzg" name="setAutoPlay" specification="_0Rh0w0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>isAutoPlay = true;
 if (GUI.replayGui() != null) {
   GUI.replayGui().panel.revalidate();
   GUI.replayGui().panel.repaint();
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSCckrPEe2NP6AzGuGlzg" name="setStepByStep" specification="_0Rh0xErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>isAutoPlay = false;
 if (GUI.replayGui() != null) {
   GUI.replayGui().panel.revalidate();
   GUI.replayGui().panel.repaint();
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSCc0rPEe2NP6AzGuGlzg" name="changeTimerSpeed" specification="_0Rh0xUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gSCdErPEe2NP6AzGuGlzg" name="speed">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if(!paused){
   timer.cancel();
   timer = new ReplayTimer(speed);
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSCdUrPEe2NP6AzGuGlzg" name="stopTimer" specification="_0Rh0x0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>timer.cancel();
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RhNsErPEe2NP6AzGuGlzg" name="ReplayListener" method="_0gRbYErPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0RhNsUrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0RhNskrPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gihLkrPEe2NP6AzGuGlzg">
                        <body>The contructor of a new ReplayListener.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RhNs0rPEe2NP6AzGuGlzg" type="_0RgmoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RhNtErPEe2NP6AzGuGlzg" name="pauseGame" isStatic="true" method="_0gRbZErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihL0rPEe2NP6AzGuGlzg">
                        <body>Pauses game.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RhNtUrPEe2NP6AzGuGlzg" name="resumeGame" isStatic="true" method="_0gRbZUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihMErPEe2NP6AzGuGlzg">
                        <body>Public resumes game for ReplayGui.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RhNtkrPEe2NP6AzGuGlzg" name="speed">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RhNt0rPEe2NP6AzGuGlzg" name="resumeGame" visibility="private" isStatic="true" method="_0gRbZ0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihMUrPEe2NP6AzGuGlzg">
                        <body>Private resumes game for the key listener.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Rh0wErPEe2NP6AzGuGlzg" name="loadLevel" isStatic="true" method="_0gRbaErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihMkrPEe2NP6AzGuGlzg">
                        <body>Starts the level of the game based on currentLevel string.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Rh0wUrPEe2NP6AzGuGlzg" name="loadTimer" visibility="private" isStatic="true" method="_0gRbaUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihM0rPEe2NP6AzGuGlzg">
                        <body>Creates the Replay timer for a level</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Rh0wkrPEe2NP6AzGuGlzg" name="nextMove" isStatic="true" method="_0gSCcErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gihNErPEe2NP6AzGuGlzg">
                        <body>Do the next step in the game.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Rh0w0rPEe2NP6AzGuGlzg" name="setAutoPlay" isStatic="true" method="_0gSCcUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gjIMErPEe2NP6AzGuGlzg">
                        <body>Sets the ReplayListener to do autoplay.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Rh0xErPEe2NP6AzGuGlzg" name="setStepByStep" isStatic="true" method="_0gSCckrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gjIMUrPEe2NP6AzGuGlzg">
                        <body>Sets the ReplayListener to do Step-By-Step.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Rh0xUrPEe2NP6AzGuGlzg" name="changeTimerSpeed" isStatic="true" method="_0gSCc0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gjIMkrPEe2NP6AzGuGlzg">
                        <body>Change the speed for the timer.
   * 
   * @param speed - The speed of the timer we are changing too.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0Rh0xkrPEe2NP6AzGuGlzg" name="speed">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Rh0x0rPEe2NP6AzGuGlzg" name="stopTimer" isStatic="true" method="_0gSCdUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gjIM0rPEe2NP6AzGuGlzg">
                        <body>Stops the timer for the game.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0e1Q8ErPEe2NP6AzGuGlzg" name="keyTyped">
                      <ownedParameter xmi:id="_0e1Q8UrPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0e14AErPEe2NP6AzGuGlzg" name="keyPressed">
                      <ownedParameter xmi:id="_0e14AUrPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0e2fEErPEe2NP6AzGuGlzg" name="keyReleased" method="_0gRbYkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0e2fEUrPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0Rjp8ErPEe2NP6AzGuGlzg" name="ReplayTimer">
                    <ownedComment xmi:id="_0gjINErPEe2NP6AzGuGlzg">
                      <body>The replay timer class, this extends the Timer class. 
* We can change the speed the timer ticks.
*
* @author Kalani Sheridan - ID: 300527652</body>
                    </ownedComment>
                    <generalization xmi:id="_0e3tMErPEe2NP6AzGuGlzg" general="_0caPEErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fkQwErPEe2NP6AzGuGlzg" name="pingRate" visibility="private" isLeaf="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fk30ErPEe2NP6AzGuGlzg" name="firstPing" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fk30krPEe2NP6AzGuGlzg" name="t" visibility="private" isLeaf="true" type="_0ca2IUrPEe2NP6AzGuGlzg" isReadOnly="true" association="_0g_NEErPEe2NP6AzGuGlzg">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fk300rPEe2NP6AzGuGlzg" value="new TimerTask() {&#xA;        public void run() {&#xA;            ping();&#xA;        }&#xA;    }"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSCdkrPEe2NP6AzGuGlzg" name="ReplayTimer" specification="_0Rjp8UrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gSCd0rPEe2NP6AzGuGlzg" name="speed">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gSCeErPEe2NP6AzGuGlzg" type="_0Rjp8ErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>super();
     firstPing = true;
     pingRate = speed;
     this.scheduleAtFixedRate(t, 0, (long) pingRate);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSCeUrPEe2NP6AzGuGlzg" name="ReplayTimer" specification="_0d3noErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gSCekrPEe2NP6AzGuGlzg" name="timer" type="_0Rjp8ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gSCe0rPEe2NP6AzGuGlzg" type="_0Rjp8ErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>super();
     firstPing = true;
     pingRate = timer.pingRate;
     this.scheduleAtFixedRate(t, 0, (long) pingRate);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSCfErPEe2NP6AzGuGlzg" name="ping" specification="_0RkRAErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>if (ReplayListener.isAutoPlay 
         &amp;&amp; ReplayListener.currentGame != null
         &amp;&amp; !firstPing) {
         //Move the enemies in Domain
         ReplayListener.currentGame.moveActors();
         //Move the player
         ReplayListener.nextMove();
     }
     if(firstPing){
         this.firstPing = false;
     }
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0Rjp8UrPEe2NP6AzGuGlzg" name="ReplayTimer" method="_0gSCdkrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0Rjp80rPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0Rjp9ErPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gjINUrPEe2NP6AzGuGlzg">
                        <body>The timer construcor.
     * 
     * @param speed - The speed we are setting.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0Rjp8krPEe2NP6AzGuGlzg" name="speed">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0Rjp9UrPEe2NP6AzGuGlzg" type="_0Rjp8ErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RkRAErPEe2NP6AzGuGlzg" name="ping" visibility="protected" method="_0gSCfErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gjIN0rPEe2NP6AzGuGlzg">
                        <body>Function that runs whenever the timer triggers</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0d3noErPEe2NP6AzGuGlzg" name="ReplayTimer" method="_0gSCeUrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0d3nokrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0d3no0rPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gjINkrPEe2NP6AzGuGlzg">
                        <body>The timer constructor when working off another timer.
     * 
     * @param timer - The previous timer.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0d3noUrPEe2NP6AzGuGlzg" name="timer" type="_0Rjp8ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0d3npErPEe2NP6AzGuGlzg" type="_0Rjp8ErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0en1kErPEe2NP6AzGuGlzg" name="T"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0epDsUrPEe2NP6AzGuGlzg" name="E"/>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g5tgUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g5tgkrPEe2NP6AzGuGlzg _0fbt4ErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g5tgkrPEe2NP6AzGuGlzg" name="" type="_0RYq0ErPEe2NP6AzGuGlzg" association="_0g5tgUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g5thErPEe2NP6AzGuGlzg" name="" memberEnd="_0g5thUrPEe2NP6AzGuGlzg _0fbt4krPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g5thUrPEe2NP6AzGuGlzg" name="" type="_0RYq0ErPEe2NP6AzGuGlzg" association="_0g5thErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g6UkUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g6UkkrPEe2NP6AzGuGlzg _0fcU80rPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g6UkkrPEe2NP6AzGuGlzg" name="" type="_0RagAErPEe2NP6AzGuGlzg" association="_0g6UkUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g6UlErPEe2NP6AzGuGlzg" name="" memberEnd="_0g6UlUrPEe2NP6AzGuGlzg _0fc8AErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g6UlUrPEe2NP6AzGuGlzg" name="" type="_0RagAErPEe2NP6AzGuGlzg" association="_0g6UlErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g67oUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g67okrPEe2NP6AzGuGlzg _0fc8AkrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g67okrPEe2NP6AzGuGlzg" name="" type="_0RagAErPEe2NP6AzGuGlzg" association="_0g67oUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g67pErPEe2NP6AzGuGlzg" name="" memberEnd="_0g67pUrPEe2NP6AzGuGlzg _0feKIErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g67pUrPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g67pErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g67p0rPEe2NP6AzGuGlzg" name="" memberEnd="_0g67qErPEe2NP6AzGuGlzg _0feKIkrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g67qErPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g67p0rPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g7isUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g7iskrPEe2NP6AzGuGlzg _0fexMUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g7iskrPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g7isUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g7itErPEe2NP6AzGuGlzg" name="" memberEnd="_0g7itUrPEe2NP6AzGuGlzg _0fexM0rPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g7itUrPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g7itErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g8JwUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g8JwkrPEe2NP6AzGuGlzg _0fexNUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g8JwkrPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g8JwUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g8JxErPEe2NP6AzGuGlzg" name="" memberEnd="_0g8JxUrPEe2NP6AzGuGlzg _0ffYQUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g8JxUrPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g8JxErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g8Jx0rPEe2NP6AzGuGlzg" name="" memberEnd="_0g8JyErPEe2NP6AzGuGlzg _0ffYQ0rPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g8JyErPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g8Jx0rPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g8w0UrPEe2NP6AzGuGlzg" name="" memberEnd="_0g8w0krPEe2NP6AzGuGlzg _0ffYRUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g8w0krPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g8w0UrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g8w1ErPEe2NP6AzGuGlzg" name="" memberEnd="_0g8w1UrPEe2NP6AzGuGlzg _0ff_UUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g8w1UrPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g8w1ErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g9X4UrPEe2NP6AzGuGlzg" name="" memberEnd="_0g9X4krPEe2NP6AzGuGlzg _0ff_U0rPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g9X4krPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g9X4UrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g9X5ErPEe2NP6AzGuGlzg" name="" memberEnd="_0g9X5UrPEe2NP6AzGuGlzg _0ff_VUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g9X5UrPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g9X5ErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g9-8UrPEe2NP6AzGuGlzg" name="" memberEnd="_0g9-8krPEe2NP6AzGuGlzg _0fgmYUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g9-8krPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g9-8UrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g9-9ErPEe2NP6AzGuGlzg" name="" memberEnd="_0g9-9UrPEe2NP6AzGuGlzg _0fgmY0rPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g9-9UrPEe2NP6AzGuGlzg" name="" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g9-9ErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g-mAUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g-mAkrPEe2NP6AzGuGlzg _0fhNcErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g-mAkrPEe2NP6AzGuGlzg" name="" type="_0RgmoErPEe2NP6AzGuGlzg" association="_0g-mAUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g-mBErPEe2NP6AzGuGlzg" name="" memberEnd="_0g-mBUrPEe2NP6AzGuGlzg _0fjCo0rPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g-mBUrPEe2NP6AzGuGlzg" name="" type="_0RgmoErPEe2NP6AzGuGlzg" association="_0g-mBErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g_NEErPEe2NP6AzGuGlzg" name="" memberEnd="_0g_NEUrPEe2NP6AzGuGlzg _0fk30krPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g_NEUrPEe2NP6AzGuGlzg" name="" type="_0Rjp8ErPEe2NP6AzGuGlzg" association="_0g_NEErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                </packagedElement>
                <packagedElement xmi:type="uml:Package" xmi:id="_0N3cw0rPEe2NP6AzGuGlzg" name="renderer">
                  <packagedElement xmi:type="uml:Package" xmi:id="_0ODqAErPEe2NP6AzGuGlzg" name="Sounds">
                    <packagedElement xmi:type="uml:Class" xmi:id="_0Rn7YUrPEe2NP6AzGuGlzg" name="SoundEffects">
                      <ownedComment xmi:id="_0gjIPErPEe2NP6AzGuGlzg">
                        <body>A class that allows the ability to play audio. 
@author Adam Goodyear 300575240</body>
                      </ownedComment>
                      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gTQmErPEe2NP6AzGuGlzg" name="playSound" specification="_0RoicErPEe2NP6AzGuGlzg">
                        <ownedParameter xmi:id="_0gTQmUrPEe2NP6AzGuGlzg" name="filename">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        </ownedParameter>
                        <language>java</language>
                        <body>try {
         File soundPath = new File(&quot;nz/ac/vuw/ecs/swen225/gp22/renderer/Sounds/&quot; + filename + &quot;.wav&quot;);
         if (soundPath.exists()) {
             AudioInputStream audioInput = AudioSystem.getAudioInputStream(soundPath);
             Clip clip = AudioSystem.getClip();
             clip.open(audioInput);
             clip.start();
         } else {
             System.out.println(&quot;Can't find file: &quot; + soundPath);
         }
     } catch (Exception e) {
         System.out.println(&quot;Could not play sound: &quot; + e);
     }
 </body>
                      </ownedBehavior>
                      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gTQmkrPEe2NP6AzGuGlzg" name="loopSound" specification="_0RoickrPEe2NP6AzGuGlzg">
                        <ownedParameter xmi:id="_0gTQm0rPEe2NP6AzGuGlzg" name="filename">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        </ownedParameter>
                        <language>java</language>
                        <body>try {
         File soundPath = new File(&quot;nz/ac/vuw/ecs/swen225/gp22/renderer/Sounds/&quot; + filename + &quot;.wav&quot;);
         if (soundPath.exists()) {
             AudioInputStream audioInput = AudioSystem.getAudioInputStream(soundPath);
             Clip clip = AudioSystem.getClip();
             clip.open(audioInput);
             clip.start();
             clip.loop(clip.LOOP_CONTINUOUSLY);
         } else {
             System.out.println(&quot;Can't find file: &quot; + soundPath);
         }
     } catch (Exception e) {
         System.out.println(&quot;Could not play sound: &quot; + e);
     }
 </body>
                      </ownedBehavior>
                      <ownedOperation xmi:id="_0RoicErPEe2NP6AzGuGlzg" name="playSound" isStatic="true" method="_0gTQmErPEe2NP6AzGuGlzg">
                        <ownedParameter xmi:id="_0RoicUrPEe2NP6AzGuGlzg" name="filename">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        </ownedParameter>
                      </ownedOperation>
                      <ownedOperation xmi:id="_0RoickrPEe2NP6AzGuGlzg" name="loopSound" isStatic="true" method="_0gTQmkrPEe2NP6AzGuGlzg">
                        <ownedParameter xmi:id="_0Roic0rPEe2NP6AzGuGlzg" name="filename">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        </ownedParameter>
                      </ownedOperation>
                    </packagedElement>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Package" xmi:id="_0OFfMErPEe2NP6AzGuGlzg" name="Sprites">
                    <packagedElement xmi:type="uml:Enumeration" xmi:id="_0RoidErPEe2NP6AzGuGlzg" name="Img">
                      <ownedComment xmi:id="_0gjIPUrPEe2NP6AzGuGlzg">
                        <body>A class that allows access to the different sprites.
@author Adam Goodyear 300575240</body>
                      </ownedComment>
                      <ownedAttribute xmi:id="_0fpwUErPEe2NP6AzGuGlzg" name="image" isLeaf="true" type="_0d4OsErPEe2NP6AzGuGlzg" isReadOnly="true" association="_0g_NFkrPEe2NP6AzGuGlzg"/>
                      <ownedOperation xmi:id="_0RqXoErPEe2NP6AzGuGlzg" name="Img" visibility="package" method="_0gTQnErPEe2NP6AzGuGlzg">
                        <eAnnotations xmi:id="_0RqXoUrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                          <details xmi:id="_0RqXokrPEe2NP6AzGuGlzg" key="create"/>
                        </eAnnotations>
                        <ownedParameter xmi:id="_0RqXo0rPEe2NP6AzGuGlzg" type="_0RoidErPEe2NP6AzGuGlzg" direction="return"/>
                      </ownedOperation>
                      <ownedOperation xmi:id="_0RqXpErPEe2NP6AzGuGlzg" name="loadImage" visibility="private" isStatic="true" method="_0gT3oUrPEe2NP6AzGuGlzg">
                        <ownedParameter xmi:id="_0RqXpUrPEe2NP6AzGuGlzg" name="name">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        </ownedParameter>
                        <ownedParameter xmi:id="_0e8lsErPEe2NP6AzGuGlzg" type="_0d4OsErPEe2NP6AzGuGlzg" direction="return"/>
                      </ownedOperation>
                      <ownedLiteral xmi:id="_0RoidUrPEe2NP6AzGuGlzg" name="WallSprite"/>
                      <ownedLiteral xmi:id="_0RoidkrPEe2NP6AzGuGlzg" name="FloorSprite"/>
                      <ownedLiteral xmi:id="_0RpJgErPEe2NP6AzGuGlzg" name="BlueDoor"/>
                      <ownedLiteral xmi:id="_0RpJgUrPEe2NP6AzGuGlzg" name="GreenDoor"/>
                      <ownedLiteral xmi:id="_0RpJgkrPEe2NP6AzGuGlzg" name="PurpleDoor"/>
                      <ownedLiteral xmi:id="_0RpJg0rPEe2NP6AzGuGlzg" name="RedDoor"/>
                      <ownedLiteral xmi:id="_0RpJhErPEe2NP6AzGuGlzg" name="YellowDoor"/>
                      <ownedLiteral xmi:id="_0RpJhUrPEe2NP6AzGuGlzg" name="BlueKey"/>
                      <ownedLiteral xmi:id="_0RpJhkrPEe2NP6AzGuGlzg" name="GreenKey"/>
                      <ownedLiteral xmi:id="_0RpJh0rPEe2NP6AzGuGlzg" name="PurpleKey"/>
                      <ownedLiteral xmi:id="_0RpJiErPEe2NP6AzGuGlzg" name="RedKey"/>
                      <ownedLiteral xmi:id="_0RpJiUrPEe2NP6AzGuGlzg" name="YellowKey"/>
                      <ownedLiteral xmi:id="_0RpJikrPEe2NP6AzGuGlzg" name="Exit"/>
                      <ownedLiteral xmi:id="_0RpJi0rPEe2NP6AzGuGlzg" name="ExitLock"/>
                      <ownedLiteral xmi:id="_0RpJjErPEe2NP6AzGuGlzg" name="Treasure"/>
                      <ownedLiteral xmi:id="_0RpJjUrPEe2NP6AzGuGlzg" name="InfoField"/>
                      <ownedLiteral xmi:id="_0RpwkErPEe2NP6AzGuGlzg" name="Enemy"/>
                      <ownedLiteral xmi:id="_0RpwkUrPEe2NP6AzGuGlzg" name="Empty"/>
                      <ownedLiteral xmi:id="_0RpwkkrPEe2NP6AzGuGlzg" name="Title"/>
                      <ownedLiteral xmi:id="_0Rpwk0rPEe2NP6AzGuGlzg" name="ChapL"/>
                      <ownedLiteral xmi:id="_0RpwlErPEe2NP6AzGuGlzg" name="ChapR"/>
                    </packagedElement>
                    <packagedElement xmi:type="uml:Association" xmi:id="_0g_NFkrPEe2NP6AzGuGlzg" name="" memberEnd="_0g_NF0rPEe2NP6AzGuGlzg _0fpwUErPEe2NP6AzGuGlzg">
                      <ownedEnd xmi:id="_0g_NF0rPEe2NP6AzGuGlzg" name="" type="_0RoidErPEe2NP6AzGuGlzg" association="_0g_NFkrPEe2NP6AzGuGlzg"/>
                    </packagedElement>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RGW8ErPEe2NP6AzGuGlzg" name="TestRender">
                    <ownedComment xmi:id="_0ggr80rPEe2NP6AzGuGlzg">
                      <body>main class that tests renderer components
@author Adam Goodyear 300575240</body>
                    </ownedComment>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gLUwErPEe2NP6AzGuGlzg" name="main" specification="_0RGW8UrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gLUwUrPEe2NP6AzGuGlzg" name="args">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gLUwkrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>Renderer r = new Renderer(1000, 1000);
     r.setUpGUI();
     SoundEffects s = new SoundEffects();
     s.loopSound(&quot;Test&quot;);
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RGW8UrPEe2NP6AzGuGlzg" name="main" isStatic="true" method="_0gLUwErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RGW8krPEe2NP6AzGuGlzg" name="args">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0RGW80rPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0Rk4EErPEe2NP6AzGuGlzg" name="BoardPanel">
                    <ownedComment xmi:id="_0gjIOErPEe2NP6AzGuGlzg">
                      <body>class which renders the board and
supplies functions to locate positions on the board.
@author Adam Goodyear 300575240</body>
                    </ownedComment>
                    <generalization xmi:id="_0e6wgkrPEe2NP6AzGuGlzg" general="_0cdSYUrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fle4ErPEe2NP6AzGuGlzg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fle4UrPEe2NP6AzGuGlzg" value="1L"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fle4krPEe2NP6AzGuGlzg" name="cols" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fle40rPEe2NP6AzGuGlzg" value="11"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fle5ErPEe2NP6AzGuGlzg" name="rows" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fle5UrPEe2NP6AzGuGlzg" value="11"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fle5krPEe2NP6AzGuGlzg" name="chapDirection" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fmF8ErPEe2NP6AzGuGlzg" value="true"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fmF8krPEe2NP6AzGuGlzg" name="originX" visibility="package" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fmF80rPEe2NP6AzGuGlzg" value="200"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fmF9UrPEe2NP6AzGuGlzg" name="originY" visibility="package" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fmF9krPEe2NP6AzGuGlzg" value="200"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fmtAUrPEe2NP6AzGuGlzg" name="xSpacing" visibility="package" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fmtAkrPEe2NP6AzGuGlzg" value="(1000 - (originX * 2)) / cols"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fmtBErPEe2NP6AzGuGlzg" name="ySpacing" visibility="package" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fmtBUrPEe2NP6AzGuGlzg" value="(1000 - (originY * 2)) / rows"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fnUEUrPEe2NP6AzGuGlzg" name="xEndPoint" visibility="package" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fnUEkrPEe2NP6AzGuGlzg" value="originX + xSpacing * 11"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fnUFErPEe2NP6AzGuGlzg" name="yEndPoint" visibility="package" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fnUFUrPEe2NP6AzGuGlzg" value="originY + ySpacing * 11"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSpgErPEe2NP6AzGuGlzg" name="paintComponent" specification="_0e4UQErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gSpgUrPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>g.setColor(new Color(85, 73, 148));
 super.paintComponent(g);
 g.fillRect(0, 0, 1000, 1000);
 g.setColor(new Color(255, 204, 179));
 g.fillRect(
   originX - 10,
   originY - 10,
   xEndPoint - originX + 20,
   yEndPoint - originY + 20
 );
 g.setColor(new Color(46, 39, 82));
 g.fillRect(originX, originY, xEndPoint - originX, yEndPoint - originY);
 createGrid(g);

 if (GUI.replayGui() != null) {
   updateGrid(ReplayListener.currentGame, g);
   ReplayGui.drawText(g);
 } else if (GUI.instance != null) {
   updateGrid(UserListener.currentGame, g);
   GUI.drawText(g);
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSpgkrPEe2NP6AzGuGlzg" name="createGrid" specification="_0e47VErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gSpg0rPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>g.setColor(new Color(255, 204, 179));
 int tempOriginX = originX;
 for (int i = 0; i &lt;= cols; i++) {
   g.drawLine(originX, originY, originX, yEndPoint);
   originX = originX + (xSpacing);
 }
 originX = tempOriginX;

 int tempOriginY = originY;
 for (int i = 0; i &lt;= rows; i++) {
   g.drawLine(originX, originY, xEndPoint, originY);
   originY = originY + (ySpacing);
 }
 originY = tempOriginY;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSphErPEe2NP6AzGuGlzg" name="drawImg" specification="_0e5iYUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gSphUrPEe2NP6AzGuGlzg" name="img" type="_0d4OsErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gSphkrPEe2NP6AzGuGlzg" name="x">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gSph0rPEe2NP6AzGuGlzg" name="y">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gSpiErPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>g.drawImage(
   img,
   getXPos(x),
   getYPos(y),
   getXPos(x) + xSpacing,
   getYPos(y) + ySpacing,
   0,
   0,
   img.getWidth(),
   img.getHeight(),
   null
 );
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSpiUrPEe2NP6AzGuGlzg" name="getXPos" specification="_0RlfIErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gSpikrPEe2NP6AzGuGlzg" name="x">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gSpi0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return originX + (xSpacing * x);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSpjErPEe2NP6AzGuGlzg" name="getYPos" specification="_0RlfI0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gSpjUrPEe2NP6AzGuGlzg" name="y">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gSpjkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return originY + (ySpacing * y);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gSpj0rPEe2NP6AzGuGlzg" name="updateGrid" specification="_0e6JcErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gSpkErPEe2NP6AzGuGlzg" name="d" type="_0QZzYErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gSpkUrPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>TileParser(d, g);
 if(chapDirection){
   drawImg(Img.ChapL.image, 5, 5, g);
 } else {
   drawImg(Img.ChapR.image, 5, 5, g);
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gTQkErPEe2NP6AzGuGlzg" name="TileParser" specification="_0e6Jc0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gTQkUrPEe2NP6AzGuGlzg" name="d" type="_0QZzYErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gTQkkrPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>Tile[][] t = d.getGraphicalState();
 Point p = d.getPlayerGraphicalPosition();

 for (int y = p.row() - 5; y &lt; p.row() + 6; y++) {
   for (int x = p.col() - 5; x &lt; p.col() + 6; x++) {
     int newX = x - (p.col() - 5);
     int newY = y - (p.row() - 5);

     // if out of bounds then draw floorsprite and continue
     if (y >= t.length || y &lt; 0) {
       drawImg(Img.FloorSprite.image, newX, newY, g);
       continue;
     }
     if (x >= t[0].length || x &lt; 0) {
       drawImg(Img.FloorSprite.image, newX, newY, g);
       continue;
     }

     if (t[y][x].name().equals(&quot;wall&quot;)) {
       drawImg(Img.WallSprite.image, newX, newY, g);
     } else if (t[y][x].name().equals(&quot;treasure&quot;)) {
       drawImg(Img.Treasure.image, newX, newY, g);
     } else if (t[y][x].name().equals(&quot;exitLock&quot;)) {
       drawImg(Img.ExitLock.image, newX, newY, g);
     } else if (t[y][x].name().equals(&quot;exit&quot;)) {
       drawImg(Img.Exit.image, newX, newY, g);
     } else if (t[y][x].name().equals(&quot;info&quot;)) {
       drawImg(Img.InfoField.image, newX, newY, g);
     } else if (t[y][x].name().equals(&quot;key&quot;)) {
       if (t[y][x].colour().equals(&quot;PINK&quot;)) {
         drawImg(Img.RedKey.image, newX, newY, g);
       } else if (t[y][x].colour().equals(&quot;GREEN&quot;)) {
         drawImg(Img.GreenKey.image, newX, newY, g);
       } else if (t[y][x].colour().equals(&quot;PURPLE&quot;)) {
         drawImg(Img.PurpleKey.image, newX, newY, g);
       } else if (t[y][x].colour().equals(&quot;BLUE&quot;)) {
         drawImg(Img.BlueKey.image, newX, newY, g);
       } else if (t[y][x].colour().equals(&quot;YELLOW&quot;)) {
         drawImg(Img.YellowKey.image, newX, newY, g);
       } else {
         drawImg(Img.Empty.image, newX, newY, g);
       }
     } else if (t[y][x].name().equals(&quot;door&quot;)) {
       if (t[y][x].colour().equals(&quot;PINK&quot;)) {
         drawImg(Img.RedDoor.image, newX, newY, g);
       } else if (t[y][x].colour().equals(&quot;GREEN&quot;)) {
         drawImg(Img.GreenDoor.image, newX, newY, g);
       } else if (t[y][x].colour().equals(&quot;Purple&quot;)) {
         drawImg(Img.PurpleDoor.image, newX, newY, g);
       } else if (t[y][x].colour().equals(&quot;BLUE&quot;)) {
         drawImg(Img.BlueDoor.image, newX, newY, g);
       } else if (t[y][x].colour().equals(&quot;YELLOW&quot;)) {
         drawImg(Img.YellowDoor.image, newX, newY, g);
       } else {
         drawImg(Img.Empty.image, newX, newY, g);
       }
     } else if (t[y][x].name().equals(&quot;empty&quot;)) {
       drawImg(Img.FloorSprite.image, newX, newY, g);
     } else {
       drawImg(Img.Empty.image, newX, newY, g);
     }
   }
 }

 d.getEnemies().stream()
   .filter(e -> e.getPosition().col() - (p.col() - 6) > -1 &amp;&amp; e.getPosition().col() - (p.col() - 6) &lt; 11 &amp;&amp; e.getPosition().row() - (p.row() - 6) > -1 &amp;&amp; e.getPosition().row() - (p.row() - 6) &lt; 11)
   .forEach(e -> drawImg(Img.Enemy.image, e.getPosition().col() - (p.col() - 6), e.getPosition().row() - (p.row() - 6),g));
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RlfIErPEe2NP6AzGuGlzg" name="getXPos" method="_0gSpiUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RlfIUrPEe2NP6AzGuGlzg" name="x">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0RlfIkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RlfI0rPEe2NP6AzGuGlzg" name="getYPos" method="_0gSpjErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RlfJErPEe2NP6AzGuGlzg" name="y">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0RlfJUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0e4UQErPEe2NP6AzGuGlzg" name="paintComponent" visibility="protected" method="_0gSpgErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0e47UErPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0e47VErPEe2NP6AzGuGlzg" name="createGrid" visibility="private" method="_0gSpgkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0e5iYErPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0e5iYUrPEe2NP6AzGuGlzg" name="drawImg" method="_0gSphErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0e5iYkrPEe2NP6AzGuGlzg" name="img" type="_0d4OsErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0e5iY0rPEe2NP6AzGuGlzg" name="x">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0e5iZErPEe2NP6AzGuGlzg" name="y">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0e5iZUrPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0e6JcErPEe2NP6AzGuGlzg" name="updateGrid" method="_0gSpj0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0e6JcUrPEe2NP6AzGuGlzg" name="d" type="_0QZzYErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0e6JckrPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0e6Jc0rPEe2NP6AzGuGlzg" name="TileParser" method="_0gTQkErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0e6wgErPEe2NP6AzGuGlzg" name="d" type="_0QZzYErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0e6wgUrPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RnUUErPEe2NP6AzGuGlzg" name="Renderer">
                    <ownedComment xmi:id="_0gjIOUrPEe2NP6AzGuGlzg">
                      <body>sets up the GUI and regins rendering.
@author Adam Goodyear 300575240</body>
                    </ownedComment>
                    <generalization xmi:id="_0e7-oErPEe2NP6AzGuGlzg" general="_0ccEQ0rPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fn7IErPEe2NP6AzGuGlzg" name="width" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0foiMErPEe2NP6AzGuGlzg" name="height" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0foiMkrPEe2NP6AzGuGlzg" name="panel" type="_0Rk4EErPEe2NP6AzGuGlzg" association="_0g_NE0rPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gTQk0rPEe2NP6AzGuGlzg" name="Renderer" specification="_0RnUUUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gTQlErPEe2NP6AzGuGlzg" name="w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gTQlUrPEe2NP6AzGuGlzg" name="h">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gTQlkrPEe2NP6AzGuGlzg" type="_0RnUUErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>width = w;
 height = h;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gTQl0rPEe2NP6AzGuGlzg" name="setUpGUI" specification="_0Rn7YErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>setSize(width, height);
 setTitle(&quot;Test Title&quot;);
 setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

 panel = new BoardPanel();
 add(panel);
 setVisible(true);
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RnUUUrPEe2NP6AzGuGlzg" name="Renderer" method="_0gTQk0rPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0RnUVErPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0RnUVUrPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gjIOkrPEe2NP6AzGuGlzg">
                        <body>constructor for renderer
  * 
  * @param width renderer width
  * @param width renderer height</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RnUUkrPEe2NP6AzGuGlzg" name="w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0RnUU0rPEe2NP6AzGuGlzg" name="h">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0RnUVkrPEe2NP6AzGuGlzg" type="_0RnUUErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Rn7YErPEe2NP6AzGuGlzg" name="setUpGUI" method="_0gTQl0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gjIO0rPEe2NP6AzGuGlzg">
                        <body>Set up function sets up the GUI</body>
                      </ownedComment>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g_NE0rPEe2NP6AzGuGlzg" name="" memberEnd="_0g_NFErPEe2NP6AzGuGlzg _0foiMkrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g_NFErPEe2NP6AzGuGlzg" name="" type="_0RnUUErPEe2NP6AzGuGlzg" association="_0g_NE0rPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                </packagedElement>
                <packagedElement xmi:type="uml:Package" xmi:id="_0N_YkErPEe2NP6AzGuGlzg" name="app">
                  <packagedElement xmi:type="uml:Class" xmi:id="_0P3A0ErPEe2NP6AzGuGlzg" name="GUI">
                    <generalization xmi:id="_0cXy0UrPEe2NP6AzGuGlzg" general="_0RnUUErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fGWsErPEe2NP6AzGuGlzg" name="instance" isStatic="true" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0gxKoErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fGWsUrPEe2NP6AzGuGlzg" name="listener" type="_0QItoErPEe2NP6AzGuGlzg" association="_0gxxsUrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fGWskrPEe2NP6AzGuGlzg" name="pauseButton" visibility="private" type="_0cRsM0rPEe2NP6AzGuGlzg" association="_0gxxtErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fG9wErPEe2NP6AzGuGlzg" name="menuBar" visibility="private" type="_0cS6UUrPEe2NP6AzGuGlzg" association="_0gyYwUrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fG9wUrPEe2NP6AzGuGlzg" name="menu" visibility="private" type="_0cSTQUrPEe2NP6AzGuGlzg" association="_0gyYxErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fG9wkrPEe2NP6AzGuGlzg" name="exitItem" visibility="private" type="_0cS6U0rPEe2NP6AzGuGlzg" association="_0gy_0UrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fG9w0rPEe2NP6AzGuGlzg" name="saveItem" visibility="private" type="_0cS6U0rPEe2NP6AzGuGlzg" association="_0gy_1ErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fHk0ErPEe2NP6AzGuGlzg" name="rulesItem" visibility="private" type="_0cS6U0rPEe2NP6AzGuGlzg" association="_0gzm4UrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fHk0UrPEe2NP6AzGuGlzg" name="recordPlayerItem" visibility="private" type="_0cS6U0rPEe2NP6AzGuGlzg" association="_0gzm5ErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fHk0krPEe2NP6AzGuGlzg" name="playSavedItem" visibility="private" type="_0cS6U0rPEe2NP6AzGuGlzg" association="_0g0N8UrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fHk00rPEe2NP6AzGuGlzg" name="metal" visibility="package" type="_0cVWk0rPEe2NP6AzGuGlzg" association="_0g0N9ErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fIL4ErPEe2NP6AzGuGlzg" name="rulesText" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fIL4UrPEe2NP6AzGuGlzg" value="&quot;You're a little rabbit, try and navigate through the maze and collect all the carrots before time runs out!\n&quot; +&#xA;    &quot;\n&quot; +&#xA;    &quot;Controls:&quot; +&#xA;    &quot;- Up, down, left and right arrow keys move the rabbit\n&quot; +&#xA;    &quot;- Ctrl-X exits the game\n&quot; +&#xA;    &quot;- Ctrl-S saves and exits the game\n&quot; +&#xA;    &quot;- Ctrl-R resumes a saved game\n&quot; +&#xA;    &quot;- Ctrl-1 and Ctrl-2 start games at level 1 and level 2\n&quot; +&#xA;    &quot;- Space to Pause game, Esc to Play game (as well as the pause/play button\n&quot; +&#xA;    &quot;- There are menu items for showing rules, saving, exiting, and showing recorded levels\n&quot; +&#xA;    &quot;\n&quot; +&#xA;    &quot;Core game mechanics:\n&quot; +&#xA;    &quot;- Collect all the carrots and walk down the rabbit hole to win\n&quot; +&#xA;    &quot;- Collect keys to open doors of their respective colours\n&quot; +&#xA;    &quot;- Avoid colliding with enemies\n&quot;"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fIL4krPEe2NP6AzGuGlzg" name="replayGUI" visibility="private" isStatic="true" type="_0RcVMErPEe2NP6AzGuGlzg" association="_0g01AUrPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f3ywErPEe2NP6AzGuGlzg" name="GUI" specification="_0P9HcErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f3ywUrPEe2NP6AzGuGlzg" type="_0P3A0ErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>super(1000, 1000);
 setUpGUI();
 instance = this;
 metal = new MetalLookAndFeel();
 MetalLookAndFeel.setCurrentTheme(new DefaultMetalTheme());
 try {
   UIManager.setLookAndFeel(metal);
 } catch (UnsupportedLookAndFeelException e) {
   e.printStackTrace();
 }
 System.out.println(&quot;BREAKPOINT: Creating user listener....&quot;);
 listener = new UserListener();
 setLayout(new BorderLayout());
 //Make a JButton pauseButton
 pauseButton = new JButton(&quot;⏸&quot;);
 pauseButton.setPreferredSize(new Dimension(40, 40));
 pauseButton.addActionListener(
   e -> {
     if (!UserListener.paused()) {
       pauseGame();
     } else {
       resumeGame();
     }
   }
 );
 panel.setLayout(null);
 pauseButton.setFont(
   new Font(pauseButton.getFont().getName(), Font.PLAIN, 40)
 );
 pauseButton.setMargin(new Insets(0, 0, 0, 0));
 pauseButton.setBounds(900, 50, 50, 50);
 panel.add(pauseButton);
 //Make exiting, saving showing rules and record playing menu items
 menuBar = new JMenuBar();
 menuBar.setBorder(
   BorderFactory.createCompoundBorder(
     menuBar.getBorder(),
     BorderFactory.createEmptyBorder(0, 0, 0, 0)
   )
 );
 menu = new JMenu(&quot;Menu Items&quot;);
 menu.setFont(new Font(&quot;Roboto&quot;, Font.BOLD, 20));
 saveItem = new JMenuItem(&quot;Save Level&quot;);
 rulesItem = new JMenuItem(&quot;Show rules&quot;);
 exitItem = new JMenuItem(&quot;Exit Game&quot;);
 recordPlayerItem = new JMenuItem(&quot;Play recorded game&quot;);
 playSavedItem = new JMenuItem(&quot;Load saved game&quot;);
 menu.add(exitItem);
 menu.add(saveItem);
 menu.add(rulesItem);
 menu.add(recordPlayerItem);
 menu.add(playSavedItem);
 exitItem.addActionListener(e -> UserListener.exitGame());
 saveItem.addActionListener(
   e -> {
     pauseGame();
     UserListener.saveGame();
   }
 );
 rulesItem.addActionListener(e -> showRules());
 recordPlayerItem.addActionListener(e -> playRecord());
 playSavedItem.addActionListener(
   e -> {
     pauseGame();
     UserListener.loadSavedGame();
   }
 );
 menuBar.add(menu);
 this.setJMenuBar(menuBar);
 //Add keylistener to JFrame
 this.addKeyListener(listener);
 this.setFocusable(true);
 System.out.println(&quot;BREAKPOINT: Keys are listening...&quot;);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f8EMErPEe2NP6AzGuGlzg" name="playRecord" specification="_0P-VkkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>pauseGame();
 SwingUtilities.invokeLater(
   () -> {
     replayGUI = new ReplayGui();
   }
 );
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f8EMUrPEe2NP6AzGuGlzg" name="showRules" specification="_0P-VlErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>pauseGame();
 JOptionPane.showMessageDialog(this, rulesText);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f8rQErPEe2NP6AzGuGlzg" name="showToolTip" specification="_0P-8oUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f8rQUrPEe2NP6AzGuGlzg" name="toolTip">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>JOptionPane.showMessageDialog(GUI.instance, toolTip);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f8rQkrPEe2NP6AzGuGlzg" name="removeToolTip" specification="_0P-8pErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>JOptionPane.getRootFrame().dispose();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f8rQ0rPEe2NP6AzGuGlzg" name="drawText" specification="_0eNl4ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f8rRErPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>g.setColor(new Color(50, 50, 50));
 g.fillRect(40, 25, 200, 95);
 g.setFont(new Font(&quot;Roboto&quot;, Font.BOLD, 20));
 g.setColor(Color.RED);
 g.drawString(
   &quot;Current level: &quot; + shortenLevelName(UserListener.currentLevel()),
   50,
   50
 );
 g.setColor(Color.YELLOW);
 g.drawString(
   &quot;Time left: &quot; + UserListener.timer().timeLeftToPlay() / 1000,
   50,
   70
 );
 g.setColor(Color.GREEN);
 g.drawString(
   &quot;Keys collected: &quot; + UserListener.currentGame.keysCollected(),
   50,
   90
 );
 g.setColor(Color.BLUE);
 g.drawString(
   &quot;Carrots left: &quot; + UserListener.currentGame.treasuresLeft(),
   50,
   110
 );
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f8rRUrPEe2NP6AzGuGlzg" name="pauseGame" specification="_0P_jsUrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>pauseButton.setText(&quot;▶&quot;);
 UserListener.pauseGame();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f8rRkrPEe2NP6AzGuGlzg" name="resumeGame" specification="_0P_js0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>pauseButton.setText(&quot;⏸&quot;);
 UserListener.resumeGame();
 this.requestFocus();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f8rR0rPEe2NP6AzGuGlzg" name="closeAll" specification="_0QAKwErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>instance.dispose();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f8rSErPEe2NP6AzGuGlzg" name="shortenLevelName" specification="_0QAKwkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f8rSUrPEe2NP6AzGuGlzg" name="levelName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0f8rSkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if (levelName != null) {
   return levelName.substring(
     Math.max(0, levelName.lastIndexOf(&quot;/&quot;) + 1),
     levelName.length() - 4
   );
 } else {
   return &quot;&quot;;
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f8rS0rPEe2NP6AzGuGlzg" name="replayGui" specification="_0QAx0ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f8rTErPEe2NP6AzGuGlzg" type="_0RcVMErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return replayGUI;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f9SUErPEe2NP6AzGuGlzg" name="closeReplayGui" specification="_0QAx0krPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>replayGUI = null;
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0P9HcErPEe2NP6AzGuGlzg" name="GUI" method="_0f3ywErPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0P9ugErPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0P9ugUrPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gbMYUrPEe2NP6AzGuGlzg">
                        <body>Adds the key listener, creates the buttons and creates the JMenu</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0P-VkErPEe2NP6AzGuGlzg" type="_0P3A0ErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0P-VkkrPEe2NP6AzGuGlzg" name="playRecord" visibility="private" method="_0f8EMErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbMYkrPEe2NP6AzGuGlzg">
                        <body>Plays a recorded game</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0P-VlErPEe2NP6AzGuGlzg" name="showRules" visibility="private" method="_0f8EMUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbMY0rPEe2NP6AzGuGlzg">
                        <body>Show the rules panel</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0P-8oUrPEe2NP6AzGuGlzg" name="showToolTip" isStatic="true" method="_0f8rQErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbMZErPEe2NP6AzGuGlzg">
                        <body>Used by Domain to show tool tips
   * @param toolTip</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0P-8okrPEe2NP6AzGuGlzg" name="toolTip">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0P-8pErPEe2NP6AzGuGlzg" name="removeToolTip" isStatic="true" method="_0f8rQkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbMZUrPEe2NP6AzGuGlzg">
                        <body>Removes all existing tool tips</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0P_jsUrPEe2NP6AzGuGlzg" name="pauseGame" visibility="private" method="_0f8rRUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbMZ0rPEe2NP6AzGuGlzg">
                        <body>A function to change the text of the pause/play button before calling pauseGame in UserListener</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0P_js0rPEe2NP6AzGuGlzg" name="resumeGame" visibility="private" method="_0f8rRkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbMaErPEe2NP6AzGuGlzg">
                        <body>A function to change the text of the pause/play button before calling resumeGame in UserListener</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QAKwErPEe2NP6AzGuGlzg" name="closeAll" isStatic="true" method="_0f8rR0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzcErPEe2NP6AzGuGlzg">
                        <body>A function to close all the JFrames</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QAKwkrPEe2NP6AzGuGlzg" name="shortenLevelName" isStatic="true" method="_0f8rSErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzcUrPEe2NP6AzGuGlzg">
                        <body>A function that processes the level file path, shortening it for displaying
   * @param levelName
   * @return shortened level name</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QAKw0rPEe2NP6AzGuGlzg" name="levelName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QAKxErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QAx0ErPEe2NP6AzGuGlzg" name="replayGui" isStatic="true" method="_0f8rS0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzckrPEe2NP6AzGuGlzg">
                        <body>Getter for replayGui
   * @return replayGui</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0cXy0ErPEe2NP6AzGuGlzg" type="_0RcVMErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QAx0krPEe2NP6AzGuGlzg" name="closeReplayGui" isStatic="true" method="_0f9SUErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzc0rPEe2NP6AzGuGlzg">
                        <body>Close the replay gui</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0eNl4ErPEe2NP6AzGuGlzg" name="drawText" isStatic="true" method="_0f8rQ0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbMZkrPEe2NP6AzGuGlzg">
                        <body>A function that draws various texts, such as current level and keys collected, on the JPanel
   * @param g</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0eNl4UrPEe2NP6AzGuGlzg" name="g" type="_0cQeE0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0QGRYErPEe2NP6AzGuGlzg" name="Main">
                    <ownedComment xmi:id="_0gbzdErPEe2NP6AzGuGlzg">
                      <body>An executable class which starts the game
@author David Lindsay 300584648</body>
                    </ownedComment>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f9SUUrPEe2NP6AzGuGlzg" name="main" specification="_0QG4cErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f9SUkrPEe2NP6AzGuGlzg" name="args">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0f9SU0rPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>SoundEffects.playSound(&quot;music&quot;);
 SwingUtilities.invokeLater(
   () -> {
     System.out.println(&quot;BREAKPOINT: Creating GUI....&quot;);
     new TitleScreen();
   }
 );
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0QG4cErPEe2NP6AzGuGlzg" name="main" isStatic="true" method="_0f9SUUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QG4cUrPEe2NP6AzGuGlzg" name="args">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0QG4ckrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0QHfgErPEe2NP6AzGuGlzg" name="TitleScreen">
                    <generalization xmi:id="_0eO0AErPEe2NP6AzGuGlzg" general="_0ccEQ0rPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fIy8ErPEe2NP6AzGuGlzg" name="startGameButton" visibility="private" type="_0cRsM0rPEe2NP6AzGuGlzg" association="_0g01BErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fIy8krPEe2NP6AzGuGlzg" name="panel" visibility="private" type="_0cdSYUrPEe2NP6AzGuGlzg" association="_0g01B0rPEe2NP6AzGuGlzg">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fJaAErPEe2NP6AzGuGlzg" value="new JPanel()"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f9SVErPEe2NP6AzGuGlzg" name="TitleScreen" specification="_0QHfgUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f9SVUrPEe2NP6AzGuGlzg" type="_0QHfgErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>this.setFocusable(true);
 setSize(1000, 1000);
 setTitle(&quot;Title Screen&quot;);
 setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 setVisible(true);
 startGameButton = new JButton(&quot;Start Game!&quot;);
 startGameButton.addActionListener(
   e -> {
     TitleScreen.this.dispose();
     SwingUtilities.invokeLater(
       () -> {
         new GUI();
       }
     );
   }
 );
 panel.setLayout(null);
 startGameButton.setBounds(350, 200, 300, 80);
 startGameButton.setFont(new Font(&quot;Calibri&quot;, Font.BOLD, 50));
 startGameButton.setLayout(null);
 panel.setVisible(true);
 this.add(panel);
 JLabel picLabel = new JLabel(new ImageIcon(Img.Title.image));
 this.add(startGameButton);
 this.add(picLabel);
 picLabel.setVerticalAlignment(JLabel.TOP);
 picLabel.setPreferredSize(new Dimension(250, 100));
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0QHfgUrPEe2NP6AzGuGlzg" name="TitleScreen" method="_0f9SVErPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0QIGkErPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0QIGkUrPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_0QIGkkrPEe2NP6AzGuGlzg" type="_0QHfgErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0QItoErPEe2NP6AzGuGlzg" name="UserListener">
                    <ownedComment xmi:id="_0gbzdUrPEe2NP6AzGuGlzg">
                      <body>This class listens and reacts to keypresses of the user
@author David Lindsay</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fJaAkrPEe2NP6AzGuGlzg" name="currentGame" isStatic="true" type="_0QZzYErPEe2NP6AzGuGlzg" association="_0g1cEUrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fJaBErPEe2NP6AzGuGlzg" name="move" visibility="private" isStatic="true" type="_0QX-MErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fKBEUrPEe2NP6AzGuGlzg" name="paused" visibility="private" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fKBEkrPEe2NP6AzGuGlzg" value="false"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fKBFErPEe2NP6AzGuGlzg" name="currentLevel" visibility="private" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fKoIUrPEe2NP6AzGuGlzg" name="timer" visibility="private" isStatic="true" type="_0QSeoErPEe2NP6AzGuGlzg" association="_0g1cFErPEe2NP6AzGuGlzg"/>
                    <interfaceRealization xmi:id="_0ePbEkrPEe2NP6AzGuGlzg" client="_0QItoErPEe2NP6AzGuGlzg" supplier="_0ePbEErPEe2NP6AzGuGlzg" contract="_0ePbEErPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f95YErPEe2NP6AzGuGlzg" name="UserListener" specification="_0QJ7wErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f95YUrPEe2NP6AzGuGlzg" type="_0QItoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>move = Direction.NONE;
 currentLevel = fileLevel.getStartingFileName();

 //Sets up new recorder
 Recorder.setUp(currentLevel);

 //Create new timer and load level
 System.out.println(&quot;starting file name is &quot; + currentLevel);
 timer = new pingTimer(currentLevel);
 System.out.println(&quot;BREAKPOINT: Loading level...&quot;);
 loadLevel();
 System.out.println(&quot;BREAKPOINT: Loaded level.&quot;);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f95YkrPEe2NP6AzGuGlzg" name="keyPressed" specification="_0eQpMkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f95Y0rPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>switch (e.getKeyCode()) {
   case KeyEvent.VK_UP:
     up();
     break;
   case KeyEvent.VK_DOWN:
     down();
     break;
   case KeyEvent.VK_LEFT:
     BoardPanel.chapDirection = true;
     left();
     break;
   case KeyEvent.VK_RIGHT:
     BoardPanel.chapDirection = false;
     right();
     break;
   case KeyEvent.VK_F:
     SoundEffects.playSound(&quot;Test&quot;);
     break;
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f95ZErPEe2NP6AzGuGlzg" name="keyReleased" specification="_0eRQQkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f95ZUrPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>switch (e.getKeyCode()) {
   case KeyEvent.VK_SPACE:
     pauseGame();
     break;
   case KeyEvent.VK_ESCAPE:
     resumeGame();
     break;
   default:
     ctrlCommands(e);
     break;
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f95ZkrPEe2NP6AzGuGlzg" name="ctrlCommands" specification="_0eR3UkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f95Z0rPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>if (e.isControlDown()) {
   switch (e.getKeyCode()) {
     case KeyEvent.VK_X:
       exitGame();
       break;
     case KeyEvent.VK_S:
       saveGame();
       break;
     case KeyEvent.VK_R:
       loadSavedGame();
       break;
     case KeyEvent.VK_1:
       currentLevel = &quot;level1.xml&quot;;
       loadLevel();
       break;
     case KeyEvent.VK_2:
       currentLevel = &quot;level2.xml&quot;;
       loadLevel();
       break;
   }
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f95aErPEe2NP6AzGuGlzg" name="exitGame" specification="_0QKi00rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>GUI.closeAll();
 System.exit(0);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f-gcErPEe2NP6AzGuGlzg" name="saveGame" specification="_0QLJ4ErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>JOptionPane.showMessageDialog(GUI.instance, &quot;Saving current game&quot;);
 try {
   Parser.saveLevel(currentGame);
 } catch (IOException e) {
   System.out.println(&quot;Error occurred while saving game&quot;);
 }
 fileLevel.saveStartingFileName(currentLevel);
 exitGame();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f-gcUrPEe2NP6AzGuGlzg" name="loadSavedGame" specification="_0QLJ4UrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>JOptionPane.showMessageDialog(
   GUI.instance,
   &quot;Select a level xml file to load\n Level1 and level2 are the first and second levels \n Under \&quot;saved games\&quot; are previously begun games to load \n The saved games are split into folders by the times they were saved \n Select an xml file with \&quot;saved_game\&quot; in the name, not \&quot;game record\&quot;&quot;
 );
 try {
   JOptionPane.showMessageDialog(GUI.instance, &quot;Choose a level to load!&quot;);

   currentLevel = fileLevel.getLevelFilename();

   JOptionPane.showMessageDialog(
     GUI.instance,
     &quot;Choose the record of the level you are loading!&quot;
   );

   Recorder.setUp(currentLevel);
   Recorder.loadPartial();
 } catch (MalformedURLException | DocumentException e) {
   System.out.println(&quot;Level loading failed&quot;);
 }
 loadLevel();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f-gckrPEe2NP6AzGuGlzg" name="pauseGame" specification="_0QLJ4krPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>if (!paused) {
   paused = true;
   timer.cancel();
   JOptionPane.showMessageDialog(GUI.instance, &quot;The game is Paused&quot;);
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f-gc0rPEe2NP6AzGuGlzg" name="resumeGame" specification="_0QLJ40rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>if (paused) {
   paused = false;
   timer = new pingTimer(timer);
   JOptionPane.getRootFrame().dispose();
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f-gdErPEe2NP6AzGuGlzg" name="loadLevel" specification="_0QLJ5ErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>Recorder.setUp(currentLevel);
 move = Direction.NONE;
 try {
   currentGame = Parser.loadLevel(currentLevel);
   System.out.println(&quot;BREAKPOINT: Parser has parsed a level file!&quot;);
 } catch (DocumentException e) {
   System.out.println(&quot;Exception loading a level&quot;);
   exitGame();
 }
 loadTimer();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f-gdUrPEe2NP6AzGuGlzg" name="loadTimer" specification="_0QLw8ErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>System.out.println(&quot;BREAKPOINT: Ping timer is loaded.&quot;);
 timer.cancel();
 timer = new pingTimer(currentLevel);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f-gdkrPEe2NP6AzGuGlzg" name="loadTimer" specification="_0QLw8UrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f-gd0rPEe2NP6AzGuGlzg" name="timeLeftToPlay">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>timer.cancel();
 timer = new pingTimer(timeLeftToPlay);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f-geErPEe2NP6AzGuGlzg" name="getTimeLeft" specification="_0QLw80rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f-geUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return timer.timeLeftToPlay();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_HgErPEe2NP6AzGuGlzg" name="up" specification="_0QMYAErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>move = Direction.UP;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_HgUrPEe2NP6AzGuGlzg" name="down" specification="_0QMYAUrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>move = Direction.DOWN;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_HgkrPEe2NP6AzGuGlzg" name="left" specification="_0QMYAkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>move = Direction.LEFT;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_Hg0rPEe2NP6AzGuGlzg" name="right" specification="_0QMYA0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>move = Direction.RIGHT;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_HhErPEe2NP6AzGuGlzg" name="loseLevel" specification="_0QM_EErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>timer.redrawJFrame();
 SoundEffects.playSound(&quot;Death&quot;);
 JOptionPane.showMessageDialog(
   GUI.instance,
   &quot;The level is lost! Restarting the level&quot;
 );
 loadLevel();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_HhUrPEe2NP6AzGuGlzg" name="timeOutLevel" specification="_0QM_EUrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>timer.redrawJFrame();
 SoundEffects.playSound(&quot;Death&quot;);
 JOptionPane.showMessageDialog(
   GUI.instance,
   &quot;The level is lost! Your time has run out. Restarting the level&quot;
 );
 loadLevel();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_HhkrPEe2NP6AzGuGlzg" name="nextLevel" specification="_0QM_EkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>Recorder.save(&quot;nz/ac/vuw/ecs/swen225/gp22/levels/completed_records/&quot;);

 timer.redrawJFrame();
 JOptionPane.showMessageDialog(
   GUI.instance,
   &quot;The level &quot; +
   GUI.shortenLevelName(currentLevel) +
   &quot; is won! \n Now starting level 2&quot;
 );
 currentLevel = &quot;level2.xml&quot;;
 loadLevel();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_Hh0rPEe2NP6AzGuGlzg" name="timer" specification="_0QM_E0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f_HiErPEe2NP6AzGuGlzg" type="_0QSeoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return timer;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_HiUrPEe2NP6AzGuGlzg" name="move" specification="_0QNmIErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f_HikrPEe2NP6AzGuGlzg" type="_0QX-MErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return move;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_Hi0rPEe2NP6AzGuGlzg" name="setMove" specification="_0ciK4krPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f_HjErPEe2NP6AzGuGlzg" name="move" type="_0QX-MErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>UserListener.move = move;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_ukErPEe2NP6AzGuGlzg" name="paused" specification="_0QNmIUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f_ukUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return paused;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_ukkrPEe2NP6AzGuGlzg" name="currentLevel" specification="_0QONMErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f_uk0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return currentLevel;
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0QJ7wErPEe2NP6AzGuGlzg" name="UserListener" method="_0f95YErPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0QKi0ErPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0QKi0UrPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gbzdkrPEe2NP6AzGuGlzg">
                        <body>Constructor for UserListener</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QKi0krPEe2NP6AzGuGlzg" type="_0QItoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QKi00rPEe2NP6AzGuGlzg" name="exitGame" isStatic="true" method="_0f95aErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzeErPEe2NP6AzGuGlzg">
                        <body>Exits the game. The current game state will be lost,
   * the next time the game is started, it will resume from the last unfinished level</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QLJ4ErPEe2NP6AzGuGlzg" name="saveGame" isStatic="true" method="_0f-gcErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzeUrPEe2NP6AzGuGlzg">
                        <body>exit the game, saves the game state, game will resume next time the
application will be started</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QLJ4UrPEe2NP6AzGuGlzg" name="loadSavedGame" isStatic="true" method="_0f-gcUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzekrPEe2NP6AzGuGlzg">
                        <body>resume a saved game -- this will pop up a file selector to select a saved game
to be loaded</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QLJ4krPEe2NP6AzGuGlzg" name="pauseGame" isStatic="true" method="_0f-gckrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbze0rPEe2NP6AzGuGlzg">
                        <body>Pauses game, displays a &quot;Game is paused&quot; dialog</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QLJ40rPEe2NP6AzGuGlzg" name="resumeGame" isStatic="true" method="_0f-gc0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzfErPEe2NP6AzGuGlzg">
                        <body>Removed &quot;Game is paused&quot; dialog, resumes game</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QLJ5ErPEe2NP6AzGuGlzg" name="loadLevel" isStatic="true" method="_0f-gdErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzfUrPEe2NP6AzGuGlzg">
                        <body>Starts the level of the game based on currentLevel string</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QLw8ErPEe2NP6AzGuGlzg" name="loadTimer" visibility="private" isStatic="true" method="_0f-gdUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzfkrPEe2NP6AzGuGlzg">
                        <body>Creates the timer for a level</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QLw8UrPEe2NP6AzGuGlzg" name="loadTimer" isStatic="true" method="_0f-gdkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzf0rPEe2NP6AzGuGlzg">
                        <body>Loads a new timer with the time left passed in
   * @param timeLeftToPlay</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QLw8krPEe2NP6AzGuGlzg" name="timeLeftToPlay">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QLw80rPEe2NP6AzGuGlzg" name="getTimeLeft" isStatic="true" method="_0f-geErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzgErPEe2NP6AzGuGlzg">
                        <body>@return the time left for the ping timer</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QLw9ErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QMYAErPEe2NP6AzGuGlzg" name="up" visibility="private" method="_0f_HgErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzgUrPEe2NP6AzGuGlzg">
                        <body>Move up</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QMYAUrPEe2NP6AzGuGlzg" name="down" visibility="private" method="_0f_HgUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzgkrPEe2NP6AzGuGlzg">
                        <body>Move down</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QMYAkrPEe2NP6AzGuGlzg" name="left" visibility="private" method="_0f_HgkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcagErPEe2NP6AzGuGlzg">
                        <body>Move left</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QMYA0rPEe2NP6AzGuGlzg" name="right" visibility="private" method="_0f_Hg0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcagUrPEe2NP6AzGuGlzg">
                        <body>Move right</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QM_EErPEe2NP6AzGuGlzg" name="loseLevel" isStatic="true" method="_0f_HhErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcagkrPEe2NP6AzGuGlzg">
                        <body>Called when the level is lost by Domain</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QM_EUrPEe2NP6AzGuGlzg" name="timeOutLevel" isStatic="true" method="_0f_HhUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcag0rPEe2NP6AzGuGlzg">
                        <body>Called when the user runs out of time on a level</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QM_EkrPEe2NP6AzGuGlzg" name="nextLevel" isStatic="true" method="_0f_HhkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcahErPEe2NP6AzGuGlzg">
                        <body>Loads the next level in the game
   * Since there are only 2 levels, nextLevel just loads level 2
   * level1 goes to level2, level2 also loads level 2</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QM_E0rPEe2NP6AzGuGlzg" name="timer" isStatic="true" method="_0f_Hh0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcahUrPEe2NP6AzGuGlzg">
                        <body>@return the listeners pingTmer</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ciK4ErPEe2NP6AzGuGlzg" type="_0QSeoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QNmIErPEe2NP6AzGuGlzg" name="move" isStatic="true" method="_0f_HiUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcahkrPEe2NP6AzGuGlzg">
                        <body>@return move</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ciK4UrPEe2NP6AzGuGlzg" type="_0QX-MErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QNmIUrPEe2NP6AzGuGlzg" name="paused" isStatic="true" method="_0f_ukErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcaiErPEe2NP6AzGuGlzg">
                        <body>@return paused</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QNmIkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QONMErPEe2NP6AzGuGlzg" name="currentLevel" isStatic="true" method="_0f_ukkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcaiUrPEe2NP6AzGuGlzg">
                        <body>@return currentLevel</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QONMUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ciK4krPEe2NP6AzGuGlzg" name="setMove" isStatic="true" method="_0f_Hi0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcah0rPEe2NP6AzGuGlzg">
                        <body>Sets the move
   * @param move</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ciK40rPEe2NP6AzGuGlzg" name="move" type="_0QX-MErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0eQCIErPEe2NP6AzGuGlzg" name="keyTyped">
                      <ownedParameter xmi:id="_0eQCIUrPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0eQpMkrPEe2NP6AzGuGlzg" name="keyPressed" method="_0f95YkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0eQpM0rPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0eRQQkrPEe2NP6AzGuGlzg" name="keyReleased" method="_0f95ZErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0eRQQ0rPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0eR3UkrPEe2NP6AzGuGlzg" name="ctrlCommands" visibility="private" method="_0f95ZkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gbzd0rPEe2NP6AzGuGlzg">
                        <body>Runs the commands accessed by Ctrl (eg ctrl-1, ctrl-2, ctrl-x)
   * @param e</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0eR3U0rPEe2NP6AzGuGlzg" name="e" type="_0dP8k0rPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0QQpcErPEe2NP6AzGuGlzg" name="fileLevel">
                    <ownedComment xmi:id="_0gcaikrPEe2NP6AzGuGlzg">
                      <body>A class for dealing with reading/writing files for level loading, saving and selecting
@author David Lindsay 300584648</body>
                    </ownedComment>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_ulErPEe2NP6AzGuGlzg" name="getLevelFilename" specification="_0QRQgErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f_ulUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>URL url;
 JFileChooser fileChooser = new JFileChooser(
   new File(System.getProperty(&quot;user.dir&quot;)).getAbsolutePath() +
   &quot;/nz/ac/vuw/ecs/swen225/gp22/levels/&quot;
 );
 int responce = fileChooser.showOpenDialog(null);
 if (responce == JFileChooser.APPROVE_OPTION) {
   url =
     new File(fileChooser.getSelectedFile().getAbsolutePath())
       .toURI()
       .toURL();
   return url
     .toString()
     .substring(
       url.toString().indexOf(&quot;levels/&quot;) + 7,
       url.toString().length()
     );
 }
 throw new MalformedURLException();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_ulkrPEe2NP6AzGuGlzg" name="getStartingFileName" specification="_0QR3kErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f_ul0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>try {
   Scanner s = new Scanner(
     new File(&quot;nz/ac/vuw/ecs/swen225/gp22/app/initLevel.txt&quot;)
   );
   return s.nextLine();
 } catch (IOException e) {
   System.out.println(&quot;initLevel.txt was not found&quot;);
 }
 return &quot;&quot;;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0f_umErPEe2NP6AzGuGlzg" name="saveStartingFileName" specification="_0QR3kkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0f_umUrPEe2NP6AzGuGlzg" name="initLevel">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>try {
   Files.writeString(
     Paths.get(&quot;nz/ac/vuw/ecs/swen225/gp22/app/initLevel.txt&quot;),
     initLevel,
     StandardOpenOption.WRITE
   );
 } catch (IOException e) {
   System.out.println(&quot;An error occurred while writing to initLevel.txt&quot;);
 }
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0QRQgErPEe2NP6AzGuGlzg" name="getLevelFilename" isStatic="true" method="_0f_ulErPEe2NP6AzGuGlzg" raisedException="_0cfHkUrPEe2NP6AzGuGlzg _0cfuoUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcai0rPEe2NP6AzGuGlzg">
                        <body>A method to allow the user to select the xml file for a level to load
   * @return shortened URL of selected level 
   * @throws MalformedURLException
   * @throws DocumentException</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QRQgUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QR3kErPEe2NP6AzGuGlzg" name="getStartingFileName" isStatic="true" method="_0f_ulkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcajErPEe2NP6AzGuGlzg">
                        <body>Reads the name of the starting level file from initlevel.txt
   * @return Contents of initlevel.txt</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QR3kUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QR3kkrPEe2NP6AzGuGlzg" name="saveStartingFileName" isStatic="true" method="_0f_umErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcajUrPEe2NP6AzGuGlzg">
                        <body>Saves the current level file in the file initlevel.txt
   * @param initLevel, the name of the level the next game will be initialised on</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QR3k0rPEe2NP6AzGuGlzg" name="initLevel">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0QSeoErPEe2NP6AzGuGlzg" name="pingTimer">
                    <ownedComment xmi:id="_0gcajkrPEe2NP6AzGuGlzg">
                      <body>This class creates a timer that calls ping() every 200ms
And resets the level if the player runs out of time on the current level
@author David Lindsay 300584648</body>
                    </ownedComment>
                    <generalization xmi:id="_0eU6oErPEe2NP6AzGuGlzg" general="_0caPEErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fLPMErPEe2NP6AzGuGlzg" name="timeLeftToPlay" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fLPMUrPEe2NP6AzGuGlzg" value="0"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fL2QErPEe2NP6AzGuGlzg" name="pingRate" visibility="private" isLeaf="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fL2QUrPEe2NP6AzGuGlzg" value="200"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fL2Q0rPEe2NP6AzGuGlzg" name="t" visibility="private" isLeaf="true" type="_0ca2IUrPEe2NP6AzGuGlzg" isReadOnly="true" association="_0g2DIUrPEe2NP6AzGuGlzg">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fL2RErPEe2NP6AzGuGlzg" value="new TimerTask() {&#xA;    public void run() {&#xA;      ping();&#xA;    }&#xA;  }"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gAVoErPEe2NP6AzGuGlzg" name="pingTimer" specification="_0QTFsErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gAVoUrPEe2NP6AzGuGlzg" name="level">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gAVokrPEe2NP6AzGuGlzg" type="_0QSeoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>super();
 timeLeftToPlay = 60 * 1000 * getLevelNum(level);
 this.scheduleAtFixedRate(t, 0, (long) pingRate); //this timer will trigger every half second
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gAVo0rPEe2NP6AzGuGlzg" name="pingTimer" specification="_0co4kErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gAVpErPEe2NP6AzGuGlzg" name="p" type="_0QSeoErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gAVpUrPEe2NP6AzGuGlzg" type="_0QSeoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>super();
 this.timeLeftToPlay = p.timeLeftToPlay;
 this.scheduleAtFixedRate(t, 0, (long) pingRate); //this timer will trigger every half second
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gAVpkrPEe2NP6AzGuGlzg" name="pingTimer" specification="_0QU64ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gAVp0rPEe2NP6AzGuGlzg" name="timeLeftToPlay">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gAVqErPEe2NP6AzGuGlzg" type="_0QSeoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>super();
 this.timeLeftToPlay = timeLeftToPlay;
 this.scheduleAtFixedRate(t, 0, (long) pingRate); //this timer will trigger every half second
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gAVqUrPEe2NP6AzGuGlzg" name="getLevelNum" specification="_0QVh8ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gAVqkrPEe2NP6AzGuGlzg" name="level">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gAVq0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>try {
   return Integer.parseInt(
     Character.toString(level.charAt(level.indexOf(&quot;level&quot;) + 5))
   );
 } catch (NumberFormatException e) {
   System.out.println(&quot;Invalid file name format&quot;);
 }
 return 1;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gAVrErPEe2NP6AzGuGlzg" name="ping" specification="_0QVh80rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>//Advance the timer
 timeLeftToPlay -= pingRate;
 //If out of time, reload level
 if (timeLeftToPlay == 0) {
   redrawJFrame();
   UserListener.timeOutLevel();
 }
 //Record the move with the Recorder
 Recorder.tick(UserListener.move());
 if (UserListener.currentGame != null) {
   //Move the enemies in Domain
   UserListener.currentGame.moveActors();
   //Move the player
   UserListener.currentGame.movePlayer(UserListener.move());
 }
 UserListener.setMove(Direction.NONE);
 //Repaint the GUI
 redrawJFrame();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gAVrUrPEe2NP6AzGuGlzg" name="redrawJFrame" specification="_0QVh9ErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>if (GUI.instance != null) {
   GUI.instance.panel.revalidate();
   GUI.instance.panel.repaint();
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gA8sErPEe2NP6AzGuGlzg" name="timeLeftToPlay" specification="_0QWJAErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gA8sUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return this.timeLeftToPlay;
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0QTFsErPEe2NP6AzGuGlzg" name="pingTimer" method="_0gAVoErPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0QTFskrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0QTFs0rPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gcaj0rPEe2NP6AzGuGlzg">
                        <body>Creates a new pingTimer
   * @param level</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QTFsUrPEe2NP6AzGuGlzg" name="level">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QTFtErPEe2NP6AzGuGlzg" type="_0QSeoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QU64ErPEe2NP6AzGuGlzg" name="pingTimer" method="_0gAVpkrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0QU64krPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0QU640rPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gcakUrPEe2NP6AzGuGlzg">
                        <body>Creates a ping timer with a certain amount of time played
   * @param level
   * @param timePlayed</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QU64UrPEe2NP6AzGuGlzg" name="timeLeftToPlay">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QU65ErPEe2NP6AzGuGlzg" type="_0QSeoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QVh8ErPEe2NP6AzGuGlzg" name="getLevelNum" isStatic="true" method="_0gAVqUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcakkrPEe2NP6AzGuGlzg">
                        <body>Extracts the level number from the level name
   * @param level
   * @return the number of the level (1 or 2)</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QVh8UrPEe2NP6AzGuGlzg" name="level">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QVh8krPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QVh80rPEe2NP6AzGuGlzg" name="ping" visibility="protected" method="_0gAVrErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcak0rPEe2NP6AzGuGlzg">
                        <body>Function that runs whenever the timer triggers
   * Redraws the GUI, moves the player, and updates the time left to play</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QVh9ErPEe2NP6AzGuGlzg" name="redrawJFrame" method="_0gAVrUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcalErPEe2NP6AzGuGlzg">
                        <body>Redraws the JFrame of GUI</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QWJAErPEe2NP6AzGuGlzg" name="timeLeftToPlay" method="_0gA8sErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gcalUrPEe2NP6AzGuGlzg">
                        <body>Getter for timeLeftToPlay
   * @return timeLeftToPlay</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QWJAUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0co4kErPEe2NP6AzGuGlzg" name="pingTimer" method="_0gAVo0rPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0cpfoErPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0cpfoUrPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gcakErPEe2NP6AzGuGlzg">
                        <body>Creates a new pingTimer with timeLeftToPlay copied from other pingTimer
   * @param p</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0co4kUrPEe2NP6AzGuGlzg" name="p" type="_0QSeoErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0cpfokrPEe2NP6AzGuGlzg" type="_0QSeoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0gxKoErPEe2NP6AzGuGlzg" name="" memberEnd="_0gxKoUrPEe2NP6AzGuGlzg _0fGWsErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0gxKoUrPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0gxKoErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0gxxsUrPEe2NP6AzGuGlzg" name="" memberEnd="_0gxxskrPEe2NP6AzGuGlzg _0fGWsUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0gxxskrPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0gxxsUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0gxxtErPEe2NP6AzGuGlzg" name="" memberEnd="_0gxxtUrPEe2NP6AzGuGlzg _0fGWskrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0gxxtUrPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0gxxtErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0gyYwUrPEe2NP6AzGuGlzg" name="" memberEnd="_0gyYwkrPEe2NP6AzGuGlzg _0fG9wErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0gyYwkrPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0gyYwUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0gyYxErPEe2NP6AzGuGlzg" name="" memberEnd="_0gyYxUrPEe2NP6AzGuGlzg _0fG9wUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0gyYxUrPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0gyYxErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0gy_0UrPEe2NP6AzGuGlzg" name="" memberEnd="_0gy_0krPEe2NP6AzGuGlzg _0fG9wkrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0gy_0krPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0gy_0UrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0gy_1ErPEe2NP6AzGuGlzg" name="" memberEnd="_0gy_1UrPEe2NP6AzGuGlzg _0fG9w0rPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0gy_1UrPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0gy_1ErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0gzm4UrPEe2NP6AzGuGlzg" name="" memberEnd="_0gzm4krPEe2NP6AzGuGlzg _0fHk0ErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0gzm4krPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0gzm4UrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0gzm5ErPEe2NP6AzGuGlzg" name="" memberEnd="_0gzm5UrPEe2NP6AzGuGlzg _0fHk0UrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0gzm5UrPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0gzm5ErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g0N8UrPEe2NP6AzGuGlzg" name="" memberEnd="_0g0N8krPEe2NP6AzGuGlzg _0fHk0krPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g0N8krPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0g0N8UrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g0N9ErPEe2NP6AzGuGlzg" name="" memberEnd="_0g0N9UrPEe2NP6AzGuGlzg _0fHk00rPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g0N9UrPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0g0N9ErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g01AUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g01AkrPEe2NP6AzGuGlzg _0fIL4krPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g01AkrPEe2NP6AzGuGlzg" name="" type="_0P3A0ErPEe2NP6AzGuGlzg" association="_0g01AUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g01BErPEe2NP6AzGuGlzg" name="" memberEnd="_0g01BUrPEe2NP6AzGuGlzg _0fIy8ErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g01BUrPEe2NP6AzGuGlzg" name="" type="_0QHfgErPEe2NP6AzGuGlzg" association="_0g01BErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g01B0rPEe2NP6AzGuGlzg" name="" memberEnd="_0g01CErPEe2NP6AzGuGlzg _0fIy8krPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g01CErPEe2NP6AzGuGlzg" name="" type="_0QHfgErPEe2NP6AzGuGlzg" association="_0g01B0rPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g1cEUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g1cEkrPEe2NP6AzGuGlzg _0fJaAkrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g1cEkrPEe2NP6AzGuGlzg" name="" type="_0QItoErPEe2NP6AzGuGlzg" association="_0g1cEUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g1cFErPEe2NP6AzGuGlzg" name="" memberEnd="_0g1cFUrPEe2NP6AzGuGlzg _0fKoIUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g1cFUrPEe2NP6AzGuGlzg" name="" type="_0QItoErPEe2NP6AzGuGlzg" association="_0g1cFErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g2DIUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g2DIkrPEe2NP6AzGuGlzg _0fL2Q0rPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g2DIkrPEe2NP6AzGuGlzg" name="" type="_0QSeoErPEe2NP6AzGuGlzg" association="_0g2DIUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                </packagedElement>
                <packagedElement xmi:type="uml:Package" xmi:id="_0OHUYkrPEe2NP6AzGuGlzg" name="domain">
                  <packagedElement xmi:type="uml:Package" xmi:id="_0PPVwErPEe2NP6AzGuGlzg" name="tests">
                    <packagedElement xmi:type="uml:Interface" xmi:id="_0Rq-sErPEe2NP6AzGuGlzg" name="FailTest" visibility="package">
                      <nestedClassifier xmi:type="uml:Interface" xmi:id="_0RrlwErPEe2NP6AzGuGlzg" name="DomainBuilderFuzzTest" visibility="package">
                        <eAnnotations xmi:id="_0RrlwUrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                          <details xmi:id="_0RrlwkrPEe2NP6AzGuGlzg" key="sameFile"/>
                        </eAnnotations>
                        <ownedOperation xmi:id="_0d-VUUrPEe2NP6AzGuGlzg" name="play">
                          <ownedParameter xmi:id="_0d-VUkrPEe2NP6AzGuGlzg" name="d" type="_0QghEErPEe2NP6AzGuGlzg"/>
                        </ownedOperation>
                      </nestedClassifier>
                      <nestedClassifier xmi:type="uml:Class" xmi:id="_0RsM0ErPEe2NP6AzGuGlzg" name="BuilderInputGenerator" visibility="package">
                        <eAnnotations xmi:id="_0RsM0UrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                          <details xmi:id="_0RsM0krPEe2NP6AzGuGlzg" key="sameFile"/>
                        </eAnnotations>
                        <ownedComment xmi:id="_0gjIPkrPEe2NP6AzGuGlzg">
                          <body>Generator for building a domain
@author deleomaxi &amp; rubran</body>
                        </ownedComment>
                        <ownedAttribute xmi:id="_0fqXYErPEe2NP6AzGuGlzg" name="BOARDSIZE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                          <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fqXYUrPEe2NP6AzGuGlzg" value="250"/>
                        </ownedAttribute>
                        <ownedAttribute xmi:id="_0fqXYkrPEe2NP6AzGuGlzg" name="inputTypes" visibility="private" isLeaf="true" isStatic="true" type="_0e9MwErPEe2NP6AzGuGlzg" isOrdered="true" isReadOnly="true" association="_0g_0IUrPEe2NP6AzGuGlzg">
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0fqXY0rPEe2NP6AzGuGlzg" value="*"/>
                          <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fqXZErPEe2NP6AzGuGlzg" value="List.of(&#xA;&#x9;&#x9;(d)->{d.empty(rint(BOARDSIZE), rint(BOARDSIZE));},&#xA;&#x9;&#x9;(d)->{d.wall(rint(BOARDSIZE), rint(BOARDSIZE));},&#xA;&#x9;&#x9;(d)->{d.treasure(rint(BOARDSIZE), rint(BOARDSIZE));},&#xA;&#x9;&#x9;(d)->{d.key(rint(BOARDSIZE), rint(BOARDSIZE), &quot;PINK&quot;);},&#xA;&#x9;&#x9;(d)->{d.door(rint(BOARDSIZE), rint(BOARDSIZE), &quot;PINK&quot;);},&#xA;&#x9;&#x9;(d)->{d.key(rint(BOARDSIZE), rint(BOARDSIZE), &quot;BLUE&quot;);},&#xA;&#x9;&#x9;(d)->{d.door(rint(BOARDSIZE), rint(BOARDSIZE), &quot;BLUE&quot;);},&#xA;&#x9;&#x9;(d)->{d.key(rint(BOARDSIZE), rint(BOARDSIZE), &quot;YELLOW&quot;);},&#xA;&#x9;&#x9;(d)->{d.door(rint(BOARDSIZE), rint(BOARDSIZE), &quot;YELLOW&quot;);},&#xA;&#x9;&#x9;(d)->{d.key(rint(BOARDSIZE), rint(BOARDSIZE), &quot;GREEN&quot;);},&#xA;&#x9;&#x9;(d)->{d.door(rint(BOARDSIZE), rint(BOARDSIZE), &quot;GREEN&quot;);}&#xA;&#x9;)"/>
                        </ownedAttribute>
                        <ownedAttribute xmi:id="_0fqXZUrPEe2NP6AzGuGlzg" name="inputs" visibility="package" type="_0e9MwErPEe2NP6AzGuGlzg" isOrdered="true" association="_0g_0JErPEe2NP6AzGuGlzg">
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0fqXZkrPEe2NP6AzGuGlzg" value="*"/>
                          <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fq-cErPEe2NP6AzGuGlzg" value="new ArrayList&lt;>()"/>
                        </ownedAttribute>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gT3pErPEe2NP6AzGuGlzg" name="rint" specification="_0RsM00rPEe2NP6AzGuGlzg">
                          <ownedParameter xmi:id="_0gT3pUrPEe2NP6AzGuGlzg" name="n">
                            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                          </ownedParameter>
                          <ownedParameter xmi:id="_0gT3pkrPEe2NP6AzGuGlzg" direction="return">
                            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                          </ownedParameter>
                          <language>java</language>
                          <body>return new Random().nextInt(n);
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gT3p0rPEe2NP6AzGuGlzg" name="generateRandom" specification="_0Rsz4ErPEe2NP6AzGuGlzg">
                          <ownedParameter xmi:id="_0gT3qErPEe2NP6AzGuGlzg" name="n">
                            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                          </ownedParameter>
                          <language>java</language>
                          <body>for (int i=0;i&lt;n;i++) {inputs.add(inputTypes.get(rint(inputTypes.size())));}
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gT3qUrPEe2NP6AzGuGlzg" name="playAll" specification="_0d-VU0rPEe2NP6AzGuGlzg">
                          <ownedParameter xmi:id="_0gT3qkrPEe2NP6AzGuGlzg" name="db" type="_0QghEErPEe2NP6AzGuGlzg"/>
                          <language>java</language>
                          <body>inputs.stream().forEach(i->i.play(db));
	</body>
                        </ownedBehavior>
                        <ownedOperation xmi:id="_0RsM00rPEe2NP6AzGuGlzg" name="rint" visibility="private" isStatic="true" method="_0gT3pErPEe2NP6AzGuGlzg">
                          <ownedComment xmi:id="_0gjvQErPEe2NP6AzGuGlzg">
                            <body>return random integer
	 * @param n
	 * @return</body>
                          </ownedComment>
                          <ownedParameter xmi:id="_0RsM1ErPEe2NP6AzGuGlzg" name="n">
                            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                          </ownedParameter>
                          <ownedParameter xmi:id="_0RsM1UrPEe2NP6AzGuGlzg" direction="return">
                            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                          </ownedParameter>
                        </ownedOperation>
                        <ownedOperation xmi:id="_0Rsz4ErPEe2NP6AzGuGlzg" name="generateRandom" method="_0gT3p0rPEe2NP6AzGuGlzg">
                          <ownedComment xmi:id="_0gjvQUrPEe2NP6AzGuGlzg">
                            <body>generate n amount of inputs
	 * @param n</body>
                          </ownedComment>
                          <ownedParameter xmi:id="_0Rsz4UrPEe2NP6AzGuGlzg" name="n">
                            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                          </ownedParameter>
                        </ownedOperation>
                        <ownedOperation xmi:id="_0d-VU0rPEe2NP6AzGuGlzg" name="playAll" method="_0gT3qUrPEe2NP6AzGuGlzg">
                          <ownedComment xmi:id="_0gjvQkrPEe2NP6AzGuGlzg">
                            <body>build the domain using the given inputs
	 * @param db</body>
                          </ownedComment>
                          <ownedParameter xmi:id="_0d-8YErPEe2NP6AzGuGlzg" name="db" type="_0QghEErPEe2NP6AzGuGlzg"/>
                        </ownedOperation>
                      </nestedClassifier>
                      <nestedClassifier xmi:type="uml:Class" xmi:id="_0Rta8ErPEe2NP6AzGuGlzg" name="DomainTests">
                        <eAnnotations xmi:id="_0Rta8UrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                          <details xmi:id="_0Rta8krPEe2NP6AzGuGlzg" key="sameFile"/>
                        </eAnnotations>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gT3q0rPEe2NP6AzGuGlzg" name="basicTest01" specification="_0Rta80rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// testing empty
		Domain d = new DomainBuilder().empty(1, 1).player(0, 0).exit(2, 2).make();
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gT3rErPEe2NP6AzGuGlzg" name="basicTest02" specification="_0RuCAkrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot; +
						&quot;|_|#|_|\n&quot;;

		// testing wall and empty
		Domain d = new DomainBuilder().empty(1, 1).wall(3, 1).player(0, 0).exit(2, 2).make();
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gT3rUrPEe2NP6AzGuGlzg" name="basicTest03" specification="_0RuCBkrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot; +
						&quot;|_|#|_|\n&quot;;

		// duplication test
		Domain d = new DomainBuilder().empty(1, 1).wall(3, 1).wall(3, 1).player(0, 0).exit(2, 2).make();
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gT3rkrPEe2NP6AzGuGlzg" name="basicTest04" specification="_0RuCCkrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// duplication test
		Domain d = new DomainBuilder().empty(1, 1).empty(1, 1).player(0, 0).exit(2, 2).make();
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gT3r0rPEe2NP6AzGuGlzg" name="basicTest05" specification="_0RupE0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|\n&quot; +
						&quot;|_|#|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// overwriting test
		Domain d = new DomainBuilder().empty(1, 1).wall(1, 1).player(0, 0).exit(2, 2).make();
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUesErPEe2NP6AzGuGlzg" name="basicTest06" specification="_0RupF0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// overwriting test
		Domain d = new DomainBuilder().empty(1, 1).wall(1, 1).empty(1, 1).player(0, 0).exit(2, 2).make();
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUesUrPEe2NP6AzGuGlzg" name="basicTest07" specification="_0RupG0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test reset
		DomainBuilder db = new DomainBuilder().empty(1, 1);
		db.reset();
		Domain d = db.empty(1, 1).player(0, 0).exit(2, 2).make();
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUeskrPEe2NP6AzGuGlzg" name="moveTest01" specification="_0RvQI0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player cant move outside of the domain
		Domain d = new DomainBuilder().empty(1, 1).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.LEFT);

		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUes0rPEe2NP6AzGuGlzg" name="moveTest02" specification="_0RvQJ0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player cant move outside of the domain
		Domain d = new DomainBuilder().empty(1, 1).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.UP);

		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUetErPEe2NP6AzGuGlzg" name="moveTest03" specification="_0Rv3MErPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|P|_|E|\n&quot;;

		// test player cant move outside of the domain
		Domain d = new DomainBuilder().empty(1, 1).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.DOWN);
		d.movePlayer(Direction.DOWN);
		d.movePlayer(Direction.DOWN);

		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUetUrPEe2NP6AzGuGlzg" name="moveTest04" specification="_0Rv3NErPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|P|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player cant move outside of the domain
		Domain d = new DomainBuilder().empty(1, 1).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUetkrPEe2NP6AzGuGlzg" name="wallTest01" specification="_0Rv3OErPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|#|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player cant move into wall
		Domain d = new DomainBuilder().empty(1, 1).wall(0, 1).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);

		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUet0rPEe2NP6AzGuGlzg" name="wallTest02" specification="_0RweQ0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|#|_|\n&quot; +
						&quot;|#|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player cant move into wall
		Domain d = new DomainBuilder().empty(1, 1).wall(0, 1).wall(1, 0).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);

		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUeuErPEe2NP6AzGuGlzg" name="wallTest03" specification="_0RweR0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|#|_|\n&quot; +
						&quot;|#|P|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player cant move into wall
		Domain d = new DomainBuilder().empty(1, 1).wall(0, 1).wall(1, 0).player(1, 1).exit(2, 2).make();
		d.movePlayer(Direction.LEFT);
		d.movePlayer(Direction.UP);

		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUeuUrPEe2NP6AzGuGlzg" name="treasureTest01" specification="_0RweS0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|P|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player can take treasure
		Domain d = new DomainBuilder().empty(1, 1).treasure(0, 1).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);

		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUeukrPEe2NP6AzGuGlzg" name="treasureTest02" specification="_0RxFU0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|_|\n&quot; +
						&quot;|*|P|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test taken treasure becomes free tile after being taken
		Domain d = new DomainBuilder().empty(1, 1).treasure(0, 1).treasure(1, 1).treasure(1, 0).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);

		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gUeu0rPEe2NP6AzGuGlzg" name="keyTest01" specification="_0RxFV0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|P|_|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player can take key
		Domain d = new DomainBuilder().empty(1, 1).key(0, 1, &quot;BLUE&quot;).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);

		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFwErPEe2NP6AzGuGlzg" name="keyTest02" specification="_0RxsYkrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|_|\n&quot; +
						&quot;|_|P|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player can have more than one key of different colours
		Domain d = new DomainBuilder().empty(1, 1).key(0, 1, &quot;BLUE&quot;).key(1, 1, &quot;GREEN&quot;).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFwUrPEe2NP6AzGuGlzg" name="keyTest03" specification="_0RxsZkrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|_|\n&quot; +
						&quot;|P|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player can have more than one key of the same colour
		Domain d = new DomainBuilder().empty(1, 1).key(0, 1, &quot;BLUE&quot;).key(1, 1, &quot;BLUE&quot;).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);
		d.movePlayer(Direction.LEFT);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFwkrPEe2NP6AzGuGlzg" name="keyTest04" specification="_0RyTckrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|_|\n&quot; +
						&quot;|k|P|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test key can exists
		Domain d = new DomainBuilder().empty(1, 1).key(0, 1, &quot;BLUE&quot;)
				.key(1, 1, &quot;BLUE&quot;).key(1, 0, &quot;GREEN&quot;).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFw0rPEe2NP6AzGuGlzg" name="doorTest01" specification="_0RyTdkrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|P|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test blue door w/ blue key
		Domain d = new DomainBuilder().empty(1, 2).key(0, 1, &quot;PINK&quot;).door(0, 2, &quot;PINK&quot;).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFxErPEe2NP6AzGuGlzg" name="doorTest02" specification="_0RyTekrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|P|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test blue door w/ blue key
		Domain d = new DomainBuilder().empty(1, 2).key(0, 1, &quot;BLUE&quot;).door(0, 2, &quot;BLUE&quot;).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFxUrPEe2NP6AzGuGlzg" name="doorTest03" specification="_0Ry6g0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|P|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test blue door w/ blue key
		Domain d = new DomainBuilder().empty(1, 2).key(0, 1, &quot;YELLOW&quot;).door(0, 2, &quot;YELLOW&quot;).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFxkrPEe2NP6AzGuGlzg" name="doorTest04" specification="_0Ry6h0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|P|\n&quot; +
						&quot;|_|_|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test blue door w/ blue key
		Domain d = new DomainBuilder().empty(1, 2).key(0, 1, &quot;GREEN&quot;).door(0, 2, &quot;GREEN&quot;).player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFx0rPEe2NP6AzGuGlzg" name="doorTest05" specification="_0Ry6i0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|@|\n&quot; +
						&quot;|_|P|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test pink cant be used to open green door and then use on pink door
		Domain d = new DomainBuilder().empty(1, 2).key(0, 1, &quot;PINK&quot;)
				.door(1, 1, &quot;PINK&quot;).door(0, 2, &quot;GREEN&quot;)
				.player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFyErPEe2NP6AzGuGlzg" name="doorTest06" specification="_0Rzhk0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|_|\n&quot; +
						&quot;|_|P|_|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player can pick up two green keys and then open two green doors
		Domain d = new DomainBuilder().empty(1, 2).key(0, 1, &quot;GREEN&quot;)
				.key(0, 2, &quot;GREEN&quot;)
				.door(1, 2, &quot;GREEN&quot;)
				.door(1, 1, &quot;GREEN&quot;)
				.player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);
		d.movePlayer(Direction.LEFT);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFyUrPEe2NP6AzGuGlzg" name="doorTest07" specification="_0Rzhl0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|P|\n&quot; +
						&quot;|_|_|@|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test player can pick up one green key but ONLY one green door
		Domain d = new DomainBuilder().empty(1, 2).key(0, 1, &quot;GREEN&quot;)
				.door(0, 2, &quot;GREEN&quot;)
				.door(1, 2, &quot;GREEN&quot;)
				.player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFykrPEe2NP6AzGuGlzg" name="doorTest08" specification="_0Rzhm0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|P|\n&quot; +
						&quot;|_|_|@|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// ?
		Domain d = new DomainBuilder().empty(1, 2).key(0, 1, &quot;GREEN&quot;)
				.door(0, 2, &quot;GREEN&quot;)
				.door(1, 2, &quot;GREEN&quot;)
				.player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFy0rPEe2NP6AzGuGlzg" name="enemyTest01" specification="_0R0Io0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|_|\n&quot; +
						&quot;|_|4|_|_|\n&quot; +
						&quot;|_|_|_|_|\n&quot; +
						&quot;|_|_|_|E|\n&quot;;

		// test enemy exists
		Domain d = new DomainBuilder().empty(1, 1).player(0, 0).exit(3, 3)
				.enemy(1, 1, List.of(new Point(1, 1), new Point(1, 2), new Point(1, 3))).make();
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVFzErPEe2NP6AzGuGlzg" name="enemyTest02" specification="_0R0Ip0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|_|\n&quot; +
						&quot;|_|_|_|4|\n&quot; +
						&quot;|_|_|_|_|\n&quot; +
						&quot;|_|_|_|E|\n&quot;;

		// test enemy can move
		Domain d = new DomainBuilder().empty(1, 1).player(0, 0).exit(3, 3)
				.enemy(1, 1, List.of(new Point(1, 1), new Point(1, 2), new Point(1, 3))).make();
		d.moveActors();
		d.moveActors();
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs0ErPEe2NP6AzGuGlzg" name="enemyTest03" specification="_0R0Iq0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|P|_|_|_|\n&quot; +
						&quot;|_|4|_|_|\n&quot; +
						&quot;|_|_|_|_|\n&quot; +
						&quot;|_|_|_|E|\n&quot;;

		// test enemy loops around when path is finished
		Domain d = new DomainBuilder().empty(1, 1).player(0, 0).exit(3, 3)
				.enemy(1, 1, List.of(new Point(1, 1), new Point(1, 2), new Point(1, 3))).make();
		d.moveActors();
		d.moveActors();
		d.moveActors();

		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs0UrPEe2NP6AzGuGlzg" name="exitTest07" specification="_0R0vs0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|_|P|\n&quot; +
						&quot;|_|*|L|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// player CANT open the lock, not all treasures collected
		Domain d = new DomainBuilder().treasure(1, 1).lock(1, 2)
				.player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);
		d.movePlayer(Direction.DOWN);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs0krPEe2NP6AzGuGlzg" name="infoTest01" specification="_0R0vt0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>String ideal = 	&quot;|_|i|_|\n&quot; +
						&quot;|_|_|P|\n&quot; +
						&quot;|_|_|E|\n&quot;;

		// test info placement, player moves on info
		Domain d = new DomainBuilder().info(0, 1)
				.player(0, 0).exit(2, 2).make();
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.RIGHT);
		d.movePlayer(Direction.DOWN);
		testCompare(ideal, d.toString());
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs00rPEe2NP6AzGuGlzg" name="failingTest01" specification="_0R0vu0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{new DomainBuilder().empty(-1, 1).empty(1, 1).player(0, 0).exit(0,1).make();});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs1ErPEe2NP6AzGuGlzg" name="failingTest02" specification="_0R1Ww0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{new DomainBuilder().empty(1000, 1).empty(1, 1).player(0, 0).exit(0,1).make();});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs1UrPEe2NP6AzGuGlzg" name="failingTest03" specification="_0R1Wx0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{new DomainBuilder().empty(1, -1).empty(1, 1).player(0, 0).exit(0,1).make();});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs1krPEe2NP6AzGuGlzg" name="failingTest04" specification="_0R1Wy0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{new DomainBuilder().empty(1, 1000).empty(1, 1).player(0, 0).exit(0,1).make();});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs10rPEe2NP6AzGuGlzg" name="failingTest05" specification="_0R1900rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{new DomainBuilder().empty(new Integer(null), 1).empty(1, 1).player(0, 0).exit(0, 1).make();});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs2ErPEe2NP6AzGuGlzg" name="failingTest06" specification="_0R1910rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{new DomainBuilder().wall(0, 0).empty(1, 1).player(0, 0).exit(0, 1).make();});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs2UrPEe2NP6AzGuGlzg" name="failingTest07" specification="_0R1920rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{new DomainBuilder().empty(1, 1).player(0, 0).player(0, 0).exit(0, 1).make();});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs2krPEe2NP6AzGuGlzg" name="failingTest08" specification="_0R2k40rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{new DomainBuilder().make();});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs20rPEe2NP6AzGuGlzg" name="failingTest09" specification="_0R2k50rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{new DomainBuilder().empty(0, 0).make();});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs3ErPEe2NP6AzGuGlzg" name="failingTest10" specification="_0R3L8krPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{new DomainBuilder().empty(0, 0).player(0, 0).make();});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gVs3UrPEe2NP6AzGuGlzg" name="failingTest11" specification="_0R3L9krPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			Domain d = new DomainBuilder().empty(5, 5).player(0, 0).exit(2, 2).make();
			d.setPlayerPosition(new Point(-1, 0));
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT4ErPEe2NP6AzGuGlzg" name="failingTest12" specification="_0R3L-krPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
		        Domain d = new DomainBuilder().empty(5, 5).player(0, 0).exit(2, 2).make();
			d.setPlayerPosition(new Point(0, 6));
			d.setPlayerPosition(new Point(6, 0));
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT4UrPEe2NP6AzGuGlzg" name="failingTest13" specification="_0R3zA0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).exit(3, 3)
					.enemy(1, 1, List.of()).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT4krPEe2NP6AzGuGlzg" name="failingTest14" specification="_0R3zB0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).exit(3, 3)
					.enemy(1, 1, (List&lt;Point>) null).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT40rPEe2NP6AzGuGlzg" name="failingTest15" specification="_0R3zC0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).exit(3, 3)
					.enemy(1, 1, Arrays.stream(new Point[] {null, null}).collect(Collectors.toList())).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT5ErPEe2NP6AzGuGlzg" name="failingTest16" specification="_0R4aE0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).exit(3, 3)
					.enemy(1, 1, List.of(new Point(-1, 0))).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT5UrPEe2NP6AzGuGlzg" name="failingTest17" specification="_0R4aF0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).exit(3, 3)
					.enemy(1, 1, List.of(new Point(0, -1))).make();
		});

	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT5krPEe2NP6AzGuGlzg" name="failingTest18" specification="_0R4aG0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).exit(3, 3)
					.enemy(1, 1, List.of(new Point(-1, -1))).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT50rPEe2NP6AzGuGlzg" name="failingTest19" specification="_0R5BI0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).wall(0, 0).exit(1, 1).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT6ErPEe2NP6AzGuGlzg" name="failingTest20" specification="_0R5BJ0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).key(0, 0, &quot;PINK&quot;).exit(1, 1).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT6UrPEe2NP6AzGuGlzg" name="failingTest21" specification="_0R5BK0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).lock(0, 0).exit(1, 1).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT6krPEe2NP6AzGuGlzg" name="failingTest22" specification="_0R5oM0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).exit(0, 0).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT60rPEe2NP6AzGuGlzg" name="failingTest23" specification="_0R5oN0rPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).door(0, 0, &quot;PINK&quot;).exit(1, 1).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gWT7ErPEe2NP6AzGuGlzg" name="failingTest24" specification="_0R6PQUrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).treasure(0, 0).exit(1, 1).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW68ErPEe2NP6AzGuGlzg" name="failingTest25" specification="_0R6PRUrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).empty(0, 0).exit(1, 1).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW68UrPEe2NP6AzGuGlzg" name="failingTest26" specification="_0R6PSUrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>checkFailed(()->{
			new DomainBuilder().empty(1, 1).player(0, 0).enemy(0, 0, List.of(new Point(0,0))).exit(1, 1).make();
		});
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW68krPEe2NP6AzGuGlzg" name="otherTest01" specification="_0R62UUrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>Domain d = new DomainBuilder().empty(5, 5).player(0, 0).exit(2, 2).make();
		Tile[][] innerstate = d.getInnerState();

		String board = &quot;&quot;;
     for (int y=0; y&lt;innerstate.length; ++y){
         for (int x=0; x&lt;innerstate[y].length; ++x) {
             if (x == 0 &amp;&amp; y == 0) {
                 board+=&quot;|P&quot;;
             } else {
                 board+=&quot;|&quot;+innerstate[y][x].toString();
             }
         }
         board+=&quot;|\n&quot;;
     }

		testCompare(d.toString(), board);
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW680rPEe2NP6AzGuGlzg" name="otherTest02" specification="_0R62VUrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>Domain d = new DomainBuilder().empty(5, 5).player(0, 0).exit(2, 2).make();
		Tile[][] innerstate = d.getInnerState();
		assert innerstate[0][0].colour() == &quot;NULL&quot;;
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW69ErPEe2NP6AzGuGlzg" name="otherTest03" specification="_0R62WUrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>Domain d = new DomainBuilder().empty(5, 5)
				.key(1, 0, &quot;BLUE&quot;)
				.key(1, 1, &quot;GREEN&quot;)
				.key(1, 2, &quot;PINK&quot;)
				.key(1, 3, &quot;YELLOW&quot;)
				.player(0, 0).exit(2, 2).make();
		Tile[][] innerstate = d.getInnerState();
		assert innerstate[1][0].colour().equals(&quot;BLUE&quot;) : &quot;COLOUR SHOULD BE BLUE&quot;;
		assert innerstate[1][1].colour().equals(&quot;GREEN&quot;) : &quot;COLOUR SHOULD BE GREEN&quot;;
		assert innerstate[1][2].colour().equals(&quot;PINK&quot;) : &quot;COLOUR SHOULD BE PINK&quot;;
		assert innerstate[1][3].colour().equals(&quot;YELLOW&quot;) : &quot;COLOUR SHOULD BE YELLOW&quot;;
		assert !innerstate[1][0].isWall() : &quot;SHOULDN'T BE A WALL&quot;;
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW69UrPEe2NP6AzGuGlzg" name="otherTest04" specification="_0R7dYUrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>Domain d = new DomainBuilder().empty(5, 5)
				.door(1, 0, &quot;BLUE&quot;)
				.door(1, 1, &quot;GREEN&quot;)
				.door(1, 2, &quot;PINK&quot;)
				.door(1, 3, &quot;YELLOW&quot;)
				.player(0, 0).exit(2, 2).make();
		Tile[][] innerstate = d.getInnerState();
		assert innerstate[1][0].colour().equals(&quot;BLUE&quot;) : &quot;COLOUR SHOULD BE BLUE&quot;;
		assert innerstate[1][1].colour().equals(&quot;GREEN&quot;) : &quot;COLOUR SHOULD BE GREEN&quot;;
		assert innerstate[1][2].colour().equals(&quot;PINK&quot;) : &quot;COLOUR SHOULD BE PINK&quot;;
		assert innerstate[1][3].colour().equals(&quot;YELLOW&quot;) : &quot;COLOUR SHOULD BE YELLOW&quot;;
		assert innerstate[1][0].isWall() : &quot;SHOULD BE A WALL&quot;;
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW69krPEe2NP6AzGuGlzg" name="otherTest05" specification="_0R7dZUrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>Domain d = new DomainBuilder().empty(5, 5)
				.treasure(1, 0)
				.player(0, 0).exit(2, 2).make();
		Tile[][] innerstate = d.getInnerState();
		assert !innerstate[1][0].isWall() : &quot;SHOULD BE A WALL&quot;;
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW690rPEe2NP6AzGuGlzg" name="otherTest06" specification="_0R7daUrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>Point p = new Point(0, 0);
		Point p2 = new Point(0, 0);
		Point p3 = new Point(0, 1);
		assert p.equals(p) : &quot;Equals itself&quot;;
		assert p.equals(p2) : &quot;Equals another point with different values&quot;;
		assert !p.equals(p3) : &quot;Has different values, not equal&quot;;
		assert !p2.equals(p3) : &quot;Has different values, not equals (2)&quot;;
		assert !p2.equals(null) : &quot;Can't equal null&quot;;
		assert !p2.equals(new Object()) : &quot;Can't equal an object&quot;;
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW6-ErPEe2NP6AzGuGlzg" name="otherTest07" specification="_0R8EckrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>Domain d = new DomainBuilder().empty(5, 5).player(0, 0).exit(2, 2).make();
		assert d.getPlayerPosition().equals(new Point(0, 0)) : &quot;Player position not matching&quot;;

		// test player position is still working after moving
		d.movePlayer(Direction.DOWN);
		d.movePlayer(Direction.DOWN);
		d.movePlayer(Direction.DOWN);
		assert d.getPlayerPosition().equals(new Point(3, 0)) : &quot;Player position not matching&quot;;
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW6-UrPEe2NP6AzGuGlzg" name="otherTest08" specification="_0R8EdkrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>Domain d = new DomainBuilder().empty(2, 2)
				.enemy(0, 0, List.of(new Point(0, 0)))
				.enemy(0, 0, List.of(new Point(0, 1)))
				.enemy(0, 0, List.of(new Point(1, 0))).player(1, 1).exit(2, 2).make();
		assert d.getEnemies().size() == 3;
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW6-krPEe2NP6AzGuGlzg" name="otherTest09" specification="_0R8rgkrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>Player p = new Player(new DomainBuilder().empty(0, 0).player(0, 0).exit(2, 2).make());
		p.removeKey(AuthenticationColour.BLUE);
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW6-0rPEe2NP6AzGuGlzg" name="fuzzTest" specification="_0R8rhkrPEe2NP6AzGuGlzg">
                          <language>java</language>
                          <body>DomainBuilder db = new DomainBuilder();
		BuilderInputGenerator big = new BuilderInputGenerator();

		big.generateRandom(1000000);
		big.playAll(db);
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gW6_ErPEe2NP6AzGuGlzg" name="testCompare" specification="_0R8rikrPEe2NP6AzGuGlzg">
                          <ownedParameter xmi:id="_0gW6_UrPEe2NP6AzGuGlzg" name="ideal">
                            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          </ownedParameter>
                          <ownedParameter xmi:id="_0gW6_krPEe2NP6AzGuGlzg" name="actual">
                            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          </ownedParameter>
                          <language>java</language>
                          <body>assert ideal.equals(actual) : &quot;Should be:\n&quot; + ideal + &quot;\n\nGot:\n&quot; + actual;
	</body>
                        </ownedBehavior>
                        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gXiAErPEe2NP6AzGuGlzg" name="checkFailed" specification="_0d_jcErPEe2NP6AzGuGlzg">
                          <ownedParameter xmi:id="_0gXiAUrPEe2NP6AzGuGlzg" name="f" type="_0Rq-sErPEe2NP6AzGuGlzg"/>
                          <language>java</language>
                          <body>try {
			f.execute();
		}
		catch (IllegalArgumentException | IllegalStateException e) {return;}
		catch (Exception e) {assert false : &quot;Exception e was: &quot; + e;}
		assert false : &quot;Test should've thrown an exception&quot;;
	</body>
                        </ownedBehavior>
                        <ownedOperation xmi:id="_0Rta80rPEe2NP6AzGuGlzg" name="basicTest01" method="_0gT3q0rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RuCAkrPEe2NP6AzGuGlzg" name="basicTest02" method="_0gT3rErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RuCBkrPEe2NP6AzGuGlzg" name="basicTest03" method="_0gT3rUrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RuCCkrPEe2NP6AzGuGlzg" name="basicTest04" method="_0gT3rkrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RupE0rPEe2NP6AzGuGlzg" name="basicTest05" method="_0gT3r0rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RupF0rPEe2NP6AzGuGlzg" name="basicTest06" method="_0gUesErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RupG0rPEe2NP6AzGuGlzg" name="basicTest07" method="_0gUesUrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RvQI0rPEe2NP6AzGuGlzg" name="moveTest01" method="_0gUeskrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RvQJ0rPEe2NP6AzGuGlzg" name="moveTest02" method="_0gUes0rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0Rv3MErPEe2NP6AzGuGlzg" name="moveTest03" method="_0gUetErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0Rv3NErPEe2NP6AzGuGlzg" name="moveTest04" method="_0gUetUrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0Rv3OErPEe2NP6AzGuGlzg" name="wallTest01" method="_0gUetkrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RweQ0rPEe2NP6AzGuGlzg" name="wallTest02" method="_0gUet0rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RweR0rPEe2NP6AzGuGlzg" name="wallTest03" method="_0gUeuErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RweS0rPEe2NP6AzGuGlzg" name="treasureTest01" method="_0gUeuUrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RxFU0rPEe2NP6AzGuGlzg" name="treasureTest02" method="_0gUeukrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RxFV0rPEe2NP6AzGuGlzg" name="keyTest01" method="_0gUeu0rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RxsYkrPEe2NP6AzGuGlzg" name="keyTest02" method="_0gVFwErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RxsZkrPEe2NP6AzGuGlzg" name="keyTest03" method="_0gVFwUrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RyTckrPEe2NP6AzGuGlzg" name="keyTest04" method="_0gVFwkrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RyTdkrPEe2NP6AzGuGlzg" name="doorTest01" method="_0gVFw0rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0RyTekrPEe2NP6AzGuGlzg" name="doorTest02" method="_0gVFxErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0Ry6g0rPEe2NP6AzGuGlzg" name="doorTest03" method="_0gVFxUrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0Ry6h0rPEe2NP6AzGuGlzg" name="doorTest04" method="_0gVFxkrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0Ry6i0rPEe2NP6AzGuGlzg" name="doorTest05" method="_0gVFx0rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0Rzhk0rPEe2NP6AzGuGlzg" name="doorTest06" method="_0gVFyErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0Rzhl0rPEe2NP6AzGuGlzg" name="doorTest07" method="_0gVFyUrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0Rzhm0rPEe2NP6AzGuGlzg" name="doorTest08" method="_0gVFykrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R0Io0rPEe2NP6AzGuGlzg" name="enemyTest01" method="_0gVFy0rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R0Ip0rPEe2NP6AzGuGlzg" name="enemyTest02" method="_0gVFzErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R0Iq0rPEe2NP6AzGuGlzg" name="enemyTest03" method="_0gVs0ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R0vs0rPEe2NP6AzGuGlzg" name="exitTest07" method="_0gVs0UrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R0vt0rPEe2NP6AzGuGlzg" name="infoTest01" method="_0gVs0krPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R0vu0rPEe2NP6AzGuGlzg" name="failingTest01" method="_0gVs00rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R1Ww0rPEe2NP6AzGuGlzg" name="failingTest02" method="_0gVs1ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R1Wx0rPEe2NP6AzGuGlzg" name="failingTest03" method="_0gVs1UrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R1Wy0rPEe2NP6AzGuGlzg" name="failingTest04" method="_0gVs1krPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R1900rPEe2NP6AzGuGlzg" name="failingTest05" method="_0gVs10rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R1910rPEe2NP6AzGuGlzg" name="failingTest06" method="_0gVs2ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R1920rPEe2NP6AzGuGlzg" name="failingTest07" method="_0gVs2UrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R2k40rPEe2NP6AzGuGlzg" name="failingTest08" method="_0gVs2krPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R2k50rPEe2NP6AzGuGlzg" name="failingTest09" method="_0gVs20rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R3L8krPEe2NP6AzGuGlzg" name="failingTest10" method="_0gVs3ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R3L9krPEe2NP6AzGuGlzg" name="failingTest11" method="_0gVs3UrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R3L-krPEe2NP6AzGuGlzg" name="failingTest12" method="_0gWT4ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R3zA0rPEe2NP6AzGuGlzg" name="failingTest13" method="_0gWT4UrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R3zB0rPEe2NP6AzGuGlzg" name="failingTest14" method="_0gWT4krPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R3zC0rPEe2NP6AzGuGlzg" name="failingTest15" method="_0gWT40rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R4aE0rPEe2NP6AzGuGlzg" name="failingTest16" method="_0gWT5ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R4aF0rPEe2NP6AzGuGlzg" name="failingTest17" method="_0gWT5UrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R4aG0rPEe2NP6AzGuGlzg" name="failingTest18" method="_0gWT5krPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R5BI0rPEe2NP6AzGuGlzg" name="failingTest19" method="_0gWT50rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R5BJ0rPEe2NP6AzGuGlzg" name="failingTest20" method="_0gWT6ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R5BK0rPEe2NP6AzGuGlzg" name="failingTest21" method="_0gWT6UrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R5oM0rPEe2NP6AzGuGlzg" name="failingTest22" method="_0gWT6krPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R5oN0rPEe2NP6AzGuGlzg" name="failingTest23" method="_0gWT60rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R6PQUrPEe2NP6AzGuGlzg" name="failingTest24" method="_0gWT7ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R6PRUrPEe2NP6AzGuGlzg" name="failingTest25" method="_0gW68ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R6PSUrPEe2NP6AzGuGlzg" name="failingTest26" method="_0gW68UrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R62UUrPEe2NP6AzGuGlzg" name="otherTest01" method="_0gW68krPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R62VUrPEe2NP6AzGuGlzg" name="otherTest02" method="_0gW680rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R62WUrPEe2NP6AzGuGlzg" name="otherTest03" method="_0gW69ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R7dYUrPEe2NP6AzGuGlzg" name="otherTest04" method="_0gW69UrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R7dZUrPEe2NP6AzGuGlzg" name="otherTest05" method="_0gW69krPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R7daUrPEe2NP6AzGuGlzg" name="otherTest06" method="_0gW690rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R8EckrPEe2NP6AzGuGlzg" name="otherTest07" method="_0gW6-ErPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R8EdkrPEe2NP6AzGuGlzg" name="otherTest08" method="_0gW6-UrPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R8rgkrPEe2NP6AzGuGlzg" name="otherTest09" method="_0gW6-krPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R8rhkrPEe2NP6AzGuGlzg" name="fuzzTest" method="_0gW6-0rPEe2NP6AzGuGlzg"/>
                        <ownedOperation xmi:id="_0R8rikrPEe2NP6AzGuGlzg" name="testCompare" method="_0gW6_ErPEe2NP6AzGuGlzg">
                          <ownedParameter xmi:id="_0R8ri0rPEe2NP6AzGuGlzg" name="ideal">
                            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          </ownedParameter>
                          <ownedParameter xmi:id="_0R9SkErPEe2NP6AzGuGlzg" name="actual">
                            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          </ownedParameter>
                        </ownedOperation>
                        <ownedOperation xmi:id="_0d_jcErPEe2NP6AzGuGlzg" name="checkFailed" method="_0gXiAErPEe2NP6AzGuGlzg">
                          <ownedParameter xmi:id="_0d_jcUrPEe2NP6AzGuGlzg" name="f" type="_0Rq-sErPEe2NP6AzGuGlzg"/>
                        </ownedOperation>
                      </nestedClassifier>
                      <ownedOperation xmi:id="_0R95oErPEe2NP6AzGuGlzg" name="execute"/>
                    </packagedElement>
                    <packagedElement xmi:type="uml:Interface" xmi:id="_0e9MwErPEe2NP6AzGuGlzg" name="DomainBuilderFuzzTest"/>
                    <packagedElement xmi:type="uml:Association" xmi:id="_0g_0IUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g_0IkrPEe2NP6AzGuGlzg _0fqXYkrPEe2NP6AzGuGlzg">
                      <ownedEnd xmi:id="_0g_0IkrPEe2NP6AzGuGlzg" name="" type="_0RsM0ErPEe2NP6AzGuGlzg" association="_0g_0IUrPEe2NP6AzGuGlzg"/>
                    </packagedElement>
                    <packagedElement xmi:type="uml:Association" xmi:id="_0g_0JErPEe2NP6AzGuGlzg" name="" memberEnd="_0g_0JUrPEe2NP6AzGuGlzg _0fqXZUrPEe2NP6AzGuGlzg">
                      <ownedEnd xmi:id="_0g_0JUrPEe2NP6AzGuGlzg" name="" type="_0RsM0ErPEe2NP6AzGuGlzg" association="_0g_0JErPEe2NP6AzGuGlzg"/>
                    </packagedElement>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Enumeration" xmi:id="_0QWwEErPEe2NP6AzGuGlzg" name="AuthenticationColour">
                    <ownedLiteral xmi:id="_0QXXIUrPEe2NP6AzGuGlzg" name="PINK"/>
                    <ownedLiteral xmi:id="_0QXXIkrPEe2NP6AzGuGlzg" name="BLUE"/>
                    <ownedLiteral xmi:id="_0QXXI0rPEe2NP6AzGuGlzg" name="YELLOW"/>
                    <ownedLiteral xmi:id="_0QXXJErPEe2NP6AzGuGlzg" name="GREEN"/>
                    <ownedLiteral xmi:id="_0QXXJUrPEe2NP6AzGuGlzg" name="NULL"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Enumeration" xmi:id="_0QX-MErPEe2NP6AzGuGlzg" name="Direction">
                    <ownedComment xmi:id="_0gdBkErPEe2NP6AzGuGlzg">
                      <body>Direction represents the direction a player can move.

@author Brandon Ru 300562436</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fMdUErPEe2NP6AzGuGlzg" name="dr" isLeaf="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fNrcErPEe2NP6AzGuGlzg" name="dc" isLeaf="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedOperation xmi:id="_0QZMUErPEe2NP6AzGuGlzg" name="Direction" visibility="package" method="_0gA8skrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0QZMU0rPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0QZMVErPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_0QZMUUrPEe2NP6AzGuGlzg" name="dr">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QZMUkrPEe2NP6AzGuGlzg" name="dc">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QZMVUrPEe2NP6AzGuGlzg" type="_0QX-MErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedLiteral xmi:id="_0QX-MUrPEe2NP6AzGuGlzg" name="UP">
                      <specification xmi:type="uml:Expression" xmi:id="_0QX-MkrPEe2NP6AzGuGlzg">
                        <operand xmi:type="uml:LiteralString" xmi:id="_0gdBkUrPEe2NP6AzGuGlzg" value="-1"/>
                        <operand xmi:type="uml:LiteralString" xmi:id="_0gdBkkrPEe2NP6AzGuGlzg" value="0"/>
                      </specification>
                    </ownedLiteral>
                    <ownedLiteral xmi:id="_0QX-M0rPEe2NP6AzGuGlzg" name="DOWN">
                      <specification xmi:type="uml:Expression" xmi:id="_0QX-NErPEe2NP6AzGuGlzg">
                        <operand xmi:type="uml:LiteralString" xmi:id="_0gdBk0rPEe2NP6AzGuGlzg" value="1"/>
                        <operand xmi:type="uml:LiteralString" xmi:id="_0gdBlErPEe2NP6AzGuGlzg" value="0"/>
                      </specification>
                    </ownedLiteral>
                    <ownedLiteral xmi:id="_0QX-NUrPEe2NP6AzGuGlzg" name="LEFT">
                      <specification xmi:type="uml:Expression" xmi:id="_0QX-NkrPEe2NP6AzGuGlzg">
                        <operand xmi:type="uml:LiteralString" xmi:id="_0gdBlUrPEe2NP6AzGuGlzg" value="0"/>
                        <operand xmi:type="uml:LiteralString" xmi:id="_0gdBlkrPEe2NP6AzGuGlzg" value="-1"/>
                      </specification>
                    </ownedLiteral>
                    <ownedLiteral xmi:id="_0QX-N0rPEe2NP6AzGuGlzg" name="RIGHT">
                      <specification xmi:type="uml:Expression" xmi:id="_0QX-OErPEe2NP6AzGuGlzg">
                        <operand xmi:type="uml:LiteralString" xmi:id="_0gdBl0rPEe2NP6AzGuGlzg" value="0"/>
                        <operand xmi:type="uml:LiteralString" xmi:id="_0gdBmErPEe2NP6AzGuGlzg" value="1"/>
                      </specification>
                    </ownedLiteral>
                    <ownedLiteral xmi:id="_0QX-OUrPEe2NP6AzGuGlzg" name="NONE">
                      <specification xmi:type="uml:Expression" xmi:id="_0QYlQErPEe2NP6AzGuGlzg">
                        <operand xmi:type="uml:LiteralString" xmi:id="_0gdBmUrPEe2NP6AzGuGlzg" value="0"/>
                        <operand xmi:type="uml:LiteralString" xmi:id="_0gdBmkrPEe2NP6AzGuGlzg" value="0"/>
                      </specification>
                    </ownedLiteral>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0QZzYErPEe2NP6AzGuGlzg" name="Domain">
                    <ownedComment xmi:id="_0gdBm0rPEe2NP6AzGuGlzg">
                      <body>The domain represents the internal state of the game.
It handles all the logic between tiles, players, and actors.

@author Brandon Ru 300562436
 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fNrckrPEe2NP6AzGuGlzg" name="gameState" visibility="private" type="_0RBedUrPEe2NP6AzGuGlzg" association="_0g2DJErPEe2NP6AzGuGlzg">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0fNrc0rPEe2NP6AzGuGlzg" value="*"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fOSgkrPEe2NP6AzGuGlzg" name="player" type="_0Q7-4ErPEe2NP6AzGuGlzg" isReadOnly="true" association="_0g2qMUrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fO5kErPEe2NP6AzGuGlzg" name="enemies" type="_0QqSEErPEe2NP6AzGuGlzg" isOrdered="true" isReadOnly="true" association="_0g2qNErPEe2NP6AzGuGlzg">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0fO5kkrPEe2NP6AzGuGlzg" value="*"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fPgokrPEe2NP6AzGuGlzg" name="requiredTreasureCount" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fPgpErPEe2NP6AzGuGlzg" name="playing" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fQHsUrPEe2NP6AzGuGlzg" name="GRAPHICAL_PADDING" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fQHskrPEe2NP6AzGuGlzg" value="1"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fQHs0rPEe2NP6AzGuGlzg" name="TOOLTIP_STRING" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fQHtErPEe2NP6AzGuGlzg" value="&quot;1. CTRL-X - exit the game, the current game state will be lost, the next time the game is\n&quot;&#xA;&#x9;+ &quot;started, it will resume from the last unfinished level\n&quot;&#xA;&#x9;+ &quot;2. CTRL-S - exit the game, saves the game state, game will resume next time the\n&quot;&#xA;&#x9;+ &quot;application will be started\n&quot;&#xA;&#x9;+ &quot;3. CTRL-R - resume a saved game -- this will pop up a file selector to select a saved game\n&quot;&#xA;&#x9;+ &quot;to be loaded\n&quot;&#xA;&#x9;+ &quot;4. CTRL-1 - start a new game at level 1\n&quot;&#xA;&#x9;+ &quot;5. CTRL-2 - start a new game at level 2\n&quot;&#xA;&#x9;+ &quot;6. SPACE - pause the game and display a “game is paused” dialog\n&quot;&#xA;&#x9;+ &quot;7. ESC - close the “game is paused” dialog and resume the game\n&quot;&#xA;&#x9;+ &quot;8. UP, DOWN, LEFT, RIGHT ARROWS -- move Chap within the maze&quot;"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gBjwkrPEe2NP6AzGuGlzg" name="Domain" specification="_0eWIwErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gBjw0rPEe2NP6AzGuGlzg" name="gameState" type="_0RBedUrPEe2NP6AzGuGlzg">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gBjxErPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gBjxUrPEe2NP6AzGuGlzg" name="enemies" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gBjxkrPEe2NP6AzGuGlzg" type="_0QZzYErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>this.player = new Player(this);
 this.enemies = enemies;
 this.gameState = gameState;
 this.playing = true;
 countTreasures();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gBjx0rPEe2NP6AzGuGlzg" name="requiredTreasureCount" specification="_0QbBgErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gBjyErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return requiredTreasureCount;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gBjyUrPEe2NP6AzGuGlzg" name="treasuresLeft" specification="_0QbBgkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gBjykrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return requiredTreasureCount - player.getTreasureCount();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gBjy0rPEe2NP6AzGuGlzg" name="keysCollected" specification="_0QbokErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gBjzErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return player.getTotalKeysCollected();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gBjzUrPEe2NP6AzGuGlzg" name="setPlayerPosition" specification="_0ctKAErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gBjzkrPEe2NP6AzGuGlzg" name="pos" type="_0Q_CMErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>if (!withinDomain(pos)) {
   throw new IllegalArgumentException(
     &quot;Cannot set player position in domain out of bounds.&quot;
   );
 }
 this.player.setPosition(pos);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gBjz0rPEe2NP6AzGuGlzg" name="getPlayerPosition" specification="_0QbokkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gBj0ErPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return player.getPosition();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gBj0UrPEe2NP6AzGuGlzg" name="getPlayerGraphicalPosition" specification="_0Qbok0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gBj0krPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return player.getGraphicalPosition();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCK0ErPEe2NP6AzGuGlzg" name="movePlayer" specification="_0ctxE0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gCK0UrPEe2NP6AzGuGlzg" name="direction" type="_0QX-MErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>if (playing == false || direction == Direction.NONE) {
   return;
 }

 Point pos = player.getPosition();
 pos = pos.translate(direction.dr, direction.dc);
 
 // If this doesn't move the player out of the domain.
 if (withinDomain(pos)) {
   // Interact with the tile.
   Tile target = gameState[(int) pos.row()][(int) pos.col()];
   target.acceptPlayer(player);
   // Then move it in, iff it's not a wall.
   if (!target.isWall()) {
     player.setPosition(pos);
   }
 }

 // Check if the player's position collides with any enemies.
 checkIfPlayerKilledByEnemies();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCK0krPEe2NP6AzGuGlzg" name="moveActors" specification="_0QcPoErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>enemies.stream().forEach(e -> e.move());
 checkIfPlayerKilledByEnemies();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCK00rPEe2NP6AzGuGlzg" name="toString" specification="_0QcPoUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gCK1ErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>String board = &quot;&quot;;
 for (int y = 0; y &lt; gameState.length; ++y) {
   for (int x = 0; x &lt; gameState[y].length; ++x) {
     Point currentPosition = new Point(y, x);
     if (playerOn(currentPosition)) {
       board += &quot;|&quot; + player.toString();
     } else if (
       enemies.stream().anyMatch(e -> e.collidesWith(currentPosition))
     ) {
       board += &quot;|&quot; + enemies.get(0).toString();
     } else {
       board += &quot;|&quot; + gameState[y][x].toString();
     }
   }
   board += &quot;|\n&quot;;
 }
 return board;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCK1UrPEe2NP6AzGuGlzg" name="nextLevel" specification="_0QcPo0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>this.playing = false;
 UserListener.nextLevel();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCK1krPEe2NP6AzGuGlzg" name="loseLevel" specification="_0QcPpErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>System.out.println(&quot;PlayingSound&quot;);
 this.playing = false;
 UserListener.loseLevel();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCK10rPEe2NP6AzGuGlzg" name="showToolTip" specification="_0QcPpUrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>GUI.showToolTip(TOOLTIP_STRING);
 System.out.println(&quot;showing tooltip&quot;);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCx4ErPEe2NP6AzGuGlzg" name="getInnerState" specification="_0Qc2sErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gCx4UrPEe2NP6AzGuGlzg" type="_0RBedUrPEe2NP6AzGuGlzg" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gCx4krPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return Arrays.stream(gameState).map(Tile[]::clone).toArray(Tile[][]::new);
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCx40rPEe2NP6AzGuGlzg" name="getGraphicalState" specification="_0Qc2tErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gCx5ErPEe2NP6AzGuGlzg" type="_0RBedUrPEe2NP6AzGuGlzg" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gCx5UrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>int domainHeight = gameState.length;
 int domainWidth = gameState[0].length;
 int graphicalHeight = domainHeight + GRAPHICAL_PADDING * 2;
 int graphicalWidth = domainWidth + GRAPHICAL_PADDING * 2;

 Tile[][] graphicalGameState = new Tile[graphicalHeight][graphicalWidth];
 for (Tile[] gameRow : graphicalGameState) {
   Arrays.fill(gameRow, FreeTile.empty());
 }

 for (int y = 0; y &lt; domainHeight; ++y) {
   for (int x = 0; x &lt; domainWidth; ++x) {
     graphicalGameState[y + GRAPHICAL_PADDING][x + GRAPHICAL_PADDING] =
       gameState[y][x];
   }
 }

 return graphicalGameState;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCx5krPEe2NP6AzGuGlzg" name="overrideInitialTreasureCount" specification="_0Qddw0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gCx50rPEe2NP6AzGuGlzg" name="treasureCount">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>this.requiredTreasureCount = treasureCount;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCx6ErPEe2NP6AzGuGlzg" name="withinDomain" specification="_0cuYIErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gCx6UrPEe2NP6AzGuGlzg" name="pos" type="_0Q_CMErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gCx6krPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return (
   pos.row() >= 0 &amp;&amp;
   pos.row() &lt; gameState.length &amp;&amp;
   pos.col() >= 0 &amp;&amp;
   pos.col() &lt; gameState[0].length
 );
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCx60rPEe2NP6AzGuGlzg" name="countTreasures" specification="_0QeE0ErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>for (int y = 0; y &lt; gameState.length; ++y) {
   for (int x = 0; x &lt; gameState[y].length; ++x) {
     if (gameState[y][x].name() == &quot;treasure&quot;) {
       requiredTreasureCount++;
     }
   }
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCx7ErPEe2NP6AzGuGlzg" name="playerOn" specification="_0cuYI0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gCx7UrPEe2NP6AzGuGlzg" name="pos" type="_0Q_CMErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gCx7krPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return pos.equals(player.getPosition());
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gCx70rPEe2NP6AzGuGlzg" name="checkIfPlayerKilledByEnemies" specification="_0QeE0UrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>boolean playerDead = enemies
   .stream()
   .anyMatch(e -> e.collidesWith(player.getPosition()));
 if (playerDead) {
   loseLevel();
 }
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0QbBgErPEe2NP6AzGuGlzg" name="requiredTreasureCount" method="_0gBjx0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdBnUrPEe2NP6AzGuGlzg">
                        <body>------------------ PUBLIC API ------------------------------------------</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QbBgUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QbBgkrPEe2NP6AzGuGlzg" name="treasuresLeft" method="_0gBjyUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdBnkrPEe2NP6AzGuGlzg">
                        <body>Returns the number of treasures left to collect
   * @returns Number of treasures left</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QbBg0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QbokErPEe2NP6AzGuGlzg" name="keysCollected" method="_0gBjy0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdBn0rPEe2NP6AzGuGlzg">
                        <body>Returns the total keys
   * @returns The number of keys left</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QbokUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QbokkrPEe2NP6AzGuGlzg" name="getPlayerPosition" method="_0gBjz0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdBoUrPEe2NP6AzGuGlzg">
                        <body>Get the player position
   * @param pos The position of the player.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ctxEUrPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qbok0rPEe2NP6AzGuGlzg" name="getPlayerGraphicalPosition" method="_0gBj0UrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdooErPEe2NP6AzGuGlzg">
                        <body>Get the player position
   * @param pos The position of the player.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ctxEkrPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QcPoErPEe2NP6AzGuGlzg" name="moveActors" method="_0gCK0krPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdookrPEe2NP6AzGuGlzg">
                        <body>This function will be called when the enemies need to move.
   * Checks if any enemies collided with enemies.
   * Use observer pattern.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QcPoUrPEe2NP6AzGuGlzg" name="toString" method="_0gCK00rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdoo0rPEe2NP6AzGuGlzg">
                        <body>For use in testing. Similar to SWEN221 chess toString.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QcPokrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QcPo0rPEe2NP6AzGuGlzg" name="nextLevel" method="_0gCK1UrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdopErPEe2NP6AzGuGlzg">
                        <body>This function will be called when the level is completed.
   * Use observer pattern.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QcPpErPEe2NP6AzGuGlzg" name="loseLevel" method="_0gCK1krPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdopUrPEe2NP6AzGuGlzg">
                        <body>This function will be called when the level is lost.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QcPpUrPEe2NP6AzGuGlzg" name="showToolTip" isStatic="true" method="_0gCK10rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdopkrPEe2NP6AzGuGlzg">
                        <body>This function will be called when the player steps on the info tile.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qc2sErPEe2NP6AzGuGlzg" name="getInnerState" method="_0gCx4ErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdop0rPEe2NP6AzGuGlzg">
                        <body>Returns a 2D clone of the internal view of the domain.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0Qc2sUrPEe2NP6AzGuGlzg" type="_0RBedUrPEe2NP6AzGuGlzg" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0Qc2skrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qc2tErPEe2NP6AzGuGlzg" name="getGraphicalState" method="_0gCx40rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdoqErPEe2NP6AzGuGlzg">
                        <body>Returns a padded 2D clone of the internal view of the domain.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QddwErPEe2NP6AzGuGlzg" type="_0RBedUrPEe2NP6AzGuGlzg" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0QddwUrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qddw0rPEe2NP6AzGuGlzg" name="overrideInitialTreasureCount" method="_0gCx5krPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdoqUrPEe2NP6AzGuGlzg">
                        <body>Only use for persistency, no where else please.
   * This will set the initial treasureCount</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QddxErPEe2NP6AzGuGlzg" name="treasureCount">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QeE0ErPEe2NP6AzGuGlzg" name="countTreasures" visibility="private" method="_0gCx60rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdoq0rPEe2NP6AzGuGlzg">
                        <body>Counts the number of treasures to finish the level.
   * Should only be called within the constructor.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QeE0UrPEe2NP6AzGuGlzg" name="checkIfPlayerKilledByEnemies" visibility="private" method="_0gCx70rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdorUrPEe2NP6AzGuGlzg">
                        <body>Loses the level, iff the player is hit by enemies.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ctKAErPEe2NP6AzGuGlzg" name="setPlayerPosition" method="_0gBjzUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdBoErPEe2NP6AzGuGlzg">
                        <body>Sets the player position.
   * Used within the domain builder.
   * @param pos The desired position of the player.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ctxEErPEe2NP6AzGuGlzg" name="pos" type="_0Q_CMErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ctxE0rPEe2NP6AzGuGlzg" name="movePlayer" method="_0gCK0ErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdooUrPEe2NP6AzGuGlzg">
                        <body>Move player in a given direction.
   * @param direction Direction enum (UP, LEFT, RIGHT, DOWN)</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ctxFErPEe2NP6AzGuGlzg" name="direction" type="_0QX-MErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0cuYIErPEe2NP6AzGuGlzg" name="withinDomain" visibility="private" method="_0gCx6ErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdoqkrPEe2NP6AzGuGlzg">
                        <body>---------------------PRIVATE FUNCTIONS-------------------------------</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0cuYIUrPEe2NP6AzGuGlzg" name="pos" type="_0Q_CMErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0cuYIkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0cuYI0rPEe2NP6AzGuGlzg" name="playerOn" visibility="private" method="_0gCx7ErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdorErPEe2NP6AzGuGlzg">
                        <body>Check if the player is on this coordinate.
   * @param pos Point of interest.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0cuYJErPEe2NP6AzGuGlzg" name="pos" type="_0Q_CMErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0cu_MErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0eWIwErPEe2NP6AzGuGlzg" name="Domain" method="_0gBjwkrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0eWIw0rPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0eWIxErPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0gdBnErPEe2NP6AzGuGlzg">
                        <body>Raw constructor.
   * Do not use. Use the builder please.
   * @param gameState 2D array of tiles.
   * @param enemies List of enemies.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0eWIwUrPEe2NP6AzGuGlzg" name="gameState" type="_0RBedUrPEe2NP6AzGuGlzg">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0eWIxkrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0eWIwkrPEe2NP6AzGuGlzg" name="enemies" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0eWIxUrPEe2NP6AzGuGlzg" type="_0QZzYErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0QghEErPEe2NP6AzGuGlzg" name="DomainBuilder">
                    <ownedComment xmi:id="_0gdorkrPEe2NP6AzGuGlzg">
                      <body>Fluent Builder API for creating a Domain object.
Initial height and width does not need to be provided
It will AUTODETECT this.
Remember to call .make() to crystalise the object.
 *
Every domain must have
- Exactly one player.
- At least one exit.
 *
Example usage:
 *
DomainBuilder db = new DomainBuilder();
Domain d = db
.wall(1, 2)
.wall(1, 3)
.wall(1, 4)
.wall(2, 4)
.player(0, 1)
.exit(5, 5)
.make()
 *
toString() -->
 *
|_|P|_|_|_|_|
|_|_|#|#|#|_|
|_|_|_|_|#|_|
|_|_|_|_|_|_|
|_|_|_|_|_|E|

@author Brandon Ru 300562436</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fQuwErPEe2NP6AzGuGlzg" name="MAX_WIDTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fQuwUrPEe2NP6AzGuGlzg" value="1000"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fQuwkrPEe2NP6AzGuGlzg" name="MAX_HEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fRV0ErPEe2NP6AzGuGlzg" value="1000"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fRV0UrPEe2NP6AzGuGlzg" name="domainContent" visibility="private" type="_0RBedUrPEe2NP6AzGuGlzg" association="_0g3RQErPEe2NP6AzGuGlzg">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0fRV0krPEe2NP6AzGuGlzg" value="*"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fRV1UrPEe2NP6AzGuGlzg" name="domainEnemies" visibility="private" type="_0QqSEErPEe2NP6AzGuGlzg" isOrdered="true" association="_0g3RQ0rPEe2NP6AzGuGlzg">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0fRV1krPEe2NP6AzGuGlzg" value="*"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fR84UrPEe2NP6AzGuGlzg" name="domainHeight" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fR840rPEe2NP6AzGuGlzg" name="domainWidth" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fSj8ErPEe2NP6AzGuGlzg" name="domainPlayerPosition" visibility="private" type="_0Q_CMErPEe2NP6AzGuGlzg" association="_0g3RRkrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fSj8krPEe2NP6AzGuGlzg" name="domainExitLocation" visibility="private" type="_0Q_CMErPEe2NP6AzGuGlzg" association="_0g34UUrPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gDY8ErPEe2NP6AzGuGlzg" name="DomainBuilder" specification="_0QhIIErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gDY8UrPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>System.out.println(&quot;BREAKPOINT: Domainbuilder initiated.&quot;);
     this.reset();
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gDY8krPEe2NP6AzGuGlzg" name="reset" specification="_0QhIJErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>domainExitLocation = null;
     domainPlayerPosition = null;
     domainContent = new Tile[MAX_WIDTH][MAX_HEIGHT];
     domainEnemies = new ArrayList&lt;Enemy>();
     domainHeight = -1;
     domainWidth = -1;

     for (Tile[] domainContentRow : domainContent) {
         Arrays.fill(domainContentRow, FreeTile.empty());
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gDY80rPEe2NP6AzGuGlzg" name="player" specification="_0QhvMErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gDY9ErPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gDY9UrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gDY9krPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>checkWithinAbsoluteLimits(row, col);
     if (domainPlayerPosition != null) {
         throw new IllegalStateException(&quot;You cannot have more than one player.&quot;);
     }
     if (!domainContent[row][col].name().equals(&quot;empty&quot;)) {
         throw new IllegalStateException(&quot;You cannot spawn on a occupied tile.&quot;);
     }
     domainPlayerPosition = new Point(row, col);
     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gDY90rPEe2NP6AzGuGlzg" name="enemy" specification="_0eX98ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gDY-ErPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gDY-UrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gDY-krPEe2NP6AzGuGlzg" name="path" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gDY-0rPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>if (path == null) {
         throw new IllegalArgumentException(&quot;Null path disallowed.&quot;);
     }
     if (path.isEmpty()) {
         throw new IllegalArgumentException(&quot;Empty path disallowed.&quot;);
     }
     if (path.stream().anyMatch(p -> p == null)) {
         throw new IllegalArgumentException(&quot;Cannot have null points in path.&quot;);
     }

     checkWithinAbsoluteLimits(row, col);
     checkNoPlayerHere(row, col);
     path.stream().forEach(p -> {
         checkWithinAbsoluteLimits(p.row(), p.col());
     });

     try {
         Class&lt;?> basicEnemyClass = ActorLoader
                 .getClass(new File(&quot;nz/ac/vuw/ecs/swen225/gp22/levels/level2.jar&quot;),
                         &quot;nz.ac.vuw.ecs.swen225.gp22.persistency.BasicEnemy&quot;);

         Enemy enemy = (Enemy) basicEnemyClass.getDeclaredConstructor(List.class).newInstance(path);
         domainEnemies.add(enemy);
     } catch (Exception e) {
         System.out.println(&quot;Enemy class loader not found.&quot;);
     }

     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gDY_ErPEe2NP6AzGuGlzg" name="enemy" specification="_0cxbcUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gDY_UrPEe2NP6AzGuGlzg" name="e" type="_0QqSEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gDY_krPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>int row = e.getPosition().row();
     int col = e.getPosition().col();
     checkWithinAbsoluteLimits(row, col);
     checkNoPlayerHere(row, col);
     domainEnemies.add(e);
     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gDY_0rPEe2NP6AzGuGlzg" name="empty" specification="_0QhvM0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gDZAErPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gDZAUrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gDZAkrPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>checkWithinAbsoluteLimits(row, col);
     checkNoPlayerHere(row, col);
     domainContent[row][col] = FreeTile.empty();
     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEAAErPEe2NP6AzGuGlzg" name="wall" specification="_0QiWQErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEAAUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAAkrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAA0rPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>checkWithinAbsoluteLimits(row, col);
     checkNoPlayerHere(row, col);
     domainContent[row][col] = WallTile.of();
     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEABErPEe2NP6AzGuGlzg" name="exit" specification="_0QiWQ0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEABUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEABkrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAB0rPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>checkWithinAbsoluteLimits(row, col);
     checkNoPlayerHere(row, col);
     domainContent[row][col] = new ExitTile();
     domainExitLocation = new Point(row, col);
     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEACErPEe2NP6AzGuGlzg" name="treasure" specification="_0Qi9UUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEACUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEACkrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAC0rPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>checkWithinAbsoluteLimits(row, col);
     checkNoPlayerHere(row, col);
     domainContent[row][col] = FreeTile.treasure();
     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEADErPEe2NP6AzGuGlzg" name="key" specification="_0Qi9VErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEADUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEADkrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAD0rPEe2NP6AzGuGlzg" name="colour">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAEErPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>checkWithinAbsoluteLimits(row, col);
     checkNoPlayerHere(row, col);
     domainContent[row][col] = FreeTile.key(
             AuthenticationColour.valueOf(colour));
     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEAEUrPEe2NP6AzGuGlzg" name="door" specification="_0QjkYkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEAEkrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAE0rPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAFErPEe2NP6AzGuGlzg" name="colour">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAFUrPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>checkWithinAbsoluteLimits(row, col);
     checkNoPlayerHere(row, col);
     domainContent[row][col] = FreeTile.door(
             AuthenticationColour.valueOf(colour));
     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEAFkrPEe2NP6AzGuGlzg" name="info" specification="_0QkLcErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEAF0rPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAGErPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAGUrPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>checkWithinAbsoluteLimits(row, col);
     checkNoPlayerHere(row, col);
     domainContent[row][col] = FreeTile.info();
     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEAGkrPEe2NP6AzGuGlzg" name="lock" specification="_0QkLc0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEAG0rPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAHErPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEAHUrPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>checkWithinAbsoluteLimits(row, col);
     checkNoPlayerHere(row, col);
     domainContent[row][col] = FreeTile.lock();
     detectBoundaries(row, col);
     return this;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEnEErPEe2NP6AzGuGlzg" name="make" specification="_0QkygErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEnEUrPEe2NP6AzGuGlzg" type="_0QZzYErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>// Check for correct state
     if (domainHeight == -1 || domainWidth == -1) {
         throw new IllegalStateException(&quot;You haven't set any tiles.&quot;);
     }
     if (domainPlayerPosition == null) {
         throw new IllegalStateException(&quot;You haven't set the players position.&quot;);
     }

     if (domainExitLocation == null) {
         throw new IllegalStateException(&quot;You haven't set an exit position.&quot;);
     }

     // Copies over the selected region.
     Tile[][] selectedDomainContent = new Tile[domainHeight][domainWidth];
     for (int y = 0; y &lt; domainHeight; ++y) {
         for (int x = 0; x &lt; domainWidth; ++x) {
             selectedDomainContent[y][x] = domainContent[y][x];
         }
     }

     // Creates the player, linking it to the domain.
     Domain d = new Domain(selectedDomainContent, domainEnemies);
     d.setPlayerPosition(domainPlayerPosition);

     System.out.println(&quot;BREAKPOINT: Domainbuilder preconditions passed - domain returned.&quot;);
     return d;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEnEkrPEe2NP6AzGuGlzg" name="detectBoundaries" specification="_0QkygUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEnE0rPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEnFErPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>domainHeight = Math.max(domainHeight, row + 1);
     domainWidth = Math.max(domainWidth, col + 1);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEnFUrPEe2NP6AzGuGlzg" name="checkWithinAbsoluteLimits" specification="_0QkyhErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEnFkrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEnF0rPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if (row &lt; 0) {
         throw new IllegalArgumentException(&quot;Row cannot be less than 0.&quot;);
     }
     if (col &lt; 0) {
         throw new IllegalArgumentException(&quot;Col cannot be less than 0.&quot;);
     }
     if (row >= MAX_HEIGHT) {
         throw new IllegalArgumentException(&quot;Row cannot be greater than 999.&quot;);
     }
     if (col >= MAX_WIDTH) {
         throw new IllegalArgumentException(&quot;Col cannot be greater than 999.&quot;);
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gEnGErPEe2NP6AzGuGlzg" name="checkNoPlayerHere" specification="_0QlZkErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gEnGUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gEnGkrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if (domainPlayerPosition != null &amp;&amp; domainPlayerPosition.equals(new Point(row, col))) {
         throw new IllegalStateException(&quot;You cannot place a tile on top of a player.&quot;);
     }
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0QhIIErPEe2NP6AzGuGlzg" name="DomainBuilder" method="_0gDY8ErPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0QhIIUrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0QhIIkrPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_0QhII0rPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QhIJErPEe2NP6AzGuGlzg" name="reset" method="_0gDY8krPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdor0rPEe2NP6AzGuGlzg">
                        <body>Resets the state of the builder
     * All tiles are free tiles by default.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QhvMErPEe2NP6AzGuGlzg" name="player" method="_0gDY80rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdosErPEe2NP6AzGuGlzg">
                        <body>Creates an player given row and column.
     *
     * @param row Row of the tile.
     * @param col Column of the tile.
     * @return Domain builder object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QhvMUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QhvMkrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0cxbcErPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QhvM0rPEe2NP6AzGuGlzg" name="empty" method="_0gDY_0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdos0rPEe2NP6AzGuGlzg">
                        <body>Creates an empty tile at given row and column.
     *
     * @param row Row of the tile.
     * @param col Column of the tile.
     * @return Domain builder object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QhvNErPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QhvNUrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0cxbdErPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QiWQErPEe2NP6AzGuGlzg" name="wall" method="_0gEAAErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdotErPEe2NP6AzGuGlzg">
                        <body>Creates a wall tile at the given location.
     * As all default tiles are rows.
     *
     * @param row Row of the wall tile.
     * @param col Column of the wall tile.
     * @return Domain builder object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QiWQUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QiWQkrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0cyCgErPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QiWQ0rPEe2NP6AzGuGlzg" name="exit" method="_0gEABErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdotUrPEe2NP6AzGuGlzg">
                        <body>Creates a exit tile at the given location.
     * 
     * @param row Row of the exit tile.
     * @param col Column of the exit tile.
     * @return Domain builder object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QiWRErPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0Qi9UErPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0cyCgUrPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qi9UUrPEe2NP6AzGuGlzg" name="treasure" method="_0gEACErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePsErPEe2NP6AzGuGlzg">
                        <body>Creates a treasure tile at the given location.
     *
     * @param row Row of the treasure.
     * @param col Column of the treasure.
     * @return Domain builder object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0Qi9UkrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0Qi9U0rPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0cyCgkrPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qi9VErPEe2NP6AzGuGlzg" name="key" method="_0gEADErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePsUrPEe2NP6AzGuGlzg">
                        <body>Creates a key tile at the given location.
     *
     * @param row    Row of the key.
     * @param col    Column of the key.
     * @param colour String representation in ALL CAPS of the colour .. PINK e.g
     * @return Domain builder object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0Qi9VUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QjkYErPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QjkYUrPEe2NP6AzGuGlzg" name="colour">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0cyCg0rPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QjkYkrPEe2NP6AzGuGlzg" name="door" method="_0gEAEUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePskrPEe2NP6AzGuGlzg">
                        <body>Creates a door tile at the given location, with a specific colour.
     *
     * @param row Row of the door.
     * @param col Column of the door.
     * @return Domain builder object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QjkY0rPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QjkZErPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QjkZUrPEe2NP6AzGuGlzg" name="colour">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0cyChErPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QkLcErPEe2NP6AzGuGlzg" name="info" method="_0gEAFkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePs0rPEe2NP6AzGuGlzg">
                        <body>Creates a info tile at the given location.
     *
     * @param row Row of the info.
     * @param col Column of the info.
     * @return Domain builder object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QkLcUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QkLckrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0cyChUrPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QkLc0rPEe2NP6AzGuGlzg" name="lock" method="_0gEAGkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePtErPEe2NP6AzGuGlzg">
                        <body>Creates an exit lock tile at the given location.
     *
     * @param row Row of the lock.
     * @param col Column of the lock.
     * @return Domain builder object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QkLdErPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QkLdUrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0cyChkrPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QkygErPEe2NP6AzGuGlzg" name="make" method="_0gEnEErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePtUrPEe2NP6AzGuGlzg">
                        <body>Returns the constructed domain object.
     * with a nested player (that is linked to the domain).
     *
     * @return Built domain object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0cyCh0rPEe2NP6AzGuGlzg" type="_0QZzYErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QkygUrPEe2NP6AzGuGlzg" name="detectBoundaries" visibility="private" method="_0gEnEkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePtkrPEe2NP6AzGuGlzg">
                        <body>Auto detects the boundaries of the board.
     * and updates them.
     *
     * @param row Row position
     * @param col Col position</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QkygkrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0Qkyg0rPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QkyhErPEe2NP6AzGuGlzg" name="checkWithinAbsoluteLimits" visibility="private" method="_0gEnFUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePt0rPEe2NP6AzGuGlzg">
                        <body>Checks if the (row, col) is within the maximum bounds.
     *
     * @param row Row position
     * @param col Col position</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QkyhUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QkyhkrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QlZkErPEe2NP6AzGuGlzg" name="checkNoPlayerHere" visibility="private" method="_0gEnGErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePuErPEe2NP6AzGuGlzg">
                        <body>Ensures there is no player at the position.
     *
     *</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QlZkUrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0QlZkkrPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0cxbcUrPEe2NP6AzGuGlzg" name="enemy" method="_0gDY_ErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdoskrPEe2NP6AzGuGlzg">
                        <body>Adds an enemy to the domain.
     * @param e Enemy.
     * @return DomainBuilder reference.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0cxbckrPEe2NP6AzGuGlzg" name="e" type="_0QqSEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0cxbc0rPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0eX98ErPEe2NP6AzGuGlzg" name="enemy" method="_0gDY90rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gdosUrPEe2NP6AzGuGlzg">
                        <body>Creates an enemy given a row and column, and it's path, set
     *
     * @param row Row of the enemy.
     * @param col Column of the enemy.
     * @return DomainBuilder reference.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0eX98UrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0eX98krPEe2NP6AzGuGlzg" name="col">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0eX980rPEe2NP6AzGuGlzg" name="path" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0eX99ErPEe2NP6AzGuGlzg" type="_0QghEErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0Qn10ErPEe2NP6AzGuGlzg" name="EmptyState">
                    <ownedComment xmi:id="_0gePuUrPEe2NP6AzGuGlzg">
                      <body>The empty tile, which does nothing.

If the existence of this class makes no sense, think of this as the empty set
object (in mathematics), and the other classes as a set with 1 object exactly.

The empty set is still a state.

Implemented with a SINGLETON, to save memory.

@author Brandon Ru 300562436</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fTLAErPEe2NP6AzGuGlzg" name="singleton" visibility="private" isLeaf="true" isStatic="true" type="_0Qn10ErPEe2NP6AzGuGlzg" isReadOnly="true" association="_0g34VErPEe2NP6AzGuGlzg">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fTLAUrPEe2NP6AzGuGlzg" value="new EmptyState()"/>
                    </ownedAttribute>
                    <interfaceRealization xmi:id="_0c5-UErPEe2NP6AzGuGlzg" client="_0Qn10ErPEe2NP6AzGuGlzg" supplier="_0Q0DEErPEe2NP6AzGuGlzg" contract="_0Q0DEErPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gFOIErPEe2NP6AzGuGlzg" name="of" specification="_0Qn10UrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gFOIUrPEe2NP6AzGuGlzg" type="_0Qn10ErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return singleton;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gFOIkrPEe2NP6AzGuGlzg" name="isWall" specification="_0Qoc5UrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gFOI0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return false;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gFOJErPEe2NP6AzGuGlzg" name="performAction" specification="_0c6lYUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gFOJUrPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gFOJkrPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>return;        
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gFOJ0rPEe2NP6AzGuGlzg" name="name" specification="_0QpD9ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gFOKErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;empty&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gFOKUrPEe2NP6AzGuGlzg" name="toString" specification="_0QprA0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gFOKkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;_&quot;;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0Qn10UrPEe2NP6AzGuGlzg" name="of" isStatic="true" method="_0gFOIErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0c6lYErPEe2NP6AzGuGlzg" type="_0Qn10ErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qoc4ErPEe2NP6AzGuGlzg" name="EmptyState" visibility="private">
                      <eAnnotations xmi:id="_0Qoc4UrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0Qoc4krPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_0Qoc5ErPEe2NP6AzGuGlzg" type="_0Qn10ErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qoc5UrPEe2NP6AzGuGlzg" name="isWall" method="_0gFOIkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QpD8ErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QpD9ErPEe2NP6AzGuGlzg" name="name" method="_0gFOJ0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QpD9UrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QprA0rPEe2NP6AzGuGlzg" name="toString" method="_0gFOKUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QprBErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0c6lYUrPEe2NP6AzGuGlzg" name="performAction" method="_0gFOJErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0c6lYkrPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0c6lY0rPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0QqSEErPEe2NP6AzGuGlzg" name="Enemy" isAbstract="true">
                    <ownedComment xmi:id="_0gePukrPEe2NP6AzGuGlzg">
                      <body>This abstract class represents an enemy that moves in a predetermined path.
If the player moves into this enemy, it will DIE.
If the enemy moves into this player, it will DIE.

@author Brandon Ru 300562436</body>
                    </ownedComment>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gFOK0rPEe2NP6AzGuGlzg" name="getGraphicalPosition" specification="_0QrgMkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gFOLErPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return getPosition().translate(Domain.GRAPHICAL_PADDING, Domain.GRAPHICAL_PADDING);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gFOLUrPEe2NP6AzGuGlzg" name="collidesWith" specification="_0c8akUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gFOLkrPEe2NP6AzGuGlzg" name="pos" type="_0Q_CMErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gFOL0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return getPosition().equals(pos);
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0Qq5IErPEe2NP6AzGuGlzg" name="getPosition" isAbstract="true">
                      <ownedComment xmi:id="_0gePu0rPEe2NP6AzGuGlzg">
                        <body>Returns the current position of the enemy.
     * 
     * @return Point object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0c7zgUrPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qq5IUrPEe2NP6AzGuGlzg" name="move" isAbstract="true">
                      <ownedComment xmi:id="_0gePvErPEe2NP6AzGuGlzg">
                        <body>Advance the enemy forwards in their path.
     * Call this every ping.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qq5IkrPEe2NP6AzGuGlzg" name="getPath" isAbstract="true">
                      <ownedComment xmi:id="_0gePvUrPEe2NP6AzGuGlzg">
                        <body>Returns the path
     * 
     * @return</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0Qq5I0rPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0Qq5JErPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QrgMErPEe2NP6AzGuGlzg" name="toString" isAbstract="true">
                      <ownedComment xmi:id="_0gePvkrPEe2NP6AzGuGlzg">
                        <body>String representation of the enemy</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0QrgMUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QrgMkrPEe2NP6AzGuGlzg" name="getGraphicalPosition" method="_0gFOK0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePv0rPEe2NP6AzGuGlzg">
                        <body>Returns the position of the enemy
     * 
     * @return Point object.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0c8akErPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0c8akUrPEe2NP6AzGuGlzg" name="collidesWith" method="_0gFOLUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0gePwErPEe2NP6AzGuGlzg">
                        <body>Does the position passed into the program collide with.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0c8akkrPEe2NP6AzGuGlzg" name="pos" type="_0Q_CMErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0c8ak0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0QsHQErPEe2NP6AzGuGlzg" name="ExitLockState">
                    <ownedComment xmi:id="_0gePwUrPEe2NP6AzGuGlzg">
                      <body>Represents an exit lock, which acts as a wall.
If the player carries ALL TREASURES,
then it becomes an empty tile.

@author Brandon Ru 300562436</body>
                    </ownedComment>
                    <interfaceRealization xmi:id="_0c9BoErPEe2NP6AzGuGlzg" client="_0QsHQErPEe2NP6AzGuGlzg" supplier="_0Q0DEErPEe2NP6AzGuGlzg" contract="_0Q0DEErPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gF1MErPEe2NP6AzGuGlzg" name="isWall" specification="_0QsHQUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gF1MUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return true;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gF1MkrPEe2NP6AzGuGlzg" name="performAction" specification="_0c9BoUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gF1M0rPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gF1NErPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>if (p.hasAllTreasures()) {
         tile.changeState(EmptyState.of());
         SoundEffects.playSound(&quot;Lock&quot;);
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gF1NUrPEe2NP6AzGuGlzg" name="name" specification="_0QsuU0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gF1NkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;exitLock&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gF1N0rPEe2NP6AzGuGlzg" name="toString" specification="_0QtVYkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gF1OErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;L&quot;;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0QsHQUrPEe2NP6AzGuGlzg" name="isWall" method="_0gF1MErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QsHQkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QsuU0rPEe2NP6AzGuGlzg" name="name" method="_0gF1NUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QsuVErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QtVYkrPEe2NP6AzGuGlzg" name="toString" method="_0gF1N0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QtVY0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0c9BoUrPEe2NP6AzGuGlzg" name="performAction" method="_0gF1MkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0c9BokrPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0c9Bo0rPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0Qt8cErPEe2NP6AzGuGlzg" name="ExitTile">
                    <ownedComment xmi:id="_0ge2wErPEe2NP6AzGuGlzg">
                      <body>Represents the exit tile.
Upon stepping on this tile, it will move the player to the next level.

@author Brandon Ru 300562436</body>
                    </ownedComment>
                    <interfaceRealization xmi:id="_0c-PwErPEe2NP6AzGuGlzg" client="_0Qt8cErPEe2NP6AzGuGlzg" supplier="_0RBedUrPEe2NP6AzGuGlzg" contract="_0RBedUrPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gF1OUrPEe2NP6AzGuGlzg" name="isWall" specification="_0QujgkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gF1OkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return false;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gF1O0rPEe2NP6AzGuGlzg" name="acceptPlayer" specification="_0c-PwUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gF1PErPEe2NP6AzGuGlzg" name="player" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>SoundEffects.playSound(&quot;Win&quot;);
     player.nextLevel();
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gF1PUrPEe2NP6AzGuGlzg" name="name" specification="_0Qujh0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gF1PkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;exit&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gGcQErPEe2NP6AzGuGlzg" name="toString" specification="_0QvKk0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gGcQUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;E&quot;;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0Qt8cUrPEe2NP6AzGuGlzg" name="ExitTile">
                      <eAnnotations xmi:id="_0Qt8ckrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0Qt8c0rPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_0QujgUrPEe2NP6AzGuGlzg" type="_0Qt8cErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QujgkrPEe2NP6AzGuGlzg" name="isWall" method="_0gF1OUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Qujg0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qujh0rPEe2NP6AzGuGlzg" name="name" method="_0gF1PUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QujiErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QvKk0rPEe2NP6AzGuGlzg" name="toString" method="_0gGcQErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QvKlErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0c-PwUrPEe2NP6AzGuGlzg" name="acceptPlayer" method="_0gF1O0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0c-PwkrPEe2NP6AzGuGlzg" name="player" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0QvxoErPEe2NP6AzGuGlzg" name="FreeTile">
                    <ownedComment xmi:id="_0ge2wUrPEe2NP6AzGuGlzg">
                      <body>A Free tile is a tile that can store 'something'.
That 'something', is referred to as it's 'state'.
List of possible states:
     - Empty
     - Key
     - ...
     
@author Brandon Ru 300562436</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fTyEErPEe2NP6AzGuGlzg" name="state" visibility="private" type="_0Q0DEErPEe2NP6AzGuGlzg" association="_0g4fYUrPEe2NP6AzGuGlzg"/>
                    <interfaceRealization xmi:id="_0c_d4ErPEe2NP6AzGuGlzg" client="_0QvxoErPEe2NP6AzGuGlzg" supplier="_0RBedUrPEe2NP6AzGuGlzg" contract="_0RBedUrPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gGcQkrPEe2NP6AzGuGlzg" name="FreeTile" specification="_0dAE8ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gGcQ0rPEe2NP6AzGuGlzg" name="state" type="_0Q0DEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gGcRErPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>this.state = state;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gGcRUrPEe2NP6AzGuGlzg" name="isWall" specification="_0QwYsErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gGcRkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return state.isWall();
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gGcR0rPEe2NP6AzGuGlzg" name="acceptPlayer" specification="_0dAsAErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gGcSErPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>state.performAction(p, this);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gGcSUrPEe2NP6AzGuGlzg" name="changeState" specification="_0dBTEErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gGcSkrPEe2NP6AzGuGlzg" name="s" type="_0Q0DEErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>this.state = s;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gGcS0rPEe2NP6AzGuGlzg" name="empty" specification="_0Qw_wkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gGcTErPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return new FreeTile(EmptyState.of());
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gGcTUrPEe2NP6AzGuGlzg" name="treasure" specification="_0Qw_w0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gGcTkrPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return new FreeTile(new TreasureState());
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHDUErPEe2NP6AzGuGlzg" name="door" specification="_0dB6IUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHDUUrPEe2NP6AzGuGlzg" name="colour" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gHDUkrPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return new FreeTile(new LockedDoorState(colour));
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHDU0rPEe2NP6AzGuGlzg" name="key" specification="_0dChMErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHDVErPEe2NP6AzGuGlzg" name="colour" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gHDVUrPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return new FreeTile(new KeyState(colour));
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHDVkrPEe2NP6AzGuGlzg" name="info" specification="_0Qxm0ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHDV0rPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return new FreeTile(new InformationState());
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHDWErPEe2NP6AzGuGlzg" name="lock" specification="_0Qxm0UrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHDWUrPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return new FreeTile(new ExitLockState());
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHDWkrPEe2NP6AzGuGlzg" name="name" specification="_0Qxm0krPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHDW0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return state.name();
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHDXErPEe2NP6AzGuGlzg" name="toString" specification="_0QyN4krPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHDXUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return state.toString();
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHDXkrPEe2NP6AzGuGlzg" name="colour" specification="_0QyN50rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHDX0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return state.colour();
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0QwYsErPEe2NP6AzGuGlzg" name="isWall" method="_0gGcRUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QwYsUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qw_wkrPEe2NP6AzGuGlzg" name="empty" isStatic="true" method="_0gGcS0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ge2xErPEe2NP6AzGuGlzg">
                        <body>Factory method for empty free tile.
     * @return Empty free tile.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dBTEkrPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qw_w0rPEe2NP6AzGuGlzg" name="treasure" isStatic="true" method="_0gGcTUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ge2xUrPEe2NP6AzGuGlzg">
                        <body>Factory method for treasure tile.
     * @return Empty free tile.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dB6IErPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qxm0ErPEe2NP6AzGuGlzg" name="info" isStatic="true" method="_0gHDVkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ge2yErPEe2NP6AzGuGlzg">
                        <body>Factory method for an information tile.
     * @return Empty free tile.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dChM0rPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qxm0UrPEe2NP6AzGuGlzg" name="lock" isStatic="true" method="_0gHDWErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ge2yUrPEe2NP6AzGuGlzg">
                        <body>Factory method for an exit lock tile.
     * @return Empty free tile.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dChNErPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Qxm0krPEe2NP6AzGuGlzg" name="name" method="_0gHDWkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Qxm00rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QyN4krPEe2NP6AzGuGlzg" name="toString" method="_0gHDXErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QyN40rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0QyN50rPEe2NP6AzGuGlzg" name="colour" method="_0gHDXkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0QyN6ErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dAE8ErPEe2NP6AzGuGlzg" name="FreeTile" visibility="private" method="_0gGcQkrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0dAE8krPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0dAE80rPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0ge2wkrPEe2NP6AzGuGlzg">
                        <body>Can only use factory methods.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dAE8UrPEe2NP6AzGuGlzg" name="state" type="_0Q0DEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dAE9ErPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dAsAErPEe2NP6AzGuGlzg" name="acceptPlayer" method="_0gGcR0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0dAsAUrPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dBTEErPEe2NP6AzGuGlzg" name="changeState" method="_0gGcSUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ge2w0rPEe2NP6AzGuGlzg">
                        <body>Void function that changes the internal state of the free tile.
     * @param s State that changes.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dBTEUrPEe2NP6AzGuGlzg" name="s" type="_0Q0DEErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dB6IUrPEe2NP6AzGuGlzg" name="door" isStatic="true" method="_0gHDUErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ge2xkrPEe2NP6AzGuGlzg">
                        <body>Factory method for a new door.
     * @return Empty free tile.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dB6IkrPEe2NP6AzGuGlzg" name="colour" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dB6I0rPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dChMErPEe2NP6AzGuGlzg" name="key" isStatic="true" method="_0gHDU0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ge2x0rPEe2NP6AzGuGlzg">
                        <body>Factory method for a new key.
     * @return Empty free tile.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dChMUrPEe2NP6AzGuGlzg" name="colour" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dChMkrPEe2NP6AzGuGlzg" type="_0QvxoErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Interface" xmi:id="_0Q0DEErPEe2NP6AzGuGlzg" name="FreeTileState">
                    <ownedComment xmi:id="_0ge2ykrPEe2NP6AzGuGlzg">
                      <body>FreeTileState is the internal state of a free tile.
I.E. What the free tile contains inside.

@author Brandon Ru 300562436
 *</body>
                    </ownedComment>
                    <generalization xmi:id="_0dDvUErPEe2NP6AzGuGlzg" general="_0RA3YErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0Q0qIErPEe2NP6AzGuGlzg" name="wall" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedAttribute>
                    <ownedOperation xmi:id="_0dDvUUrPEe2NP6AzGuGlzg" name="performAction">
                      <ownedParameter xmi:id="_0dDvUkrPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dDvU0rPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0Q1RMErPEe2NP6AzGuGlzg" name="InformationState">
                    <ownedComment xmi:id="_0ge2y0rPEe2NP6AzGuGlzg">
                      <body>This tile represents the information help tile.
When the player passes over it, show the tool tip. 
 
@author brandon
 *</body>
                    </ownedComment>
                    <interfaceRealization xmi:id="_0dDvVErPEe2NP6AzGuGlzg" client="_0Q1RMErPEe2NP6AzGuGlzg" supplier="_0Q0DEErPEe2NP6AzGuGlzg" contract="_0Q0DEErPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHqYErPEe2NP6AzGuGlzg" name="isWall" specification="_0Q1RMUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHqYUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return false;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHqYkrPEe2NP6AzGuGlzg" name="performAction" specification="_0dEWYErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHqY0rPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gHqZErPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>Domain.showToolTip();
     return;        
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHqZUrPEe2NP6AzGuGlzg" name="name" specification="_0Q14QErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHqZkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;info&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHqZ0rPEe2NP6AzGuGlzg" name="toString" specification="_0Q14RUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHqaErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;i&quot;;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0Q1RMUrPEe2NP6AzGuGlzg" name="isWall" method="_0gHqYErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q1RMkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q14QErPEe2NP6AzGuGlzg" name="name" method="_0gHqZUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q14QUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q14RUrPEe2NP6AzGuGlzg" name="toString" method="_0gHqZ0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q14RkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dEWYErPEe2NP6AzGuGlzg" name="performAction" method="_0gHqYkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0dEWYUrPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dEWYkrPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0Q2fUkrPEe2NP6AzGuGlzg" name="KeyState">
                    <ownedComment xmi:id="_0ge2zErPEe2NP6AzGuGlzg">
                      <body>Represents the key object on the board.
The key is a specific colour, and will be added to the players wallet
If they step on it.
It is NOT a wall.

@author Brandon Ru 300562436</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fUZIUrPEe2NP6AzGuGlzg" name="colour" visibility="package" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                    <interfaceRealization xmi:id="_0dFkgErPEe2NP6AzGuGlzg" client="_0Q2fUkrPEe2NP6AzGuGlzg" supplier="_0Q0DEErPEe2NP6AzGuGlzg" contract="_0Q0DEErPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHqaUrPEe2NP6AzGuGlzg" name="KeyState" specification="_0dGLkErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHqakrPEe2NP6AzGuGlzg" name="c" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gHqa0rPEe2NP6AzGuGlzg" type="_0Q2fUkrPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>this.colour = c;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gHqbErPEe2NP6AzGuGlzg" name="isWall" specification="_0Q3GYErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gHqbUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return false;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gIRcErPEe2NP6AzGuGlzg" name="performAction" specification="_0dGyokrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gIRcUrPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gIRckrPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>p.addKey(this.colour);
     SoundEffects.playSound(&quot;Key&quot;);

     // Switch tile state to empty state.
     tile.changeState(EmptyState.of());
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gIRc0rPEe2NP6AzGuGlzg" name="name" specification="_0Q3GZUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gIRdErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;key&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gIRdUrPEe2NP6AzGuGlzg" name="toString" specification="_0Q3tdErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gIRdkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;k&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gIRd0rPEe2NP6AzGuGlzg" name="colour" specification="_0Q4Ug0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gIReErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return this.colour.name();
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0Q3GYErPEe2NP6AzGuGlzg" name="isWall" method="_0gHqbErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q3GYUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q3GZUrPEe2NP6AzGuGlzg" name="name" method="_0gIRc0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q3tcErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q3tdErPEe2NP6AzGuGlzg" name="toString" method="_0gIRdUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q3tdUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q4Ug0rPEe2NP6AzGuGlzg" name="colour" method="_0gIRd0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q4UhErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dGLkErPEe2NP6AzGuGlzg" name="KeyState" method="_0gHqaUrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0dGLkkrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0dGyoErPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_0dGLkUrPEe2NP6AzGuGlzg" name="c" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dGyoUrPEe2NP6AzGuGlzg" type="_0Q2fUkrPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dGyokrPEe2NP6AzGuGlzg" name="performAction" method="_0gIRcErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0dGyo0rPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dGypErPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0Q5ioErPEe2NP6AzGuGlzg" name="LockedDoorState">
                    <ownedComment xmi:id="_0ge2zUrPEe2NP6AzGuGlzg">
                      <body>Represents a locked door.
The locked door is a wall, but becomes non-wall iff
The player holds the correct COLOUR key.

@author Brandon Ru 300562436
 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fVAMUrPEe2NP6AzGuGlzg" name="colour" visibility="package" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                    <interfaceRealization xmi:id="_0dHZskrPEe2NP6AzGuGlzg" client="_0Q5ioErPEe2NP6AzGuGlzg" supplier="_0Q0DEErPEe2NP6AzGuGlzg" contract="_0Q0DEErPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gIReUrPEe2NP6AzGuGlzg" name="LockedDoorState" specification="_0dIAwErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gIRekrPEe2NP6AzGuGlzg" name="c" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gIRe0rPEe2NP6AzGuGlzg" type="_0Q5ioErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>this.colour = c;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gIRfErPEe2NP6AzGuGlzg" name="isWall" specification="_0Q5ioUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gIRfUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return true;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gIRfkrPEe2NP6AzGuGlzg" name="performAction" specification="_0dIAxUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gIRf0rPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gIRgErPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>if (p.hasKey(this.colour)) {
         tile.changeState(EmptyState.of());
         p.removeKey(this.colour);
         SoundEffects.playSound(&quot;Door&quot;);
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gI4gErPEe2NP6AzGuGlzg" name="name" specification="_0Q6wwErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gI4gUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;door&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gI4gkrPEe2NP6AzGuGlzg" name="toString" specification="_0Q6wxUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gI4g0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;@&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gI4hErPEe2NP6AzGuGlzg" name="colour" specification="_0Q7X0krPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gI4hUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return this.colour.name();
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0Q5ioUrPEe2NP6AzGuGlzg" name="isWall" method="_0gIRfErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q5iokrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q6wwErPEe2NP6AzGuGlzg" name="name" method="_0gI4gErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q6wwUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q6wxUrPEe2NP6AzGuGlzg" name="toString" method="_0gI4gkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q6wxkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q7X0krPEe2NP6AzGuGlzg" name="colour" method="_0gI4hErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q7X00rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dIAwErPEe2NP6AzGuGlzg" name="LockedDoorState" method="_0gIReUrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0dIAwkrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0dIAw0rPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_0dIAwUrPEe2NP6AzGuGlzg" name="c" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dIAxErPEe2NP6AzGuGlzg" type="_0Q5ioErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dIAxUrPEe2NP6AzGuGlzg" name="performAction" method="_0gIRfkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0dIAxkrPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dIAx0rPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0Q7-4ErPEe2NP6AzGuGlzg" name="Player">
                    <ownedComment xmi:id="_0gfd0ErPEe2NP6AzGuGlzg">
                      <body>Represents the player on the game.

The player keeps track of
     - How many treasures it has.
     - What keys it has on it's wallet.
     - It's current position
     
 @author Brandon Ru 300562436</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fVnQErPEe2NP6AzGuGlzg" name="position" type="_0Q_CMErPEe2NP6AzGuGlzg" association="_0gfd0UrPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fVnQUrPEe2NP6AzGuGlzg" name="domain" visibility="private" type="_0QZzYErPEe2NP6AzGuGlzg" association="_0g4fZErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0fWOUErPEe2NP6AzGuGlzg" name="treasureCount" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fWOUUrPEe2NP6AzGuGlzg" name="keyWallet" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <qualifier xmi:id="_0fW1YErPEe2NP6AzGuGlzg" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fW1YUrPEe2NP6AzGuGlzg" name="totalKeysCollected" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <interfaceRealization xmi:id="_0dKdAErPEe2NP6AzGuGlzg" client="_0Q7-4ErPEe2NP6AzGuGlzg" supplier="_0RA3YErPEe2NP6AzGuGlzg" contract="_0RA3YErPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gI4hkrPEe2NP6AzGuGlzg" name="Player" specification="_0dKdAUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gI4h0rPEe2NP6AzGuGlzg" name="d" type="_0QZzYErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gI4iErPEe2NP6AzGuGlzg" type="_0Q7-4ErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>this.position = new Point(0, 0);
     this.domain = d;
     this.keyWallet = new HashMap&lt;AuthenticationColour, Integer>();
     this.totalKeysCollected = 0;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gI4iUrPEe2NP6AzGuGlzg" name="getGraphicalPosition" specification="_0Q8l8ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gI4ikrPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return this.position.translate(Domain.GRAPHICAL_PADDING, Domain.GRAPHICAL_PADDING);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gI4i0rPEe2NP6AzGuGlzg" name="addKey" specification="_0dLEFUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gI4jErPEe2NP6AzGuGlzg" name="key" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>if (!keyWallet.containsKey(key)) {
         keyWallet.put(key, 0);
     } keyWallet.put(key, keyWallet.get(key) + 1);
     totalKeysCollected++;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gI4jUrPEe2NP6AzGuGlzg" name="removeKey" specification="_0dLEF0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gI4jkrPEe2NP6AzGuGlzg" name="key" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>if (keyWallet.containsKey(key)) {
         keyWallet.put(key, keyWallet.get(key) - 1);
         if (keyWallet.get(key) &lt;= 0) {
             keyWallet.remove(key);
         }
     } 
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gJfkErPEe2NP6AzGuGlzg" name="hasKey" specification="_0dLrIUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gJfkUrPEe2NP6AzGuGlzg" name="colour" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gJfkkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return keyWallet.containsKey(colour);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gJfk0rPEe2NP6AzGuGlzg" name="pickUpTreasure" specification="_0Q9NAErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>treasureCount++;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gJflErPEe2NP6AzGuGlzg" name="hasAllTreasures" specification="_0Q9NAUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gJflUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return treasureCount == domain.requiredTreasureCount();
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gJflkrPEe2NP6AzGuGlzg" name="name" specification="_0Q9NA0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gJfl0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;player&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gJfmErPEe2NP6AzGuGlzg" name="toString" specification="_0Q90EkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gJfmUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;P&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gJfmkrPEe2NP6AzGuGlzg" name="nextLevel" specification="_0Q90F0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>domain.nextLevel();
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0Q8l8ErPEe2NP6AzGuGlzg" name="getGraphicalPosition" method="_0gI4iUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggE4krPEe2NP6AzGuGlzg">
                        <body>Returns the current graphical position of the player.
     * @return</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dLEFErPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q9NAErPEe2NP6AzGuGlzg" name="pickUpTreasure" method="_0gJfk0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggE5krPEe2NP6AzGuGlzg">
                        <body>Picks up a treasure.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q9NAUrPEe2NP6AzGuGlzg" name="hasAllTreasures" method="_0gJflErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggE50rPEe2NP6AzGuGlzg">
                        <body>Checks if the player has all treasures.
     * @return Boolean</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0Q9NAkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q9NA0rPEe2NP6AzGuGlzg" name="name" method="_0gJflkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q9NBErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q90EkrPEe2NP6AzGuGlzg" name="toString" method="_0gJfmErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q90E0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q90F0rPEe2NP6AzGuGlzg" name="nextLevel" method="_0gJfmkrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggE6ErPEe2NP6AzGuGlzg">
                        <body>Called by exit tile, which allows the player to move to next lvl.</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dKdAUrPEe2NP6AzGuGlzg" name="Player" method="_0gI4hkrPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0dLEEUrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0dLEEkrPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedComment xmi:id="_0ggE4UrPEe2NP6AzGuGlzg">
                        <body>Creates a player linked to a domain, at position (0, 0)
     * @param d Domain the player is linked to.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dLEEErPEe2NP6AzGuGlzg" name="d" type="_0QZzYErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dLEE0rPEe2NP6AzGuGlzg" type="_0Q7-4ErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dLEFUrPEe2NP6AzGuGlzg" name="addKey" method="_0gI4i0rPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggE40rPEe2NP6AzGuGlzg">
                        <body>Adds a key to the wallet 
     * @param key The colour of the key.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dLEFkrPEe2NP6AzGuGlzg" name="key" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dLEF0rPEe2NP6AzGuGlzg" name="removeKey" method="_0gI4jUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggE5ErPEe2NP6AzGuGlzg">
                        <body>Removes a key to the wallet 
     * @param key The colour of the key.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dLrIErPEe2NP6AzGuGlzg" name="key" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dLrIUrPEe2NP6AzGuGlzg" name="hasKey" method="_0gJfkErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggE5UrPEe2NP6AzGuGlzg">
                        <body>Does the wallet contain this colour key? 
     * If so: return TRUE
     * Else:  return False
     * 
     * This handles multiple keys, as if there are no keys,
     * removeKey removes the entry.
     * 
     * @param colour The colour of the lock.
     * @return The privileges of the user.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0dLrIkrPEe2NP6AzGuGlzg" name="colour" type="_0QWwEErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dLrI0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0Q_CMErPEe2NP6AzGuGlzg" name="Point">
                    <ownedComment xmi:id="_0ggE6UrPEe2NP6AzGuGlzg">
                      <body>Point represents a 2D point.
@author Brandon Ru 300562436
 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fXccErPEe2NP6AzGuGlzg" name="row" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fXcckrPEe2NP6AzGuGlzg" name="col" visibility="private">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gJfm0rPEe2NP6AzGuGlzg" name="Point" specification="_0Q_pQErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gJfnErPEe2NP6AzGuGlzg" name="r">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gJfnUrPEe2NP6AzGuGlzg" name="c">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gJfnkrPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>this.row = r;
		this.col = c;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKGoErPEe2NP6AzGuGlzg" name="translate" specification="_0Q_pRkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKGoUrPEe2NP6AzGuGlzg" name="dr">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gKGokrPEe2NP6AzGuGlzg" name="dc">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gKGo0rPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return new Point(row + dr, col + dc);
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKGpErPEe2NP6AzGuGlzg" name="row" specification="_0RAQUErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKGpUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return row;</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKGpkrPEe2NP6AzGuGlzg" name="col" specification="_0RAQUkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKGp0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return col;</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKGqErPEe2NP6AzGuGlzg" name="equals" specification="_0ebBQUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKGqUrPEe2NP6AzGuGlzg" name="object" type="_0eaaMUrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gKGqkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if (object == null) { return false; }
		if (!(object instanceof Point)) { return false; }
     else {
          Point other = (Point)object;
          return row == other.row() &amp;&amp; col == other.col();
     }
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0Q_pQErPEe2NP6AzGuGlzg" name="Point" method="_0gJfm0rPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0Q_pQ0rPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0Q_pRErPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_0Q_pQUrPEe2NP6AzGuGlzg" name="r">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0Q_pQkrPEe2NP6AzGuGlzg" name="c">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0Q_pRUrPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0Q_pRkrPEe2NP6AzGuGlzg" name="translate" method="_0gKGoErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0Q_pR0rPEe2NP6AzGuGlzg" name="dr">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0Q_pSErPEe2NP6AzGuGlzg" name="dc">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0dMSMErPEe2NP6AzGuGlzg" type="_0Q_CMErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RAQUErPEe2NP6AzGuGlzg" name="row" method="_0gKGpErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RAQUUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RAQUkrPEe2NP6AzGuGlzg" name="col" method="_0gKGpkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RAQU0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ebBQUrPEe2NP6AzGuGlzg" name="equals" method="_0gKGqErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0ebBQkrPEe2NP6AzGuGlzg" name="object" type="_0eaaMUrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0ebBQ0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Interface" xmi:id="_0RA3YErPEe2NP6AzGuGlzg" name="Printable">
                    <ownedComment xmi:id="_0ggE6krPEe2NP6AzGuGlzg">
                      <body>A common class for retrieving important data about a tile.
Inherit this so it can be printed/saved.

@author Brandon Ru 300562436</body>
                    </ownedComment>
                    <ownedOperation xmi:id="_0RA3YUrPEe2NP6AzGuGlzg" name="name">
                      <ownedComment xmi:id="_0ggE60rPEe2NP6AzGuGlzg">
                        <body>The English name of the tile.
     * 
     * @return Name of the tile.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RA3YkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RA3Y0rPEe2NP6AzGuGlzg" name="toString">
                      <ownedComment xmi:id="_0ggE7ErPEe2NP6AzGuGlzg">
                        <body>A one character representation of the tile.
     * 
     * @return Length of one string.</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RA3ZErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RBecErPEe2NP6AzGuGlzg" name="colour" method="_0gKGq0rPEe2NP6AzGuGlzg">
                      <eAnnotations xmi:id="_0RBecUrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0RBeckrPEe2NP6AzGuGlzg" key="defender"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_0RBec0rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Interface" xmi:id="_0RBedUrPEe2NP6AzGuGlzg" name="Tile">
                    <ownedComment xmi:id="_0ggr8ErPEe2NP6AzGuGlzg">
                      <body>Tile represents a tile on the game board.

@author Brandon Ru 300562436</body>
                    </ownedComment>
                    <generalization xmi:id="_0dM5QErPEe2NP6AzGuGlzg" general="_0RA3YErPEe2NP6AzGuGlzg"/>
                    <ownedAttribute xmi:id="_0RBedkrPEe2NP6AzGuGlzg" name="wall" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedAttribute>
                    <ownedOperation xmi:id="_0dM5QUrPEe2NP6AzGuGlzg" name="acceptPlayer">
                      <ownedParameter xmi:id="_0dM5QkrPEe2NP6AzGuGlzg" name="player" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RCFgErPEe2NP6AzGuGlzg" name="TreasureState">
                    <ownedComment xmi:id="_0ggr8UrPEe2NP6AzGuGlzg">
                      <body>TreasureState represents treasure.
Player can pass through.
When the player passes through, it acquires +1 treasures.
The parent tile becomes empty. 

@author Brandon Ru 300562436
 *</body>
                    </ownedComment>
                    <interfaceRealization xmi:id="_0dNgUErPEe2NP6AzGuGlzg" client="_0RCFgErPEe2NP6AzGuGlzg" supplier="_0Q0DEErPEe2NP6AzGuGlzg" contract="_0Q0DEErPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKGrUrPEe2NP6AzGuGlzg" name="isWall" specification="_0RCFgUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKGrkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return false;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKtsErPEe2NP6AzGuGlzg" name="performAction" specification="_0dNgUUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKtsUrPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gKtskrPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>p.pickUpTreasure();
     SoundEffects.playSound(&quot;Treasure&quot;);
     tile.changeState(EmptyState.of());
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKts0rPEe2NP6AzGuGlzg" name="name" specification="_0RCsk0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKttErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;treasure&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKttUrPEe2NP6AzGuGlzg" name="toString" specification="_0RDTpErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKttkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;*&quot;;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RCFgUrPEe2NP6AzGuGlzg" name="isWall" method="_0gKGrUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RCFgkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RCsk0rPEe2NP6AzGuGlzg" name="name" method="_0gKts0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RDToErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RDTpErPEe2NP6AzGuGlzg" name="toString" method="_0gKttUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RDTpUrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dNgUUrPEe2NP6AzGuGlzg" name="performAction" method="_0gKtsErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0dNgUkrPEe2NP6AzGuGlzg" name="p" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0dNgU0rPEe2NP6AzGuGlzg" name="tile" type="_0QvxoErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RD6sErPEe2NP6AzGuGlzg" name="WallTile">
                    <ownedComment xmi:id="_0ggr8krPEe2NP6AzGuGlzg">
                      <body>WallTile represents a wall tile.
Walls cannot allow a player through.
Implemented using a singleton as all the walls are the same.
This saves memory.

@author Brandon Ru 300562436

 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fYDgErPEe2NP6AzGuGlzg" name="singleton" visibility="private" isLeaf="true" isStatic="true" type="_0RD6sErPEe2NP6AzGuGlzg" isReadOnly="true" association="_0g5GcErPEe2NP6AzGuGlzg">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fYDgUrPEe2NP6AzGuGlzg" value="new WallTile()"/>
                    </ownedAttribute>
                    <interfaceRealization xmi:id="_0dOHYkrPEe2NP6AzGuGlzg" client="_0RD6sErPEe2NP6AzGuGlzg" supplier="_0RBedUrPEe2NP6AzGuGlzg" contract="_0RBedUrPEe2NP6AzGuGlzg"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKtt0rPEe2NP6AzGuGlzg" name="isWall" specification="_0REhxUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKtuErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return true;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKtuUrPEe2NP6AzGuGlzg" name="acceptPlayer" specification="_0dOucErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKtukrPEe2NP6AzGuGlzg" name="player" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>return;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKtu0rPEe2NP6AzGuGlzg" name="of" specification="_0RFI0UrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKtvErPEe2NP6AzGuGlzg" type="_0RD6sErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>return WallTile.singleton;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKtvUrPEe2NP6AzGuGlzg" name="name" specification="_0RFI0krPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKtvkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;wall&quot;;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gKtv0rPEe2NP6AzGuGlzg" name="toString" specification="_0RFI10rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gKtwErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return &quot;#&quot;;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0REhwErPEe2NP6AzGuGlzg" name="WallTile" visibility="private">
                      <eAnnotations xmi:id="_0REhwUrPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0REhwkrPEe2NP6AzGuGlzg" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_0REhxErPEe2NP6AzGuGlzg" type="_0RD6sErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0REhxUrPEe2NP6AzGuGlzg" name="isWall" method="_0gKtt0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0REhxkrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RFI0UrPEe2NP6AzGuGlzg" name="of" isStatic="true" method="_0gKtu0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0dOudUrPEe2NP6AzGuGlzg" type="_0RD6sErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RFI0krPEe2NP6AzGuGlzg" name="name" method="_0gKtvUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RFI00rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RFI10rPEe2NP6AzGuGlzg" name="toString" method="_0gKtv0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RFv4ErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0dOucErPEe2NP6AzGuGlzg" name="acceptPlayer" method="_0gKtuUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0dOucUrPEe2NP6AzGuGlzg" name="player" type="_0Q7-4ErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0gfd0UrPEe2NP6AzGuGlzg" name="" memberEnd="_0fVnQErPEe2NP6AzGuGlzg _0ggE4ErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0ggE4ErPEe2NP6AzGuGlzg" name="" type="_0Q7-4ErPEe2NP6AzGuGlzg" association="_0gfd0UrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g2DJErPEe2NP6AzGuGlzg" name="" memberEnd="_0g2DJUrPEe2NP6AzGuGlzg _0fNrckrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g2DJUrPEe2NP6AzGuGlzg" name="" type="_0QZzYErPEe2NP6AzGuGlzg" association="_0g2DJErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g2qMUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g2qMkrPEe2NP6AzGuGlzg _0fOSgkrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g2qMkrPEe2NP6AzGuGlzg" name="" type="_0QZzYErPEe2NP6AzGuGlzg" association="_0g2qMUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g2qNErPEe2NP6AzGuGlzg" name="" memberEnd="_0g2qNUrPEe2NP6AzGuGlzg _0fO5kErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g2qNUrPEe2NP6AzGuGlzg" name="" type="_0QZzYErPEe2NP6AzGuGlzg" association="_0g2qNErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g3RQErPEe2NP6AzGuGlzg" name="" memberEnd="_0g3RQUrPEe2NP6AzGuGlzg _0fRV0UrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g3RQUrPEe2NP6AzGuGlzg" name="" type="_0QghEErPEe2NP6AzGuGlzg" association="_0g3RQErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g3RQ0rPEe2NP6AzGuGlzg" name="" memberEnd="_0g3RRErPEe2NP6AzGuGlzg _0fRV1UrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g3RRErPEe2NP6AzGuGlzg" name="" type="_0QghEErPEe2NP6AzGuGlzg" association="_0g3RQ0rPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g3RRkrPEe2NP6AzGuGlzg" name="" memberEnd="_0g3RR0rPEe2NP6AzGuGlzg _0fSj8ErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g3RR0rPEe2NP6AzGuGlzg" name="" type="_0QghEErPEe2NP6AzGuGlzg" association="_0g3RRkrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g34UUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g34UkrPEe2NP6AzGuGlzg _0fSj8krPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g34UkrPEe2NP6AzGuGlzg" name="" type="_0QghEErPEe2NP6AzGuGlzg" association="_0g34UUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g34VErPEe2NP6AzGuGlzg" name="" memberEnd="_0g34VUrPEe2NP6AzGuGlzg _0fTLAErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g34VUrPEe2NP6AzGuGlzg" name="" type="_0Qn10ErPEe2NP6AzGuGlzg" association="_0g34VErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g4fYUrPEe2NP6AzGuGlzg" name="" memberEnd="_0g4fYkrPEe2NP6AzGuGlzg _0fTyEErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g4fYkrPEe2NP6AzGuGlzg" name="" type="_0QvxoErPEe2NP6AzGuGlzg" association="_0g4fYUrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g4fZErPEe2NP6AzGuGlzg" name="" memberEnd="_0g4fZUrPEe2NP6AzGuGlzg _0fVnQUrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g4fZUrPEe2NP6AzGuGlzg" name="" type="_0Q7-4ErPEe2NP6AzGuGlzg" association="_0g4fZErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g5GcErPEe2NP6AzGuGlzg" name="" memberEnd="_0g5GcUrPEe2NP6AzGuGlzg _0fYDgErPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g5GcUrPEe2NP6AzGuGlzg" name="" type="_0RD6sErPEe2NP6AzGuGlzg" association="_0g5GcErPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                </packagedElement>
                <packagedElement xmi:type="uml:Package" xmi:id="_0OHUY0rPEe2NP6AzGuGlzg" name="persistency">
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RLPcErPEe2NP6AzGuGlzg" name="ActorLoader">
                    <ownedComment xmi:id="_0ggr_ErPEe2NP6AzGuGlzg">
                      <body>Class to load classes from a given jar file.

Student ID: 3005 30113

@author GeorgiaBarrand</body>
                    </ownedComment>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gL72UrPEe2NP6AzGuGlzg" name="getClass" specification="_0eeEkUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gL72krPEe2NP6AzGuGlzg" name="jarFile" type="_0cknIErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gL720rPEe2NP6AzGuGlzg" name="className">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gL73ErPEe2NP6AzGuGlzg" type="_0eddgErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>try {
         URLClassLoader loader = new URLClassLoader(new URL[] { jarFile.toURI().toURL() });
         Class&lt;?> loadedClass = Class.forName(className, true, loader);
         return loadedClass;
     } catch (MalformedURLException | ClassNotFoundException | SecurityException
             | IllegalArgumentException e) {
         e.printStackTrace();
     }
     return null;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0eeEkUrPEe2NP6AzGuGlzg" name="getClass" isStatic="true" method="_0gL72UrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0eeEkkrPEe2NP6AzGuGlzg" name="jarFile" type="_0cknIErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0eeEk0rPEe2NP6AzGuGlzg" name="className">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0eeroUrPEe2NP6AzGuGlzg" type="_0eddgErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RLPcUrPEe2NP6AzGuGlzg" name="MainPersistency">
                    <ownedComment xmi:id="_0ggr_UrPEe2NP6AzGuGlzg">
                      <body>Class to run the persistency mock for testing purposes.

Student ID: 3005 30113

@author GeorgiaBarrand
 *</body>
                    </ownedComment>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gL73UrPEe2NP6AzGuGlzg" name="main" specification="_0RL2gErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gL73krPEe2NP6AzGuGlzg" name="args">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gL730rPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>MockPersistency.run(&quot;level1.xml&quot;);
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RL2gErPEe2NP6AzGuGlzg" name="main" isStatic="true" method="_0gL73UrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RL2gUrPEe2NP6AzGuGlzg" name="args">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0RL2gkrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RL2g0rPEe2NP6AzGuGlzg" name="MockPersistency">
                    <ownedComment xmi:id="_0ggr_krPEe2NP6AzGuGlzg">
                      <body>Class to create a mock of the persistency loading and saving files
 for testing purposes.
 
 Student ID: 3005 30113
@author GeorgiaBarrand
 *</body>
                    </ownedComment>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gL74ErPEe2NP6AzGuGlzg" name="run" specification="_0RL2hErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gL74UrPEe2NP6AzGuGlzg" name="filename">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>try {
   Recorder.setUp(filename);
   for (int i = 0; i &lt; 10; i++) {
     Recorder.tick(MockRecorder.randomEnum(Direction.class));
   }

   Domain d = Parser.loadLevel(filename);
   Parser.saveLevel(d);
 } catch (IOException e) {
   e.printStackTrace();
 } catch (DocumentException e) {
   e.printStackTrace();
 }
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RL2hErPEe2NP6AzGuGlzg" name="run" isStatic="true" method="_0gL74ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RL2hUrPEe2NP6AzGuGlzg" name="filename">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RMdkErPEe2NP6AzGuGlzg" name="Parser">
                    <ownedComment xmi:id="_0ggr_0rPEe2NP6AzGuGlzg">
                      <body>Class to both load and save the level layout from or to xml files.

Student ID: 3005 30113

@author GeorgiaBarrand
 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fZRpErPEe2NP6AzGuGlzg" name="lastLoadedLevel" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fZ4sUrPEe2NP6AzGuGlzg" name="tileTypesLoaded" isStatic="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <qualifier xmi:id="_0fZ4tErPEe2NP6AzGuGlzg">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </qualifier>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fZ4s0rPEe2NP6AzGuGlzg" value="new HashMap&lt;String, Integer>() {&#xA;    {&#xA;      put(&quot;wall&quot;, 0);&#xA;      put(&quot;exitLock&quot;, 0);&#xA;      put(&quot;exit&quot;, 0);&#xA;      put(&quot;player&quot;, 0);&#xA;      put(&quot;treasure&quot;, 0);&#xA;      put(&quot;enemy&quot;, 0);&#xA;      put(&quot;info&quot;, 0);&#xA;      put(&quot;key&quot;, 0);&#xA;      put(&quot;door&quot;, 0);&#xA;    }&#xA;  }"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gMi4ErPEe2NP6AzGuGlzg" name="loadLevel" specification="_0RMdkUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gMi4UrPEe2NP6AzGuGlzg" name="filename">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gMi4krPEe2NP6AzGuGlzg" type="_0QZzYErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>if (filename == null || !filename.endsWith(&quot;.xml&quot;)) {
   throw new IllegalArgumentException(&quot;Incorrect filename given&quot;);
 }

 SAXReader reader = new SAXReader();
 File levelFile = new File(&quot;nz/ac/vuw/ecs/swen225/gp22/levels/&quot; + filename);
 Document document = reader.read(levelFile);

 Element levelElement = document.getRootElement();
 if (((Double) levelElement.numberValueOf(&quot;@levelNum&quot;)).isNaN()) {
   throw new NullPointerException(&quot;No level number specified&quot;);
 }
 lastLoadedLevel = levelElement.numberValueOf(&quot;@levelNum&quot;).intValue();
 DomainBuilder builder = new DomainBuilder();

 // Go through each row and load each tile
 for (Element row : levelElement.elements(&quot;row&quot;)) {
   Number rowNum = row.numberValueOf(&quot;@r&quot;);
   if (((Double) rowNum).isNaN()) {
     throw new NullPointerException(&quot;No row number specified&quot;);
   }
   int rowNumInt = rowNum.intValue();
   parseStandardNode(rowNumInt, row.elements(&quot;wall&quot;), (r, c) -> builder.wall(r, c), &quot;wall&quot;);
   parseStandardNode(rowNumInt, row.elements(&quot;exitLock&quot;),
       (r, c) -> builder.lock(r, c), &quot;exitLock&quot;);
   parseStandardNode(rowNumInt, row.elements(&quot;player&quot;),
       (r, c) -> builder.player(r, c), &quot;player&quot;);
   parseStandardNode(rowNumInt, row.elements(&quot;treasure&quot;),
       (r, c) -> builder.treasure(r, c), &quot;treasure&quot;);
   parseStandardNode(rowNumInt, row.elements(&quot;exit&quot;),
       (r, c) -> builder.exit(r, c), &quot;exit&quot;);
   parseStandardNode(rowNumInt, row.elements(&quot;info&quot;),
       (r, c) -> builder.info(r, c), &quot;info&quot;);
   parseColourElement(rowNumInt, row.elements(&quot;key&quot;),
       (r, c, colour) -> builder.key(r, c, colour.toUpperCase()), &quot;key&quot;);
   parseColourElement(rowNumInt, row.elements(&quot;door&quot;),
       (r, c, colour) -> builder.door(r, c, colour.toUpperCase()), &quot;door&quot;);
   parsePathElement(rowNumInt, row.elements(&quot;enemy&quot;),
       (e) -> builder.enemy(e));

 }
 checkValidDomain();

 Domain d = builder.make();
 assert d != null;
 return d;

  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gMi40rPEe2NP6AzGuGlzg" name="saveLevel" specification="_0di3gErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gMi5ErPEe2NP6AzGuGlzg" name="domain" type="_0QZzYErPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>Tile[][] levelLayout = domain.getInnerState();
 Point player = domain.getPlayerPosition();

 Document document = createLevelDocument(levelLayout, player, domain.getEnemies());

 String nowStr = getCurrentTime();

 String directory = &quot;nz/ac/vuw/ecs/swen225/gp22/levels/saved_games/saved_game_&quot; + nowStr;
 Path path = Paths.get(directory);
 Files.createDirectory(path);

 Recorder.save(directory + &quot;/&quot;);

 FileWriter fileWriter = new FileWriter(
     directory + &quot;/saved_game_level&quot; + lastLoadedLevel + &quot;.xml&quot;);
 OutputFormat format = OutputFormat.createPrettyPrint();
 XMLWriter writer = new XMLWriter(fileWriter, format);
 writer.write(document);
 writer.close();
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gMi5UrPEe2NP6AzGuGlzg" name="checkValidDomain" specification="_0RNEoErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>if (tileTypesLoaded.get(&quot;player&quot;) &lt; 1) {
   throw new IllegalArgumentException(&quot;No player provided in xml file&quot;);
 }
 if (tileTypesLoaded.get(&quot;exit&quot;) &lt; 1) {
   throw new IllegalArgumentException(&quot;No exit provided in xml file&quot;);
 }
 if (tileTypesLoaded.get(&quot;exitLock&quot;) &lt; 1) {
   throw new IllegalArgumentException(&quot;No exitLock provided in xml file&quot;);
 }
 if (tileTypesLoaded.get(&quot;treasure&quot;) &lt; 1) {
   throw new IllegalArgumentException(&quot;No treasure provided in xml file&quot;);
 }
 if (tileTypesLoaded.get(&quot;key&quot;) != tileTypesLoaded.get(&quot;door&quot;)) {
   throw new IllegalArgumentException(&quot;Number of doors and keys loaded do not match&quot;);
 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gMi5krPEe2NP6AzGuGlzg" name="getCurrentTime" specification="_0RNEoUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gMi50rPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>DateTimeFormatter dtf = DateTimeFormatter.ofPattern(&quot;dd-MM-yyyy-HHmmss&quot;);
 LocalDateTime now = LocalDateTime.now();
 String nowStr = dtf.format(now);
 return nowStr;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gMi6ErPEe2NP6AzGuGlzg" name="createLevelDocument" specification="_0efSsErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gMi6UrPEe2NP6AzGuGlzg" name="levelLayout" type="_0RBedUrPEe2NP6AzGuGlzg">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gMi6krPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gMi60rPEe2NP6AzGuGlzg" name="playerPos" type="_0Q_CMErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gMi7ErPEe2NP6AzGuGlzg" name="enemies" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gMi7UrPEe2NP6AzGuGlzg" type="_0df0M0rPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>Document document = DocumentHelper.createDocument();
 Element level = document.addElement(&quot;level&quot;).addAttribute(&quot;levelNum&quot;, &quot;&quot; + lastLoadedLevel);

 for (int row = 0; row &lt; levelLayout.length; row++) {
   Element currRow = level.addElement(&quot;row&quot;).addAttribute(&quot;r&quot;, &quot;&quot; + row);
   if (playerPos.row() == row) {
     currRow.addElement(&quot;player&quot;).addAttribute(&quot;c&quot;, &quot;&quot; + playerPos.col());
   }
   currRow = addEnemies(currRow, enemies, row);
   currRow = addTiles(levelLayout, row, currRow);
 }
 return document;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gMi7krPEe2NP6AzGuGlzg" name="addTiles" specification="_0ef5wUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gMi70rPEe2NP6AzGuGlzg" name="levelLayout" type="_0RBedUrPEe2NP6AzGuGlzg">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gMi8ErPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gMi8UrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gMi8krPEe2NP6AzGuGlzg" name="currRow" type="_0dgbQ0rPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gMi80rPEe2NP6AzGuGlzg" type="_0dgbQ0rPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>for (int col = 0; col &lt; levelLayout[0].length; col++) {
   Tile t = levelLayout[row][col];
   String name = t.name();
   if (!name.equals(&quot;empty&quot;)) {
     Element tile = currRow.addElement(name).addAttribute(&quot;c&quot;, &quot;&quot; + col);
     if (name.equals(&quot;door&quot;) || name.equals(&quot;key&quot;)) {
       tile.addAttribute(&quot;colour&quot;, t.colour());
     }
   }
 }
 return currRow;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gMi9ErPEe2NP6AzGuGlzg" name="addEnemies" specification="_0ehH4ErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gMi9UrPEe2NP6AzGuGlzg" name="currRow" type="_0dgbQ0rPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gMi9krPEe2NP6AzGuGlzg" name="enemies" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gMi90rPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gMi-ErPEe2NP6AzGuGlzg" type="_0dgbQ0rPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>if (enemies.isEmpty()) {
   return currRow;
 }
 for (Enemy e : enemies) {
   if (e.getPosition().row() == row) {
     Element enemyElem = currRow.addElement(&quot;enemy&quot;).addAttribute(&quot;c&quot;, &quot;&quot; + e.getPosition().col());
     e.getPath().stream().forEach(p -> {
       enemyElem.addElement(&quot;path&quot;).addAttribute(&quot;r&quot;, &quot;&quot; + p.row()).addAttribute(&quot;c&quot;, &quot;&quot;
           + p.col());
     });
   }
 }
 return currRow;
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNJ8ErPEe2NP6AzGuGlzg" name="parseStandardNode" specification="_0ehu8UrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gNJ8UrPEe2NP6AzGuGlzg" name="rowNum">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gNJ8krPEe2NP6AzGuGlzg" name="elems" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gNJ80rPEe2NP6AzGuGlzg" name="consumer" type="_0dfNIUrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gNJ9ErPEe2NP6AzGuGlzg" name="tileName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>for (Element e : elems) {
   Number colNum = e.numberValueOf(&quot;@c&quot;);
   if (((Double) colNum).isNaN()) {
     throw new NullPointerException(&quot;No col number specified&quot;);
   }
   tileTypesLoaded.put(tileName, tileTypesLoaded.get(tileName) + 1);
   consumer.accept(rowNum, colNum.intValue());

 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNJ9UrPEe2NP6AzGuGlzg" name="parseColourElement" specification="_0ei9EErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gNJ9krPEe2NP6AzGuGlzg" name="rowNum">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gNJ90rPEe2NP6AzGuGlzg" name="elems" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gNJ-ErPEe2NP6AzGuGlzg" name="consumer" type="_0RVAcErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gNJ-UrPEe2NP6AzGuGlzg" name="tileName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>for (Element e : elems) {
   Number colNum = e.numberValueOf(&quot;@c&quot;);
   if (((Double) colNum).isNaN()) {
     throw new NullPointerException(&quot;No col number specified&quot;);
   }
   String colour = e.valueOf(&quot;@colour&quot;);
   if (colour.isEmpty()) {
     throw new NullPointerException(&quot;No colour specified&quot;);
   }

   tileTypesLoaded.put(tileName, tileTypesLoaded.get(tileName) + 1);

   consumer.accept(rowNum, colNum.intValue(), colour);

 }
  </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNJ-krPEe2NP6AzGuGlzg" name="parsePathElement" specification="_0ekLMErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gNJ-0rPEe2NP6AzGuGlzg" name="rowNum">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0gNJ_ErPEe2NP6AzGuGlzg" name="elems" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gNJ_UrPEe2NP6AzGuGlzg" name="consumer" type="_0df0MUrPEe2NP6AzGuGlzg"/>
                      <language>java</language>
                      <body>Class&lt;?> basicEnemyClass = ActorLoader
     .getClass(new File(&quot;nz/ac/vuw/ecs/swen225/gp22/levels/level2.jar&quot;),
         &quot;nz.ac.vuw.ecs.swen225.gp22.persistency.BasicEnemy&quot;);
 if (basicEnemyClass == null) {
   throw new NullPointerException(&quot;No BasicEnemy class found&quot;);
 }

 for (Element e : elems) {
   Number colNum = e.numberValueOf(&quot;@c&quot;);
   if (((Double) colNum).isNaN()) {
     throw new NullPointerException(&quot;No col number specified&quot;);
   }
   List&lt;Point> path = new ArrayList&lt;Point>();
   for (Node pathStep : e.elements(&quot;path&quot;)) {
     Number pathRow = pathStep.numberValueOf(&quot;@r&quot;);
     Number pathCol = pathStep.numberValueOf(&quot;@c&quot;);
     if (((Double) pathRow).isNaN() || ((Double) pathCol).isNaN()) {
       throw new NullPointerException(&quot;Path point has not been specified&quot;);
     }
     path.add(new Point(pathRow.intValue(), pathCol.intValue()));
   }
   if (path.isEmpty()) {
     throw new NullPointerException(&quot;Path has not been specified&quot;);
   }
   try {
     Enemy enemy = (Enemy) basicEnemyClass.getDeclaredConstructor(List.class).newInstance(path);
     consumer.accept(enemy);
   } catch (Exception ex) {
     ex.printStackTrace();
   }

 }
  </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RMdkUrPEe2NP6AzGuGlzg" name="loadLevel" isStatic="true" method="_0gMi4ErPEe2NP6AzGuGlzg" raisedException="_0cfuoUrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ghTAErPEe2NP6AzGuGlzg">
                        <body>Load the level layout from an xml file and use it to construct the domain
   * 
   * @param filename the name of the file being parsed
   * @return a Domain object representing the level</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RMdkkrPEe2NP6AzGuGlzg" name="filename">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0diQc0rPEe2NP6AzGuGlzg" type="_0QZzYErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RNEoErPEe2NP6AzGuGlzg" name="checkValidDomain" visibility="private" isStatic="true" method="_0gMi5UrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ghTAkrPEe2NP6AzGuGlzg">
                        <body>Check that the level file loaded has provided all the required tiles</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RNEoUrPEe2NP6AzGuGlzg" name="getCurrentTime" visibility="private" isStatic="true" method="_0gMi5krPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ghTA0rPEe2NP6AzGuGlzg">
                        <body>Find and return the current date and time as a string in the format
   * dd-MM-yyyy-HHmmss.
   * 
   * @return current time</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RNEokrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0di3gErPEe2NP6AzGuGlzg" name="saveLevel" isStatic="true" method="_0gMi40rPEe2NP6AzGuGlzg" raisedException="_0ceggErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ghTAUrPEe2NP6AzGuGlzg">
                        <body>Save the current level state to an xml file so that it can be loaded later.
   * 
   * @param domain the current game domain
   * @throws IOException</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0di3gUrPEe2NP6AzGuGlzg" name="domain" type="_0QZzYErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0efSsErPEe2NP6AzGuGlzg" name="createLevelDocument" visibility="private" isStatic="true" method="_0gMi6ErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ghTBErPEe2NP6AzGuGlzg">
                        <body>Create a Document representation of the current level layout.
   * 
   * @param levelLayout 2D array of the positions of tiles on the current level
   * @return Document representing the current level</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0efSsUrPEe2NP6AzGuGlzg" name="levelLayout" type="_0RBedUrPEe2NP6AzGuGlzg">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0efStUrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0efSskrPEe2NP6AzGuGlzg" name="playerPos" type="_0Q_CMErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0efSs0rPEe2NP6AzGuGlzg" name="enemies" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0efStErPEe2NP6AzGuGlzg" type="_0df0M0rPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ef5wUrPEe2NP6AzGuGlzg" name="addTiles" visibility="private" isStatic="true" method="_0gMi7krPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ghTBUrPEe2NP6AzGuGlzg">
                        <body>Add all standard tile to the level document
   * 
   * @param levelLayout the current tile layout
   * @param row         current row number
   * @param currRow     the element representing the row we are constructing for
   *                    the document
   * @return the updated row element</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0egg0ErPEe2NP6AzGuGlzg" name="levelLayout" type="_0RBedUrPEe2NP6AzGuGlzg">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0egg1ErPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0egg0UrPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0egg0krPEe2NP6AzGuGlzg" name="currRow" type="_0dgbQ0rPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0egg00rPEe2NP6AzGuGlzg" type="_0dgbQ0rPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ehH4ErPEe2NP6AzGuGlzg" name="addEnemies" visibility="private" isStatic="true" method="_0gMi9ErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ghTBkrPEe2NP6AzGuGlzg">
                        <body>Add all enemies to the level document.
   * 
   * @param currRow the element representing the row we are constructing for
   *                the document
   * @param enemies list of all the enemies on the current level
   * @param row     the current row number
   * @return the updated row element</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ehH4UrPEe2NP6AzGuGlzg" name="currRow" type="_0dgbQ0rPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0ehH4krPEe2NP6AzGuGlzg" name="enemies" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0ehH40rPEe2NP6AzGuGlzg" name="row">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0ehH5ErPEe2NP6AzGuGlzg" type="_0dgbQ0rPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ehu8UrPEe2NP6AzGuGlzg" name="parseStandardNode" visibility="private" isStatic="true" method="_0gNJ8ErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ghTB0rPEe2NP6AzGuGlzg">
                        <body>Parse a standard node which only has a column attribute e.g wall.
   * 
   * @param rowNum   the current row number
   * @param nodes    the tile elements being parsed
   * @param consumer the consumer to build the tile which takes the row and column</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ehu8krPEe2NP6AzGuGlzg" name="rowNum">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0ehu80rPEe2NP6AzGuGlzg" name="elems" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0ehu9ErPEe2NP6AzGuGlzg" name="consumer" type="_0dfNIUrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0ehu9UrPEe2NP6AzGuGlzg" name="tileName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ei9EErPEe2NP6AzGuGlzg" name="parseColourElement" visibility="private" isStatic="true" method="_0gNJ9UrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ghTCErPEe2NP6AzGuGlzg">
                        <body>Parse a node tile type which has a colour attribute e.g door, key
   * 
   * @param rowNum   the current row number
   * @param elems    the tile elements being parsed
   * @param consumer the consumer to build the tile which take row, column and the
   *                 colour</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ei9EUrPEe2NP6AzGuGlzg" name="rowNum">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0ei9EkrPEe2NP6AzGuGlzg" name="elems" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0ei9E0rPEe2NP6AzGuGlzg" name="consumer" type="_0RVAcErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0ei9FErPEe2NP6AzGuGlzg" name="tileName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ekLMErPEe2NP6AzGuGlzg" name="parsePathElement" visibility="private" isStatic="true" method="_0gNJ-krPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ghTCUrPEe2NP6AzGuGlzg">
                        <body>Parse a node tile type which has a path i.e an enemy
   * 
   * @param rowNum   the current row number
   * @param elems    the tile elements being parsed
   * @param consumer the consumer to build the tile which takes the row, column
   *                 and the path</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ekLMUrPEe2NP6AzGuGlzg" name="rowNum">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_0ekLMkrPEe2NP6AzGuGlzg" name="elems" type="_0cr74UrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0ekLM0rPEe2NP6AzGuGlzg" name="consumer" type="_0df0MUrPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RQH8ErPEe2NP6AzGuGlzg" name="PersistencyTests">
                    <ownedComment xmi:id="_0ghTCkrPEe2NP6AzGuGlzg">
                      <body>Class to store all tests for the persistency module.

Student ID: 3005 30113

@author GeorgiaBarrand
 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fafwErPEe2NP6AzGuGlzg" name="test1Layout" visibility="package">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fafwUrPEe2NP6AzGuGlzg" value="&quot;|_|_|_|_|_|_|\n&quot;&#xA;            + &quot;|_|_|_|_|_|_|\n&quot;&#xA;            + &quot;|_|_|_|*|P|_|\n&quot;&#xA;            + &quot;|_|_|L|#|#|#|\n&quot;&#xA;            + &quot;|_|_|E|_|_|_|\n&quot;"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fafw0rPEe2NP6AzGuGlzg" name="level1Layout" visibility="package">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fafxErPEe2NP6AzGuGlzg" value="&quot;|_|_|#|#|#|#|#|_|#|#|#|#|#|_|_|\n&quot;&#xA;            + &quot;|_|_|#|_|_|_|#|#|#|_|_|_|#|_|_|\n&quot;&#xA;            + &quot;|_|_|#|_|_|_|#|E|#|_|_|_|#|_|_|\n&quot;&#xA;            + &quot;|#|#|#|#|#|@|#|L|#|@|#|#|#|#|#|\n&quot;&#xA;            + &quot;|#|_|k|_|@|_|_|_|_|_|@|_|k|_|#|\n&quot;&#xA;            + &quot;|#|_|*|_|#|k|_|i|_|k|#|_|*|_|#|\n&quot;&#xA;            + &quot;|#|#|#|#|#|*|_|P|_|*|#|#|#|#|#|\n&quot;&#xA;            + &quot;|#|_|*|_|#|k|_|_|_|k|#|_|*|_|#|\n&quot;&#xA;            + &quot;|#|_|_|_|@|_|_|*|_|_|@|_|_|_|#|\n&quot;&#xA;            + &quot;|#|#|#|#|#|#|@|#|@|#|#|#|#|#|#|\n&quot;&#xA;            + &quot;|_|_|_|_|#|_|_|#|_|_|#|_|_|_|_|\n&quot;&#xA;            + &quot;|_|_|_|_|#|_|*|#|*|_|#|_|_|_|_|\n&quot;&#xA;            + &quot;|_|_|_|_|#|_|k|#|k|_|#|_|_|_|_|\n&quot;&#xA;            + &quot;|_|_|_|_|#|#|#|#|#|#|#|_|_|_|_|\n&quot;"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fbG0UrPEe2NP6AzGuGlzg" name="level2Layout" visibility="package">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fbG0krPEe2NP6AzGuGlzg" value="&quot;|_|_|#|#|#|#|#|#|#|_|_|_|_|_|_|_|\n&quot;&#xA;            + &quot;|_|_|#|_|_|*|_|_|#|_|_|_|_|_|_|_|\n&quot;&#xA;            + &quot;|_|_|#|_|_|_|_|_|#|_|_|_|_|_|_|_|\n&quot;&#xA;            + &quot;|_|_|#|_|_|#|_|_|#|#|#|#|#|#|#|#|\n&quot;&#xA;            + &quot;|#|#|#|_|_|#|_|_|_|#|k|_|_|_|*|#|\n&quot;&#xA;            + &quot;|#|E|L|_|_|#|#|_|_|#|#|#|P|i|_|#|\n&quot;&#xA;            + &quot;|#|#|#|_|_|#|_|4|_|@|_|_|_|_|*|#|\n&quot;&#xA;            + &quot;|_|_|#|_|_|#|4|_|#|#|#|#|#|#|#|#|\n&quot;&#xA;            + &quot;|_|_|#|_|_|4|_|_|#|_|_|_|_|_|_|_|\n&quot;&#xA;            + &quot;|_|_|#|_|_|*|_|_|#|_|_|_|_|_|_|_|\n&quot;&#xA;            + &quot;|_|_|#|#|#|#|#|#|#|_|_|_|_|_|_|_|\n&quot;"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNJ_krPEe2NP6AzGuGlzg" name="testLoadingLevel" specification="_0RQH8UrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Domain d = Parser.loadLevel(&quot;tests/test1.xml&quot;);
         assertEquals(d.toString(), test1Layout);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     }

 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNJ_0rPEe2NP6AzGuGlzg" name="testLoadingLevel1" specification="_0RQvAkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Domain d = Parser.loadLevel(&quot;level1.xml&quot;);
         assertEquals(d.toString(), level1Layout);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     }

 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxAErPEe2NP6AzGuGlzg" name="testLoadingLevel2" specification="_0RQvBkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Domain d = Parser.loadLevel(&quot;level2.xml&quot;);
         assertEquals(d.toString(), level2Layout);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxAUrPEe2NP6AzGuGlzg" name="testNoRowNumber" specification="_0RRWEkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/noRowNumber.xml&quot;);
         fail(&quot;Failed to detect no row number specified&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (NullPointerException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxAkrPEe2NP6AzGuGlzg" name="testNoColNumber" specification="_0RRWFkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/noColNumber.xml&quot;);
         fail(&quot;Failed to detect no col number specified&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (NullPointerException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxA0rPEe2NP6AzGuGlzg" name="testNoLevelNumber" specification="_0RRWGkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/noLevelNumber.xml&quot;);
         fail(&quot;Failed to detect no level number specified&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (NullPointerException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxBErPEe2NP6AzGuGlzg" name="testNoKeyColourSpecified" specification="_0RR9I0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/keyWithNoColour.xml&quot;);
         fail(&quot;Failed to detect no colour specified&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (NullPointerException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxBUrPEe2NP6AzGuGlzg" name="testNoPlayerPosition" specification="_0RR9J0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/noPlayer.xml&quot;);
         fail(&quot;Failed to detect no player specified&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (IllegalArgumentException e) {
         assert true;
     } catch (IllegalStateException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxBkrPEe2NP6AzGuGlzg" name="testNoExitPosition" specification="_0RSkMkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/noExit.xml&quot;);
         fail(&quot;Failed to detect no exit specified&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (IllegalArgumentException e) {
         assert true;
     } catch (IllegalStateException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxB0rPEe2NP6AzGuGlzg" name="testNoDoorColourSpecified" specification="_0RSkNkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/doorWithNoColour.xml&quot;);
         fail(&quot;Failed to detect no colour specified&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (NullPointerException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxCErPEe2NP6AzGuGlzg" name="testEnemyWithNoCol" specification="_0RSkOkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/enemyWithNoCol.xml&quot;);
         fail(&quot;Failed to detect no col specified&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (NullPointerException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxCUrPEe2NP6AzGuGlzg" name="testNoEnemyPathSpecified" specification="_0RTLQ0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/enemyWithNoPath.xml&quot;);
         fail(&quot;Failed to detect no path specified&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (NullPointerException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxCkrPEe2NP6AzGuGlzg" name="testBadPathSpecified" specification="_0RTLR0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/enemyWithBadPath.xml&quot;);
         fail(&quot;Failed to detect bad path specified&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (NullPointerException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gNxC0rPEe2NP6AzGuGlzg" name="testColourNodeWithNoCol" specification="_0RTyUkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;tests/keyWithNoCol.xml&quot;);
         fail(&quot;Failed to detect no col&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (NullPointerException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gOYEErPEe2NP6AzGuGlzg" name="testIncorrectFilename" specification="_0RTyVkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(&quot;blah&quot;);
         fail(&quot;Failed to detect bad filename&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (IllegalArgumentException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gOYEUrPEe2NP6AzGuGlzg" name="testNullFilename" specification="_0RTyWkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         Parser.loadLevel(null);
         fail(&quot;Failed to detect null filename&quot;);
     } catch (DocumentException e) {
         assert false : e.getMessage();
     } catch (IllegalArgumentException e) {
         assert true;
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gOYEkrPEe2NP6AzGuGlzg" name="testLoadingAndSavingLevel2" specification="_0RUZY0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>try {
         File directory = new File(&quot;nz/ac/vuw/ecs/swen225/gp22/levels/saved_games&quot;);
         int initialFileCount = directory.list().length;
         MockPersistency.run(&quot;level2.xml&quot;);
         int newFileCount = directory.list().length;
         assert newFileCount == initialFileCount + 1 : &quot;A new file was not created&quot;;
     } catch (Exception e) {
         fail(&quot;Exception thrown&quot;);
     }
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gOYE0rPEe2NP6AzGuGlzg" name="runRecorder" specification="_0RUZZ0rPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>Recorder.setUp(&quot;level1.xml&quot;);
     for (int i = 0; i &lt; 10; i++) {
         Recorder.tick(MockRecorder.randomEnum(Direction.class));
     }
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RQH8UrPEe2NP6AzGuGlzg" name="testLoadingLevel" method="_0gNJ_krPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RQvAkrPEe2NP6AzGuGlzg" name="testLoadingLevel1" method="_0gNJ_0rPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RQvBkrPEe2NP6AzGuGlzg" name="testLoadingLevel2" method="_0gNxAErPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RRWEkrPEe2NP6AzGuGlzg" name="testNoRowNumber" method="_0gNxAUrPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RRWFkrPEe2NP6AzGuGlzg" name="testNoColNumber" method="_0gNxAkrPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RRWGkrPEe2NP6AzGuGlzg" name="testNoLevelNumber" method="_0gNxA0rPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RR9I0rPEe2NP6AzGuGlzg" name="testNoKeyColourSpecified" method="_0gNxBErPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RR9J0rPEe2NP6AzGuGlzg" name="testNoPlayerPosition" method="_0gNxBUrPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RSkMkrPEe2NP6AzGuGlzg" name="testNoExitPosition" method="_0gNxBkrPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RSkNkrPEe2NP6AzGuGlzg" name="testNoDoorColourSpecified" method="_0gNxB0rPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RSkOkrPEe2NP6AzGuGlzg" name="testEnemyWithNoCol" method="_0gNxCErPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RTLQ0rPEe2NP6AzGuGlzg" name="testNoEnemyPathSpecified" method="_0gNxCUrPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RTLR0rPEe2NP6AzGuGlzg" name="testBadPathSpecified" method="_0gNxCkrPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RTyUkrPEe2NP6AzGuGlzg" name="testColourNodeWithNoCol" method="_0gNxC0rPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RTyVkrPEe2NP6AzGuGlzg" name="testIncorrectFilename" method="_0gOYEErPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RTyWkrPEe2NP6AzGuGlzg" name="testNullFilename" method="_0gOYEUrPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RUZY0rPEe2NP6AzGuGlzg" name="testLoadingAndSavingLevel2" method="_0gOYEkrPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RUZZ0rPEe2NP6AzGuGlzg" name="runRecorder" method="_0gOYE0rPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Interface" xmi:id="_0RVAcErPEe2NP6AzGuGlzg" name="TriConsumer">
                    <ownedComment xmi:id="_0ghTC0rPEe2NP6AzGuGlzg">
                      <body>A consumer which takes in 3 parameters and does something
to them.
Student ID: 3005 30113

@author GeorgiaBarrand
 *
@param &lt;A> first parameter
@param &lt;B> second parameter
@param &lt;C> third parameter</body>
                    </ownedComment>
                    <ownedOperation xmi:id="_0enOgkrPEe2NP6AzGuGlzg" name="accept">
                      <ownedParameter xmi:id="_0enOg0rPEe2NP6AzGuGlzg" name="a" type="_0emAYErPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0enOhErPEe2NP6AzGuGlzg" name="b" type="_0emncUrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0enOhUrPEe2NP6AzGuGlzg" name="c" type="_0enOgErPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0emAYErPEe2NP6AzGuGlzg" name="A"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0emncUrPEe2NP6AzGuGlzg" name="B"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0enOgErPEe2NP6AzGuGlzg" name="C"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Package" xmi:id="_0OwNkErPEe2NP6AzGuGlzg" name="fuzz">
                  <packagedElement xmi:type="uml:Interface" xmi:id="_0RGW9ErPEe2NP6AzGuGlzg" name="ArtificialInput" visibility="package">
                    <ownedComment xmi:id="_0ggr9ErPEe2NP6AzGuGlzg">
                      <body>Lambda-able interface for easy stuff</body>
                    </ownedComment>
                    <nestedClassifier xmi:type="uml:Class" xmi:id="_0RG-AErPEe2NP6AzGuGlzg" name="BasicInput">
                      <eAnnotations xmi:id="_0RHlEErPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_0RHlEUrPEe2NP6AzGuGlzg" key="sameFile"/>
                      </eAnnotations>
                      <ownedAttribute xmi:id="_0fYDgkrPEe2NP6AzGuGlzg" name="inputTypes" isStatic="true" type="_0RGW9ErPEe2NP6AzGuGlzg" isOrdered="true" association="_0g5Gc0rPEe2NP6AzGuGlzg">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0fYDhErPEe2NP6AzGuGlzg" value="*"/>
                        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fYqkErPEe2NP6AzGuGlzg" value="List.of(&#xA;        (b)->{b.keyPress(KeyEvent.VK_UP); b.keyRelease(KeyEvent.VK_UP);},&#xA;        (b)->{b.keyPress(KeyEvent.VK_DOWN); b.keyRelease(KeyEvent.VK_DOWN);},&#xA;        (b)->{b.keyPress(KeyEvent.VK_LEFT); b.keyRelease(KeyEvent.VK_LEFT);},&#xA;        (b)->{b.keyPress(KeyEvent.VK_RIGHT); b.keyRelease(KeyEvent.VK_RIGHT);}&#xA;    )"/>
                      </ownedAttribute>
                      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gLUw0rPEe2NP6AzGuGlzg" name="getRandom" specification="_0RHlEkrPEe2NP6AzGuGlzg">
                        <ownedParameter xmi:id="_0gLUxErPEe2NP6AzGuGlzg" type="_0RGW9ErPEe2NP6AzGuGlzg" direction="return"/>
                        <language>java</language>
                        <body>return inputTypes.get(new Random().nextInt(inputTypes.size()));
 </body>
                      </ownedBehavior>
                      <ownedOperation xmi:id="_0RHlEkrPEe2NP6AzGuGlzg" name="getRandom" isStatic="true" method="_0gLUw0rPEe2NP6AzGuGlzg">
                        <ownedComment xmi:id="_0ggr9UrPEe2NP6AzGuGlzg">
                          <body>Returns a random artificialinput from the given list above
     * @return</body>
                        </ownedComment>
                        <ownedParameter xmi:id="_0dQjoUrPEe2NP6AzGuGlzg" type="_0RGW9ErPEe2NP6AzGuGlzg" direction="return"/>
                      </ownedOperation>
                    </nestedClassifier>
                    <ownedOperation xmi:id="_0ecPYErPEe2NP6AzGuGlzg" name="play">
                      <ownedParameter xmi:id="_0ecPYUrPEe2NP6AzGuGlzg" name="b" type="_0dP8kUrPEe2NP6AzGuGlzg"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RIMIErPEe2NP6AzGuGlzg" name="Fuzz">
                    <ownedComment xmi:id="_0ggr9krPEe2NP6AzGuGlzg">
                      <body>Fuzz tests using randomly generated input
 *
@author Maximus De Leon deleomaxi 300566351
 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fYqkUrPEe2NP6AzGuGlzg" name="ROBOT_DELAY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fYqkkrPEe2NP6AzGuGlzg" value="10"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gLUxUrPEe2NP6AzGuGlzg" name="generateRandomInput" specification="_0RIMIUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gLUxkrPEe2NP6AzGuGlzg" type="_0RJaRErPEe2NP6AzGuGlzg" direction="return"/>
                      <language>java</language>
                      <body>InputGenerator ig = new InputGenerator();
     ig.generateRandom(100000);
     return ig;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gLUx0rPEe2NP6AzGuGlzg" name="test1Random" specification="_0RIzMErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>GUI g = new GUI();

     // until level is complete or time runs out keep going
     playGame(KeyEvent.VK_1);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gLUyErPEe2NP6AzGuGlzg" name="test2Random" specification="_0RIzNErPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>GUI g = new GUI();

 	// until level is complete or time runs out keep going
     playGame(KeyEvent.VK_2);
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gLUyUrPEe2NP6AzGuGlzg" name="playGame" specification="_0RJaQkrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gLUykrPEe2NP6AzGuGlzg" name="level">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>InputGenerator ig = generateRandomInput();
     try {
     	// timeout after 60 seconds, test succeeds if timeout is successful
	        assertTimeoutPreemptively(Duration.ofSeconds(60), ()->{
	        	Robot bot = new Robot();
	        	TimeUnit.SECONDS.sleep(1); 	// allow robot and gui to load

	        	// load the level with robot key presses
	        	bot.setAutoDelay(ROBOT_DELAY);
	        	bot.keyPress(KeyEvent.VK_CONTROL);
	        	bot.keyPress(level);
	        	bot.keyRelease(level);
	        	bot.keyRelease(KeyEvent.VK_CONTROL);

	        	// while playing the next move in the sequence
	        	// press enter to get rid of message dialog
	        	while (ig.playNext(bot)) {
	        		bot.keyPress(KeyEvent.VK_ENTER);
		        	bot.keyRelease(KeyEvent.VK_ENTER);
	        	}
	        });
     }

     // if assertion times out then stop running, no errors found, return success
     catch (AssertionFailedError e) {
     	System.out.println(&quot;STOPPED RUNNING, TIMEOUT!&quot;);

     	// shut everything down so that tests dont overlap
     	ig.finish();
     	GUI.instance.listener.timer().cancel();
     	GUI.instance.closeAll();
     	GUI.instance = null;
     	return;
     }

     // if exception is caught, stop running and print exception (and where it is?)
	    catch (Exception e) {
	    	System.out.println(&quot;EXCEPTION OCCURRED TIMEOUT! &quot; + e);

	    	// shut everything down so that tests dont overlap
	    	ig.finish();
	    	GUI.instance.listener.timer().cancel();
	    	GUI.instance.closeAll();
	    	GUI.instance = null;
	    	assert false;
	    	return;
	    }


     System.out.println(&quot;ALL INPUTS CONSUMED&quot;);
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RIMIUrPEe2NP6AzGuGlzg" name="generateRandomInput" visibility="private" method="_0gLUxUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0dbiwErPEe2NP6AzGuGlzg" type="_0RJaRErPEe2NP6AzGuGlzg" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RIzMErPEe2NP6AzGuGlzg" name="test1Random" method="_0gLUx0rPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RIzNErPEe2NP6AzGuGlzg" name="test2Random" method="_0gLUyErPEe2NP6AzGuGlzg"/>
                    <ownedOperation xmi:id="_0RJaQkrPEe2NP6AzGuGlzg" name="playGame" method="_0gLUyUrPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0RJaQ0rPEe2NP6AzGuGlzg" name="level">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_0RJaRErPEe2NP6AzGuGlzg" name="InputGenerator">
                    <ownedComment xmi:id="_0ggr90rPEe2NP6AzGuGlzg">
                      <body>Class for generating input and playing the input
 *
@author Maximus De Leon deleomaxi 300566351
 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_0fYqk0rPEe2NP6AzGuGlzg" name="inputs" visibility="private" isLeaf="true" type="_0RGW9ErPEe2NP6AzGuGlzg" isOrdered="true" isReadOnly="true" association="_0g5GdkrPEe2NP6AzGuGlzg">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0fYqlErPEe2NP6AzGuGlzg" value="*"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fZRoErPEe2NP6AzGuGlzg" value="new ArrayList&lt;ArtificialInput>()"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_0fZRokrPEe2NP6AzGuGlzg" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_0fZRo0rPEe2NP6AzGuGlzg" value="0"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gL70ErPEe2NP6AzGuGlzg" name="generateRandom" specification="_0RKBUErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gL70UrPEe2NP6AzGuGlzg" name="n">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>for (int i = 0; i &lt; n; i++) {inputs.add(BasicInput.getRandom());}
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gL70krPEe2NP6AzGuGlzg" name="playNext" specification="_0ec2cErPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gL700rPEe2NP6AzGuGlzg" name="b" type="_0dP8kUrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0gL71ErPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>inputs.get(index).play(b);
     return (++index &lt; inputs.size());
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gL71UrPEe2NP6AzGuGlzg" name="finish" specification="_0RKBUkrPEe2NP6AzGuGlzg">
                      <language>java</language>
                      <body>this.index = inputs.size();</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0gL71krPEe2NP6AzGuGlzg" name="getInputsList" specification="_0RKBU0rPEe2NP6AzGuGlzg">
                      <ownedParameter xmi:id="_0gL710rPEe2NP6AzGuGlzg" type="_0RGW9ErPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gL72ErPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>return Collections.unmodifiableList(inputs);</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_0RKBUErPEe2NP6AzGuGlzg" name="generateRandom" method="_0gL70ErPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggr-ErPEe2NP6AzGuGlzg">
                        <body>Generates n number of inputs for this generator
     * @param n</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RKBUUrPEe2NP6AzGuGlzg" name="n">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RKBUkrPEe2NP6AzGuGlzg" name="finish" method="_0gL71UrPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggr-krPEe2NP6AzGuGlzg">
                        <body>set index to the end</body>
                      </ownedComment>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0RKBU0rPEe2NP6AzGuGlzg" name="getInputsList" method="_0gL71krPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggr-0rPEe2NP6AzGuGlzg">
                        <body>get list of inputs
     * @return</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0RKBVErPEe2NP6AzGuGlzg" type="_0RGW9ErPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0RKBVUrPEe2NP6AzGuGlzg" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_0ec2cErPEe2NP6AzGuGlzg" name="playNext" method="_0gL70krPEe2NP6AzGuGlzg">
                      <ownedComment xmi:id="_0ggr-UrPEe2NP6AzGuGlzg">
                        <body>performs the next move in the sequence of inputs,
     * returns false if the end of the list is reached
     * takes a robot as a parameter to perform inputs
     *
     * @param b
     * @return</body>
                      </ownedComment>
                      <ownedParameter xmi:id="_0ec2cUrPEe2NP6AzGuGlzg" name="b" type="_0dP8kUrPEe2NP6AzGuGlzg"/>
                      <ownedParameter xmi:id="_0ec2ckrPEe2NP6AzGuGlzg" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g5Gc0rPEe2NP6AzGuGlzg" name="" memberEnd="_0g5GdErPEe2NP6AzGuGlzg _0fYDgkrPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g5GdErPEe2NP6AzGuGlzg" name="" type="_0RG-AErPEe2NP6AzGuGlzg" association="_0g5Gc0rPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_0g5GdkrPEe2NP6AzGuGlzg" name="" memberEnd="_0g5Gd0rPEe2NP6AzGuGlzg _0fYqk0rPEe2NP6AzGuGlzg">
                    <ownedEnd xmi:id="_0g5Gd0rPEe2NP6AzGuGlzg" name="" type="_0RJaRErPEe2NP6AzGuGlzg" association="_0g5GdkrPEe2NP6AzGuGlzg"/>
                  </packagedElement>
                </packagedElement>
              </packagedElement>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_0N2OoErPEe2NP6AzGuGlzg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_0N2OoUrPEe2NP6AzGuGlzg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_0OGtUErPEe2NP6AzGuGlzg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_0dP8k0rPEe2NP6AzGuGlzg" name="KeyEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_0ePbEErPEe2NP6AzGuGlzg" name="KeyListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_0PEWoErPEe2NP6AzGuGlzg" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_0d4OsErPEe2NP6AzGuGlzg" name="BufferedImage"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cOB0ErPEe2NP6AzGuGlzg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cPP8UrPEe2NP6AzGuGlzg" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cP3AUrPEe2NP6AzGuGlzg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cQeEUrPEe2NP6AzGuGlzg" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cQeE0rPEe2NP6AzGuGlzg" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cRFIUrPEe2NP6AzGuGlzg" name="Insets"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0dP8kUrPEe2NP6AzGuGlzg" name="Robot"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0OE4IErPEe2NP6AzGuGlzg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_0Ow0oUrPEe2NP6AzGuGlzg" name="concurrent">
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_0dRxwUrPEe2NP6AzGuGlzg" name="TimeUnit"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_0O0fAErPEe2NP6AzGuGlzg" name="function">
          <packagedElement xmi:type="uml:Interface" xmi:id="_0dfNIUrPEe2NP6AzGuGlzg" name="BiConsumer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_0df0MUrPEe2NP6AzGuGlzg" name="Consumer"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_0PIoEErPEe2NP6AzGuGlzg" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_0d9uQErPEe2NP6AzGuGlzg" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0caPEErPEe2NP6AzGuGlzg" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0ca2IUrPEe2NP6AzGuGlzg" name="TimerTask"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cnDY0rPEe2NP6AzGuGlzg" name="Scanner"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cqtwErPEe2NP6AzGuGlzg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0crU0UrPEe2NP6AzGuGlzg" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_0cr74UrPEe2NP6AzGuGlzg" name="List"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_0cr740rPEe2NP6AzGuGlzg" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cwNUErPEe2NP6AzGuGlzg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0dJO4ErPEe2NP6AzGuGlzg" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0dPVgErPEe2NP6AzGuGlzg" name="Random"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_0dnI8ErPEe2NP6AzGuGlzg" name="Iterator"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0OHUYErPEe2NP6AzGuGlzg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_0ceggErPEe2NP6AzGuGlzg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cknIErPEe2NP6AzGuGlzg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0dd_AErPEe2NP6AzGuGlzg" name="FileWriter"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0OHUYUrPEe2NP6AzGuGlzg" name="net">
        <packagedElement xmi:type="uml:Class" xmi:id="_0cfHkUrPEe2NP6AzGuGlzg" name="MalformedURLException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0clOMUrPEe2NP6AzGuGlzg" name="URL"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0dcw4ErPEe2NP6AzGuGlzg" name="URLClassLoader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0OMz8ErPEe2NP6AzGuGlzg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_0OMz8UrPEe2NP6AzGuGlzg" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_0cl1QUrPEe2NP6AzGuGlzg" name="Files"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_0cmcUUrPEe2NP6AzGuGlzg" name="Paths"/>
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_0cnDYUrPEe2NP6AzGuGlzg" name="StandardOpenOption"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_0dd_AkrPEe2NP6AzGuGlzg" name="Path"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0Ow0oErPEe2NP6AzGuGlzg" name="time">
        <packagedElement xmi:type="uml:Package" xmi:id="_0Oz38ErPEe2NP6AzGuGlzg" name="format">
          <packagedElement xmi:type="uml:Class" xmi:id="_0demE0rPEe2NP6AzGuGlzg" name="DateTimeFormatter"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0dRKsErPEe2NP6AzGuGlzg" name="Duration"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0demEUrPEe2NP6AzGuGlzg" name="LocalDateTime"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0eaaMErPEe2NP6AzGuGlzg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_0eaaMUrPEe2NP6AzGuGlzg" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0eddgErPEe2NP6AzGuGlzg" name="Class"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0etVIUrPEe2NP6AzGuGlzg" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_0N21sErPEe2NP6AzGuGlzg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_0N21sUrPEe2NP6AzGuGlzg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_0N3cwErPEe2NP6AzGuGlzg" name="plaf">
          <packagedElement xmi:type="uml:Package" xmi:id="_0N3cwUrPEe2NP6AzGuGlzg" name="metal">
            <packagedElement xmi:type="uml:Class" xmi:id="_0cVWkUrPEe2NP6AzGuGlzg" name="DefaultMetalTheme"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_0cVWk0rPEe2NP6AzGuGlzg" name="MetalLookAndFeel"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_0O-QAErPEe2NP6AzGuGlzg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_0dw58krPEe2NP6AzGuGlzg" name="ChangeEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_0dxhAUrPEe2NP6AzGuGlzg" name="ChangeListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cRsMUrPEe2NP6AzGuGlzg" name="BorderFactory"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cRsM0rPEe2NP6AzGuGlzg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cSTQUrPEe2NP6AzGuGlzg" name="JMenu"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cS6UUrPEe2NP6AzGuGlzg" name="JMenuBar"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cS6U0rPEe2NP6AzGuGlzg" name="JMenuItem"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cThYUrPEe2NP6AzGuGlzg" name="JOptionPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cUIcUrPEe2NP6AzGuGlzg" name="SwingUtilities"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cUIc0rPEe2NP6AzGuGlzg" name="UIManager"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cUvgUrPEe2NP6AzGuGlzg" name="UnsupportedLookAndFeelException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0ccEQUrPEe2NP6AzGuGlzg" name="ImageIcon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0ccEQ0rPEe2NP6AzGuGlzg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0ccrUUrPEe2NP6AzGuGlzg" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cdSYUrPEe2NP6AzGuGlzg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cnqcUrPEe2NP6AzGuGlzg" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0dw58ErPEe2NP6AzGuGlzg" name="JSlider"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0OE4IUrPEe2NP6AzGuGlzg" name="imageio">
        <packagedElement xmi:type="uml:Class" xmi:id="_0cbdMUrPEe2NP6AzGuGlzg" name="ImageIO"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0PHZ8ErPEe2NP6AzGuGlzg" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_0PHZ8UrPEe2NP6AzGuGlzg" name="sampled">
          <packagedElement xmi:type="uml:Class" xmi:id="_0d7SAErPEe2NP6AzGuGlzg" name="AudioInputStream"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_0d75EUrPEe2NP6AzGuGlzg" name="AudioSystem"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_0d8gIUrPEe2NP6AzGuGlzg" name="Clip"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_0OH7cErPEe2NP6AzGuGlzg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_0OH7cUrPEe2NP6AzGuGlzg" name="dom4j">
        <packagedElement xmi:type="uml:Package" xmi:id="_0O0fAUrPEe2NP6AzGuGlzg" name="io">
          <packagedElement xmi:type="uml:Class" xmi:id="_0dhpYErPEe2NP6AzGuGlzg" name="OutputFormat"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_0dhpYkrPEe2NP6AzGuGlzg" name="SAXReader"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_0diQcUrPEe2NP6AzGuGlzg" name="XMLWriter"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0cfuoUrPEe2NP6AzGuGlzg" name="DocumentException"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_0df0M0rPEe2NP6AzGuGlzg" name="Document"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0dgbQUrPEe2NP6AzGuGlzg" name="DocumentHelper"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_0dgbQ0rPEe2NP6AzGuGlzg" name="Element"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_0dhCUUrPEe2NP6AzGuGlzg" name="Node"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0Ow0okrPEe2NP6AzGuGlzg" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_0Ow0o0rPEe2NP6AzGuGlzg" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_0Ow0pErPEe2NP6AzGuGlzg" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_0dRxw0rPEe2NP6AzGuGlzg" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_0dSY0UrPEe2NP6AzGuGlzg" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0Ow0pUrPEe2NP6AzGuGlzg" name="opentest4j">
        <packagedElement xmi:type="uml:Class" xmi:id="_0da7sErPEe2NP6AzGuGlzg" name="AssertionFailedError"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_zOPy0ErPEe2NP6AzGuGlzg">
      <eAnnotations xmi:id="_zOTdMErPEe2NP6AzGuGlzg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_zOV5cErPEe2NP6AzGuGlzg" base_Package="_zAC-wErPEe2NP6AzGuGlzg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0P6EIErPEe2NP6AzGuGlzg" base_Element="_0P3A0ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0P-VkUrPEe2NP6AzGuGlzg" base_Element="_0P9HcErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0P-Vk0rPEe2NP6AzGuGlzg" base_Element="_0P-VkkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0P-8oErPEe2NP6AzGuGlzg" base_Element="_0P-VlErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0P-8o0rPEe2NP6AzGuGlzg" base_Element="_0P-8oUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0P_jsErPEe2NP6AzGuGlzg" base_Element="_0P-8pErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0P_jskrPEe2NP6AzGuGlzg" base_Element="_0P_jsUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0P_jtErPEe2NP6AzGuGlzg" base_Element="_0P_js0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0QAKwUrPEe2NP6AzGuGlzg" base_Element="_0QAKwErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0QAKxUrPEe2NP6AzGuGlzg" base_Element="_0QAKwkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0QAx0UrPEe2NP6AzGuGlzg" base_Element="_0QAx0ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0QBY4ErPEe2NP6AzGuGlzg" base_Element="_0QAx0krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QB_8ErPEe2NP6AzGuGlzg" base_Element="_0P3A0ErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QB_8UrPEe2NP6AzGuGlzg" name="SuppressWarnings">
      <annotationParameters xmi:id="_0QB_8krPEe2NP6AzGuGlzg" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_0gbMYErPEe2NP6AzGuGlzg" value="&quot;serial&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QXXIErPEe2NP6AzGuGlzg" base_Element="_0QWwEErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Array xmi:id="_0Qc2s0rPEe2NP6AzGuGlzg" dimensions="2" base_Element="_0Qc2sErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Array xmi:id="_0QddwkrPEe2NP6AzGuGlzg" dimensions="2" base_Element="_0Qc2tErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Qoc40rPEe2NP6AzGuGlzg" base_Element="_0Qoc4ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QpD8UrPEe2NP6AzGuGlzg" base_Element="_0Qoc5UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QpD8krPEe2NP6AzGuGlzg" base_Element="_0Qoc5UrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QpD80rPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QprAErPEe2NP6AzGuGlzg" base_Element="_0QpD9ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QprAUrPEe2NP6AzGuGlzg" base_Element="_0QpD9ErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QprAkrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QprBUrPEe2NP6AzGuGlzg" base_Element="_0QprA0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QprBkrPEe2NP6AzGuGlzg" base_Element="_0QprA0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QprB0rPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QsuUErPEe2NP6AzGuGlzg" base_Element="_0QsHQUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QsuUUrPEe2NP6AzGuGlzg" base_Element="_0QsHQUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QsuUkrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QsuVUrPEe2NP6AzGuGlzg" base_Element="_0QsuU0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QtVYErPEe2NP6AzGuGlzg" base_Element="_0QsuU0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QtVYUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QtVZErPEe2NP6AzGuGlzg" base_Element="_0QtVYkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QtVZUrPEe2NP6AzGuGlzg" base_Element="_0QtVYkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QtVZkrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QujgErPEe2NP6AzGuGlzg" base_Element="_0Qt8cUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QujhErPEe2NP6AzGuGlzg" base_Element="_0QujgkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QujhUrPEe2NP6AzGuGlzg" base_Element="_0QujgkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QujhkrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QvKkErPEe2NP6AzGuGlzg" base_Element="_0Qujh0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QvKkUrPEe2NP6AzGuGlzg" base_Element="_0Qujh0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QvKkkrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QvKlUrPEe2NP6AzGuGlzg" base_Element="_0QvKk0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QvKlkrPEe2NP6AzGuGlzg" base_Element="_0QvKk0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QvKl0rPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QwYskrPEe2NP6AzGuGlzg" base_Element="_0QwYsErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Qw_wErPEe2NP6AzGuGlzg" base_Element="_0QwYsErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Qw_wUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Qxm1ErPEe2NP6AzGuGlzg" base_Element="_0Qxm0krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QyN4ErPEe2NP6AzGuGlzg" base_Element="_0Qxm0krPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QyN4UrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0QyN5ErPEe2NP6AzGuGlzg" base_Element="_0QyN4krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0QyN5UrPEe2NP6AzGuGlzg" base_Element="_0QyN4krPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0QyN5krPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Qy08ErPEe2NP6AzGuGlzg" base_Element="_0QyN50rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Qy08UrPEe2NP6AzGuGlzg" base_Element="_0QyN50rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Qy08krPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q1RM0rPEe2NP6AzGuGlzg" base_Element="_0Q1RMUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q1RNErPEe2NP6AzGuGlzg" base_Element="_0Q1RMUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q1RNUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q14QkrPEe2NP6AzGuGlzg" base_Element="_0Q14QErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q14Q0rPEe2NP6AzGuGlzg" base_Element="_0Q14QErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q14RErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q14R0rPEe2NP6AzGuGlzg" base_Element="_0Q14RUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q2fUErPEe2NP6AzGuGlzg" base_Element="_0Q14RUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q2fUUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q3GYkrPEe2NP6AzGuGlzg" base_Element="_0Q3GYErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q3GY0rPEe2NP6AzGuGlzg" base_Element="_0Q3GYErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q3GZErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q3tcUrPEe2NP6AzGuGlzg" base_Element="_0Q3GZUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q3tckrPEe2NP6AzGuGlzg" base_Element="_0Q3GZUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q3tc0rPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q4UgErPEe2NP6AzGuGlzg" base_Element="_0Q3tdErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q4UgUrPEe2NP6AzGuGlzg" base_Element="_0Q3tdErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q4UgkrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q4UhUrPEe2NP6AzGuGlzg" base_Element="_0Q4Ug0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q47kErPEe2NP6AzGuGlzg" base_Element="_0Q4Ug0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q47kUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q6JsErPEe2NP6AzGuGlzg" base_Element="_0Q5ioUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q6JsUrPEe2NP6AzGuGlzg" base_Element="_0Q5ioUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q6JskrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q6wwkrPEe2NP6AzGuGlzg" base_Element="_0Q6wwErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q6ww0rPEe2NP6AzGuGlzg" base_Element="_0Q6wwErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q6wxErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q6wx0rPEe2NP6AzGuGlzg" base_Element="_0Q6wxUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q7X0ErPEe2NP6AzGuGlzg" base_Element="_0Q6wxUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q7X0UrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q7X1ErPEe2NP6AzGuGlzg" base_Element="_0Q7X0krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q7X1UrPEe2NP6AzGuGlzg" base_Element="_0Q7X0krPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q7X1krPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q9NBUrPEe2NP6AzGuGlzg" base_Element="_0Q9NA0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q90EErPEe2NP6AzGuGlzg" base_Element="_0Q9NA0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q90EUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q90FErPEe2NP6AzGuGlzg" base_Element="_0Q90EkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q90FUrPEe2NP6AzGuGlzg" base_Element="_0Q90EkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Q90FkrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RBedErPEe2NP6AzGuGlzg" base_Element="_0RBecErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RCskErPEe2NP6AzGuGlzg" base_Element="_0RCFgUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RCskUrPEe2NP6AzGuGlzg" base_Element="_0RCFgUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RCskkrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RDToUrPEe2NP6AzGuGlzg" base_Element="_0RCsk0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RDTokrPEe2NP6AzGuGlzg" base_Element="_0RCsk0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RDTo0rPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RDTpkrPEe2NP6AzGuGlzg" base_Element="_0RDTpErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RDTp0rPEe2NP6AzGuGlzg" base_Element="_0RDTpErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RDTqErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0REhw0rPEe2NP6AzGuGlzg" base_Element="_0REhwErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0REhx0rPEe2NP6AzGuGlzg" base_Element="_0REhxUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0REhyErPEe2NP6AzGuGlzg" base_Element="_0REhxUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RFI0ErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RFI1ErPEe2NP6AzGuGlzg" base_Element="_0RFI0krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RFI1UrPEe2NP6AzGuGlzg" base_Element="_0RFI0krPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RFI1krPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RFv4UrPEe2NP6AzGuGlzg" base_Element="_0RFI10rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RFv4krPEe2NP6AzGuGlzg" base_Element="_0RFI10rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RFv40rPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RIzMUrPEe2NP6AzGuGlzg" base_Element="_0RIzMErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RIzMkrPEe2NP6AzGuGlzg" base_Element="_0RIzMErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RIzM0rPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RIzNUrPEe2NP6AzGuGlzg" base_Element="_0RIzNErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RJaQErPEe2NP6AzGuGlzg" base_Element="_0RIzNErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RJaQUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RQH8krPEe2NP6AzGuGlzg" base_Element="_0RQH8UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RQvAErPEe2NP6AzGuGlzg" base_Element="_0RQH8UrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RQvAUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RQvA0rPEe2NP6AzGuGlzg" base_Element="_0RQvAkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RQvBErPEe2NP6AzGuGlzg" base_Element="_0RQvAkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RQvBUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RQvB0rPEe2NP6AzGuGlzg" base_Element="_0RQvBkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RRWEErPEe2NP6AzGuGlzg" base_Element="_0RQvBkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RRWEUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RRWE0rPEe2NP6AzGuGlzg" base_Element="_0RRWEkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RRWFErPEe2NP6AzGuGlzg" base_Element="_0RRWEkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RRWFUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RRWF0rPEe2NP6AzGuGlzg" base_Element="_0RRWFkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RRWGErPEe2NP6AzGuGlzg" base_Element="_0RRWFkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RRWGUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RR9IErPEe2NP6AzGuGlzg" base_Element="_0RRWGkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RR9IUrPEe2NP6AzGuGlzg" base_Element="_0RRWGkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RR9IkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RR9JErPEe2NP6AzGuGlzg" base_Element="_0RR9I0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RR9JUrPEe2NP6AzGuGlzg" base_Element="_0RR9I0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RR9JkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RR9KErPEe2NP6AzGuGlzg" base_Element="_0RR9J0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RSkMErPEe2NP6AzGuGlzg" base_Element="_0RR9J0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RSkMUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RSkM0rPEe2NP6AzGuGlzg" base_Element="_0RSkMkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RSkNErPEe2NP6AzGuGlzg" base_Element="_0RSkMkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RSkNUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RSkN0rPEe2NP6AzGuGlzg" base_Element="_0RSkNkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RSkOErPEe2NP6AzGuGlzg" base_Element="_0RSkNkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RSkOUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RTLQErPEe2NP6AzGuGlzg" base_Element="_0RSkOkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RTLQUrPEe2NP6AzGuGlzg" base_Element="_0RSkOkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RTLQkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RTLRErPEe2NP6AzGuGlzg" base_Element="_0RTLQ0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RTLRUrPEe2NP6AzGuGlzg" base_Element="_0RTLQ0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RTLRkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RTLSErPEe2NP6AzGuGlzg" base_Element="_0RTLR0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RTyUErPEe2NP6AzGuGlzg" base_Element="_0RTLR0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RTyUUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RTyU0rPEe2NP6AzGuGlzg" base_Element="_0RTyUkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RTyVErPEe2NP6AzGuGlzg" base_Element="_0RTyUkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RTyVUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RTyV0rPEe2NP6AzGuGlzg" base_Element="_0RTyVkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RTyWErPEe2NP6AzGuGlzg" base_Element="_0RTyVkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RTyWUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RUZYErPEe2NP6AzGuGlzg" base_Element="_0RTyWkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RUZYUrPEe2NP6AzGuGlzg" base_Element="_0RTyWkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RUZYkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RUZZErPEe2NP6AzGuGlzg" base_Element="_0RUZY0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RUZZUrPEe2NP6AzGuGlzg" base_Element="_0RUZY0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RUZZkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_0RVngErPEe2NP6AzGuGlzg" genericsValue="A, B, C" base_Element="_0RVAcErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RqXpkrPEe2NP6AzGuGlzg" base_Element="_0RqXpErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Rta9ErPEe2NP6AzGuGlzg" base_Element="_0Rta80rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RuCAErPEe2NP6AzGuGlzg" base_Element="_0Rta80rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RuCAUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RuCA0rPEe2NP6AzGuGlzg" base_Element="_0RuCAkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RuCBErPEe2NP6AzGuGlzg" base_Element="_0RuCAkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RuCBUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RuCB0rPEe2NP6AzGuGlzg" base_Element="_0RuCBkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RuCCErPEe2NP6AzGuGlzg" base_Element="_0RuCBkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RuCCUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RupEErPEe2NP6AzGuGlzg" base_Element="_0RuCCkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RupEUrPEe2NP6AzGuGlzg" base_Element="_0RuCCkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RupEkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RupFErPEe2NP6AzGuGlzg" base_Element="_0RupE0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RupFUrPEe2NP6AzGuGlzg" base_Element="_0RupE0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RupFkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RupGErPEe2NP6AzGuGlzg" base_Element="_0RupF0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RupGUrPEe2NP6AzGuGlzg" base_Element="_0RupF0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RupGkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RvQIErPEe2NP6AzGuGlzg" base_Element="_0RupG0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RvQIUrPEe2NP6AzGuGlzg" base_Element="_0RupG0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RvQIkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RvQJErPEe2NP6AzGuGlzg" base_Element="_0RvQI0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RvQJUrPEe2NP6AzGuGlzg" base_Element="_0RvQI0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RvQJkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RvQKErPEe2NP6AzGuGlzg" base_Element="_0RvQJ0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RvQKUrPEe2NP6AzGuGlzg" base_Element="_0RvQJ0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RvQKkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Rv3MUrPEe2NP6AzGuGlzg" base_Element="_0Rv3MErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Rv3MkrPEe2NP6AzGuGlzg" base_Element="_0Rv3MErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Rv3M0rPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Rv3NUrPEe2NP6AzGuGlzg" base_Element="_0Rv3NErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Rv3NkrPEe2NP6AzGuGlzg" base_Element="_0Rv3NErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Rv3N0rPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RweQErPEe2NP6AzGuGlzg" base_Element="_0Rv3OErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RweQUrPEe2NP6AzGuGlzg" base_Element="_0Rv3OErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RweQkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RweRErPEe2NP6AzGuGlzg" base_Element="_0RweQ0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RweRUrPEe2NP6AzGuGlzg" base_Element="_0RweQ0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RweRkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RweSErPEe2NP6AzGuGlzg" base_Element="_0RweR0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RweSUrPEe2NP6AzGuGlzg" base_Element="_0RweR0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RweSkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RxFUErPEe2NP6AzGuGlzg" base_Element="_0RweS0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RxFUUrPEe2NP6AzGuGlzg" base_Element="_0RweS0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RxFUkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RxFVErPEe2NP6AzGuGlzg" base_Element="_0RxFU0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RxFVUrPEe2NP6AzGuGlzg" base_Element="_0RxFU0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RxFVkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RxFWErPEe2NP6AzGuGlzg" base_Element="_0RxFV0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RxsYErPEe2NP6AzGuGlzg" base_Element="_0RxFV0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RxsYUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RxsY0rPEe2NP6AzGuGlzg" base_Element="_0RxsYkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RxsZErPEe2NP6AzGuGlzg" base_Element="_0RxsYkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RxsZUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RxsZ0rPEe2NP6AzGuGlzg" base_Element="_0RxsZkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RyTcErPEe2NP6AzGuGlzg" base_Element="_0RxsZkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RyTcUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RyTc0rPEe2NP6AzGuGlzg" base_Element="_0RyTckrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RyTdErPEe2NP6AzGuGlzg" base_Element="_0RyTckrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RyTdUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RyTd0rPEe2NP6AzGuGlzg" base_Element="_0RyTdkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RyTeErPEe2NP6AzGuGlzg" base_Element="_0RyTdkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RyTeUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Ry6gErPEe2NP6AzGuGlzg" base_Element="_0RyTekrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Ry6gUrPEe2NP6AzGuGlzg" base_Element="_0RyTekrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Ry6gkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Ry6hErPEe2NP6AzGuGlzg" base_Element="_0Ry6g0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Ry6hUrPEe2NP6AzGuGlzg" base_Element="_0Ry6g0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Ry6hkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Ry6iErPEe2NP6AzGuGlzg" base_Element="_0Ry6h0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0Ry6iUrPEe2NP6AzGuGlzg" base_Element="_0Ry6h0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0Ry6ikrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RzhkErPEe2NP6AzGuGlzg" base_Element="_0Ry6i0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RzhkUrPEe2NP6AzGuGlzg" base_Element="_0Ry6i0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RzhkkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RzhlErPEe2NP6AzGuGlzg" base_Element="_0Rzhk0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RzhlUrPEe2NP6AzGuGlzg" base_Element="_0Rzhk0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RzhlkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RzhmErPEe2NP6AzGuGlzg" base_Element="_0Rzhl0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0RzhmUrPEe2NP6AzGuGlzg" base_Element="_0Rzhl0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0RzhmkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R0IoErPEe2NP6AzGuGlzg" base_Element="_0Rzhm0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R0IoUrPEe2NP6AzGuGlzg" base_Element="_0Rzhm0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R0IokrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R0IpErPEe2NP6AzGuGlzg" base_Element="_0R0Io0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R0IpUrPEe2NP6AzGuGlzg" base_Element="_0R0Io0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R0IpkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R0IqErPEe2NP6AzGuGlzg" base_Element="_0R0Ip0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R0IqUrPEe2NP6AzGuGlzg" base_Element="_0R0Ip0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R0IqkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R0vsErPEe2NP6AzGuGlzg" base_Element="_0R0Iq0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R0vsUrPEe2NP6AzGuGlzg" base_Element="_0R0Iq0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R0vskrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R0vtErPEe2NP6AzGuGlzg" base_Element="_0R0vs0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R0vtUrPEe2NP6AzGuGlzg" base_Element="_0R0vs0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R0vtkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R0vuErPEe2NP6AzGuGlzg" base_Element="_0R0vt0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R0vuUrPEe2NP6AzGuGlzg" base_Element="_0R0vt0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R0vukrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R1WwErPEe2NP6AzGuGlzg" base_Element="_0R0vu0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R1WwUrPEe2NP6AzGuGlzg" base_Element="_0R0vu0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R1WwkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R1WxErPEe2NP6AzGuGlzg" base_Element="_0R1Ww0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R1WxUrPEe2NP6AzGuGlzg" base_Element="_0R1Ww0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R1WxkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R1WyErPEe2NP6AzGuGlzg" base_Element="_0R1Wx0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R1WyUrPEe2NP6AzGuGlzg" base_Element="_0R1Wx0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R1WykrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R190ErPEe2NP6AzGuGlzg" base_Element="_0R1Wy0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R190UrPEe2NP6AzGuGlzg" base_Element="_0R1Wy0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R190krPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R191ErPEe2NP6AzGuGlzg" base_Element="_0R1900rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R191UrPEe2NP6AzGuGlzg" base_Element="_0R1900rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R191krPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R192ErPEe2NP6AzGuGlzg" base_Element="_0R1910rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R192UrPEe2NP6AzGuGlzg" base_Element="_0R1910rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R192krPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R2k4ErPEe2NP6AzGuGlzg" base_Element="_0R1920rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R2k4UrPEe2NP6AzGuGlzg" base_Element="_0R1920rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R2k4krPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R2k5ErPEe2NP6AzGuGlzg" base_Element="_0R2k40rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R2k5UrPEe2NP6AzGuGlzg" base_Element="_0R2k40rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R2k5krPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R2k6ErPEe2NP6AzGuGlzg" base_Element="_0R2k50rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R3L8ErPEe2NP6AzGuGlzg" base_Element="_0R2k50rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R3L8UrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R3L80rPEe2NP6AzGuGlzg" base_Element="_0R3L8krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R3L9ErPEe2NP6AzGuGlzg" base_Element="_0R3L8krPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R3L9UrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R3L90rPEe2NP6AzGuGlzg" base_Element="_0R3L9krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R3L-ErPEe2NP6AzGuGlzg" base_Element="_0R3L9krPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R3L-UrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R3zAErPEe2NP6AzGuGlzg" base_Element="_0R3L-krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R3zAUrPEe2NP6AzGuGlzg" base_Element="_0R3L-krPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R3zAkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R3zBErPEe2NP6AzGuGlzg" base_Element="_0R3zA0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R3zBUrPEe2NP6AzGuGlzg" base_Element="_0R3zA0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R3zBkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R3zCErPEe2NP6AzGuGlzg" base_Element="_0R3zB0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R3zCUrPEe2NP6AzGuGlzg" base_Element="_0R3zB0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R3zCkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R4aEErPEe2NP6AzGuGlzg" base_Element="_0R3zC0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R4aEUrPEe2NP6AzGuGlzg" base_Element="_0R3zC0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R4aEkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R4aFErPEe2NP6AzGuGlzg" base_Element="_0R4aE0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R4aFUrPEe2NP6AzGuGlzg" base_Element="_0R4aE0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R4aFkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R4aGErPEe2NP6AzGuGlzg" base_Element="_0R4aF0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R4aGUrPEe2NP6AzGuGlzg" base_Element="_0R4aF0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R4aGkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R5BIErPEe2NP6AzGuGlzg" base_Element="_0R4aG0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R5BIUrPEe2NP6AzGuGlzg" base_Element="_0R4aG0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R5BIkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R5BJErPEe2NP6AzGuGlzg" base_Element="_0R5BI0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R5BJUrPEe2NP6AzGuGlzg" base_Element="_0R5BI0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R5BJkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R5BKErPEe2NP6AzGuGlzg" base_Element="_0R5BJ0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R5BKUrPEe2NP6AzGuGlzg" base_Element="_0R5BJ0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R5BKkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R5oMErPEe2NP6AzGuGlzg" base_Element="_0R5BK0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R5oMUrPEe2NP6AzGuGlzg" base_Element="_0R5BK0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R5oMkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R5oNErPEe2NP6AzGuGlzg" base_Element="_0R5oM0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R5oNUrPEe2NP6AzGuGlzg" base_Element="_0R5oM0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R5oNkrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R5oOErPEe2NP6AzGuGlzg" base_Element="_0R5oN0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R5oOUrPEe2NP6AzGuGlzg" base_Element="_0R5oN0rPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R6PQErPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R6PQkrPEe2NP6AzGuGlzg" base_Element="_0R6PQUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R6PQ0rPEe2NP6AzGuGlzg" base_Element="_0R6PQUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R6PRErPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R6PRkrPEe2NP6AzGuGlzg" base_Element="_0R6PRUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R6PR0rPEe2NP6AzGuGlzg" base_Element="_0R6PRUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R6PSErPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R6PSkrPEe2NP6AzGuGlzg" base_Element="_0R6PSUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R6PS0rPEe2NP6AzGuGlzg" base_Element="_0R6PSUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R62UErPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R62UkrPEe2NP6AzGuGlzg" base_Element="_0R62UUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R62U0rPEe2NP6AzGuGlzg" base_Element="_0R62UUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R62VErPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R62VkrPEe2NP6AzGuGlzg" base_Element="_0R62VUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R62V0rPEe2NP6AzGuGlzg" base_Element="_0R62VUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R62WErPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R62WkrPEe2NP6AzGuGlzg" base_Element="_0R62WUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R62W0rPEe2NP6AzGuGlzg" base_Element="_0R62WUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R7dYErPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R7dYkrPEe2NP6AzGuGlzg" base_Element="_0R7dYUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R7dY0rPEe2NP6AzGuGlzg" base_Element="_0R7dYUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R7dZErPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R7dZkrPEe2NP6AzGuGlzg" base_Element="_0R7dZUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R7dZ0rPEe2NP6AzGuGlzg" base_Element="_0R7dZUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R7daErPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R7dakrPEe2NP6AzGuGlzg" base_Element="_0R7daUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R8EcErPEe2NP6AzGuGlzg" base_Element="_0R7daUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R8EcUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R8Ec0rPEe2NP6AzGuGlzg" base_Element="_0R8EckrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R8EdErPEe2NP6AzGuGlzg" base_Element="_0R8EckrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R8EdUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R8Ed0rPEe2NP6AzGuGlzg" base_Element="_0R8EdkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R8rgErPEe2NP6AzGuGlzg" base_Element="_0R8EdkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R8rgUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R8rg0rPEe2NP6AzGuGlzg" base_Element="_0R8rgkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R8rhErPEe2NP6AzGuGlzg" base_Element="_0R8rgkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R8rhUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0R8rh0rPEe2NP6AzGuGlzg" base_Element="_0R8rhkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0R8riErPEe2NP6AzGuGlzg" base_Element="_0R8rhkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0R8riUrPEe2NP6AzGuGlzg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_0cPP8ErPEe2NP6AzGuGlzg" base_Element="_0cOB0ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cP3AErPEe2NP6AzGuGlzg" base_Element="_0cPP8UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cQeEErPEe2NP6AzGuGlzg" base_Element="_0cP3AUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cQeEkrPEe2NP6AzGuGlzg" base_Element="_0cQeEUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cRFIErPEe2NP6AzGuGlzg" base_Element="_0cQeE0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cRsMErPEe2NP6AzGuGlzg" base_Element="_0cRFIUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cRsMkrPEe2NP6AzGuGlzg" base_Element="_0cRsMUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cSTQErPEe2NP6AzGuGlzg" base_Element="_0cRsM0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cS6UErPEe2NP6AzGuGlzg" base_Element="_0cSTQUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cS6UkrPEe2NP6AzGuGlzg" base_Element="_0cS6UUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cThYErPEe2NP6AzGuGlzg" base_Element="_0cS6U0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cUIcErPEe2NP6AzGuGlzg" base_Element="_0cThYUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cUIckrPEe2NP6AzGuGlzg" base_Element="_0cUIcUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cUvgErPEe2NP6AzGuGlzg" base_Element="_0cUIc0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cVWkErPEe2NP6AzGuGlzg" base_Element="_0cUvgUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cVWkkrPEe2NP6AzGuGlzg" base_Element="_0cVWkUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cV9oErPEe2NP6AzGuGlzg" base_Element="_0cVWk0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0ca2IErPEe2NP6AzGuGlzg" base_Element="_0caPEErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cbdMErPEe2NP6AzGuGlzg" base_Element="_0ca2IUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0ccEQErPEe2NP6AzGuGlzg" base_Element="_0cbdMUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0ccEQkrPEe2NP6AzGuGlzg" base_Element="_0ccEQUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0ccrUErPEe2NP6AzGuGlzg" base_Element="_0ccEQ0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cdSYErPEe2NP6AzGuGlzg" base_Element="_0ccrUUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cdSYkrPEe2NP6AzGuGlzg" base_Element="_0cdSYUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cfHkErPEe2NP6AzGuGlzg" base_Element="_0ceggErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cfuoErPEe2NP6AzGuGlzg" base_Element="_0cfHkUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cgVsErPEe2NP6AzGuGlzg" base_Element="_0cfuoUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0clOMErPEe2NP6AzGuGlzg" base_Element="_0cknIErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cl1QErPEe2NP6AzGuGlzg" base_Element="_0clOMUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cmcUErPEe2NP6AzGuGlzg" base_Element="_0cl1QUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cnDYErPEe2NP6AzGuGlzg" base_Element="_0cmcUUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cnDYkrPEe2NP6AzGuGlzg" base_Element="_0cnDYUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cnqcErPEe2NP6AzGuGlzg" base_Element="_0cnDY0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0coRgErPEe2NP6AzGuGlzg" base_Element="_0cnqcUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0crU0ErPEe2NP6AzGuGlzg" base_Element="_0cqtwErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cr74ErPEe2NP6AzGuGlzg" base_Element="_0crU0UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cr74krPEe2NP6AzGuGlzg" base_Element="_0cr74UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0csi8ErPEe2NP6AzGuGlzg" base_Element="_0cr740rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0cw0YErPEe2NP6AzGuGlzg" base_Element="_0cwNUErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0c7McErPEe2NP6AzGuGlzg" base_Element="_0c6lYUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0c7McUrPEe2NP6AzGuGlzg" base_Element="_0c6lYUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0c7zgErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0c9osErPEe2NP6AzGuGlzg" base_Element="_0c9BoUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0c9osUrPEe2NP6AzGuGlzg" base_Element="_0c9BoUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0c9oskrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0c-20ErPEe2NP6AzGuGlzg" base_Element="_0c-PwUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0c-20UrPEe2NP6AzGuGlzg" base_Element="_0c-PwUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0c-20krPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0dAsAkrPEe2NP6AzGuGlzg" base_Element="_0dAsAErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0dAsA0rPEe2NP6AzGuGlzg" base_Element="_0dAsAErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0dAsBErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0dEWY0rPEe2NP6AzGuGlzg" base_Element="_0dEWYErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0dE9cErPEe2NP6AzGuGlzg" base_Element="_0dEWYErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0dE9cUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0dGypUrPEe2NP6AzGuGlzg" base_Element="_0dGyokrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0dHZsErPEe2NP6AzGuGlzg" base_Element="_0dGyokrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0dHZsUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0dIn0ErPEe2NP6AzGuGlzg" base_Element="_0dIAxUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0dIn0UrPEe2NP6AzGuGlzg" base_Element="_0dIAxUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0dIn0krPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_0dJ18ErPEe2NP6AzGuGlzg" base_Element="_0dJO4ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0dNgVErPEe2NP6AzGuGlzg" base_Element="_0dNgUUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0dOHYErPEe2NP6AzGuGlzg" base_Element="_0dNgUUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0dOHYUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0dOuckrPEe2NP6AzGuGlzg" base_Element="_0dOucErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0dOuc0rPEe2NP6AzGuGlzg" base_Element="_0dOucErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0dOudErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_0dP8kErPEe2NP6AzGuGlzg" base_Element="_0dPVgErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dP8kkrPEe2NP6AzGuGlzg" base_Element="_0dP8kUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dQjoErPEe2NP6AzGuGlzg" base_Element="_0dP8k0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dRxwErPEe2NP6AzGuGlzg" base_Element="_0dRKsErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dRxwkrPEe2NP6AzGuGlzg" base_Element="_0dRxwUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dSY0ErPEe2NP6AzGuGlzg" base_Element="_0dRxw0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0daUoErPEe2NP6AzGuGlzg" base_Element="_0dSY0UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0da7sUrPEe2NP6AzGuGlzg" base_Element="_0da7sErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0ddX8ErPEe2NP6AzGuGlzg" base_Element="_0dcw4ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dd_AUrPEe2NP6AzGuGlzg" base_Element="_0dd_AErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0demEErPEe2NP6AzGuGlzg" base_Element="_0dd_AkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0demEkrPEe2NP6AzGuGlzg" base_Element="_0demEUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dfNIErPEe2NP6AzGuGlzg" base_Element="_0demE0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0df0MErPEe2NP6AzGuGlzg" base_Element="_0dfNIUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0df0MkrPEe2NP6AzGuGlzg" base_Element="_0df0MUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dgbQErPEe2NP6AzGuGlzg" base_Element="_0df0M0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dgbQkrPEe2NP6AzGuGlzg" base_Element="_0dgbQUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dhCUErPEe2NP6AzGuGlzg" base_Element="_0dgbQ0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dhCUkrPEe2NP6AzGuGlzg" base_Element="_0dhCUUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dhpYUrPEe2NP6AzGuGlzg" base_Element="_0dhpYErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0diQcErPEe2NP6AzGuGlzg" base_Element="_0dhpYkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0diQckrPEe2NP6AzGuGlzg" base_Element="_0diQcUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0doXEErPEe2NP6AzGuGlzg" base_Element="_0dnI8ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dw58UrPEe2NP6AzGuGlzg" base_Element="_0dw58ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dxhAErPEe2NP6AzGuGlzg" base_Element="_0dw58krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0dyIEErPEe2NP6AzGuGlzg" base_Element="_0dxhAUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0d41wErPEe2NP6AzGuGlzg" base_Element="_0d4OsErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0d75EErPEe2NP6AzGuGlzg" base_Element="_0d7SAErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0d8gIErPEe2NP6AzGuGlzg" base_Element="_0d75EUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0d8gIkrPEe2NP6AzGuGlzg" base_Element="_0d8gIUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0d-VUErPEe2NP6AzGuGlzg" base_Element="_0d9uQErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:StyledElement xmi:id="_0eNl4krPEe2NP6AzGuGlzg" base_Element="_0eNl4ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0ePbEUrPEe2NP6AzGuGlzg" base_Element="_0ePbEErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0eQCIkrPEe2NP6AzGuGlzg" base_Element="_0eQCIErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0eQpMErPEe2NP6AzGuGlzg" base_Element="_0eQCIErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0eQpMUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0eQpNErPEe2NP6AzGuGlzg" base_Element="_0eQpMkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0eRQQErPEe2NP6AzGuGlzg" base_Element="_0eQpMkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0eRQQUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0eRQRErPEe2NP6AzGuGlzg" base_Element="_0eRQQkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0eR3UErPEe2NP6AzGuGlzg" base_Element="_0eRQQkrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0eR3UUrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_0eWIx0rPEe2NP6AzGuGlzg" dimensions="2" base_Element="_0eWIwUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0eWv0ErPEe2NP6AzGuGlzg" genericsValue="Enemy" base_Element="_0eWIwkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0eYlAErPEe2NP6AzGuGlzg" genericsValue="Point" base_Element="_0eX980rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0ebBQErPEe2NP6AzGuGlzg" base_Element="_0eaaMUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0eboUErPEe2NP6AzGuGlzg" base_Element="_0ebBQUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0eboUUrPEe2NP6AzGuGlzg" base_Element="_0ebBQUrPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0eboUkrPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_0eeEkErPEe2NP6AzGuGlzg" base_Element="_0eddgErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0eeroErPEe2NP6AzGuGlzg" genericsValue="?" base_Element="_0eeEkUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Array xmi:id="_0efStkrPEe2NP6AzGuGlzg" dimensions="2" base_Element="_0efSsUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0ef5wErPEe2NP6AzGuGlzg" genericsValue="Enemy" base_Element="_0efSs0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Array xmi:id="_0egg1UrPEe2NP6AzGuGlzg" dimensions="2" base_Element="_0egg0ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0ehu8ErPEe2NP6AzGuGlzg" genericsValue="Enemy" base_Element="_0ehH4krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0eiWAErPEe2NP6AzGuGlzg" genericsValue="Element" base_Element="_0ehu80rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0eiWAUrPEe2NP6AzGuGlzg" genericsValue="Integer, Integer" base_Element="_0ehu9ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0ejkIErPEe2NP6AzGuGlzg" genericsValue="Element" base_Element="_0ei9EkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0ejkIUrPEe2NP6AzGuGlzg" genericsValue="Integer, Integer, String" base_Element="_0ei9E0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0ekyQErPEe2NP6AzGuGlzg" genericsValue="Element" base_Element="_0ekLMkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0elZUErPEe2NP6AzGuGlzg" genericsValue="Enemy" base_Element="_0ekLM0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0emncErPEe2NP6AzGuGlzg" base_Element="_0emAYErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0emnckrPEe2NP6AzGuGlzg" base_Element="_0emncUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0enOgUrPEe2NP6AzGuGlzg" base_Element="_0enOgErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0en1kUrPEe2NP6AzGuGlzg" base_Element="_0en1kErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_0eocokrPEe2NP6AzGuGlzg" typeParameterDeclarationValue="T extends Enum&lt;?>" base_Operation="_0eocoErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0eocpErPEe2NP6AzGuGlzg" base_Element="_0eocoErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0epDsErPEe2NP6AzGuGlzg" genericsValue="T" base_Element="_0eocoUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0epqwErPEe2NP6AzGuGlzg" base_Element="_0epDsUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_0epqw0rPEe2NP6AzGuGlzg" typeParameterDeclarationValue="E extends Enum&lt;E>" base_Operation="_0epqwUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0eqR0krPEe2NP6AzGuGlzg" base_Element="_0epqwUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0eqR00rPEe2NP6AzGuGlzg" genericsValue="E" base_Element="_0epqwkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_0eq44krPEe2NP6AzGuGlzg" typeParameterDeclarationValue="E extends Enum&lt;E>" base_Operation="_0eq44ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0erf8ErPEe2NP6AzGuGlzg" base_Element="_0eq44ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0erf8UrPEe2NP6AzGuGlzg" genericsValue="E" base_Element="_0eq44UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_0esuE0rPEe2NP6AzGuGlzg" typeParameterDeclarationValue="E extends Enum&lt;E>" base_Operation="_0esuEErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0esuFkrPEe2NP6AzGuGlzg" base_Element="_0esuEErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0etVIErPEe2NP6AzGuGlzg" genericsValue="E" base_Element="_0esuEUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0et8MErPEe2NP6AzGuGlzg" base_Element="_0etVIUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_0evxYErPEe2NP6AzGuGlzg" typeParameterDeclarationValue="E extends Enum&lt;E>" base_Operation="_0evKUUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0evxYUrPEe2NP6AzGuGlzg" base_Element="_0evKUUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_0ew_gkrPEe2NP6AzGuGlzg" typeParameterDeclarationValue="E extends Enum&lt;E>" base_Operation="_0ew_gErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0exmkErPEe2NP6AzGuGlzg" base_Element="_0ew_gErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0e1Q8krPEe2NP6AzGuGlzg" base_Element="_0e1Q8ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0e1Q80rPEe2NP6AzGuGlzg" base_Element="_0e1Q8ErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0e1Q9ErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0e14AkrPEe2NP6AzGuGlzg" base_Element="_0e14AErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0e14A0rPEe2NP6AzGuGlzg" base_Element="_0e14AErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0e14BErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0e2fEkrPEe2NP6AzGuGlzg" base_Element="_0e2fEErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0e2fE0rPEe2NP6AzGuGlzg" base_Element="_0e2fEErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0e2fFErPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0e47UUrPEe2NP6AzGuGlzg" base_Element="_0e4UQErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Annotations xmi:id="_0e47UkrPEe2NP6AzGuGlzg" base_Element="_0e4UQErPEe2NP6AzGuGlzg">
    <annotations xmi:id="_0e47U0rPEe2NP6AzGuGlzg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_0e9z0ErPEe2NP6AzGuGlzg" base_Element="_0e9MwErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fIy8UrPEe2NP6AzGuGlzg" base_Element="_0fIy8ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fJaAUrPEe2NP6AzGuGlzg" base_Element="_0fIy8krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fJaA0rPEe2NP6AzGuGlzg" base_Element="_0fJaAkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fKBEErPEe2NP6AzGuGlzg" base_Element="_0fJaBErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fKBE0rPEe2NP6AzGuGlzg" base_Element="_0fKBEUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fKoIErPEe2NP6AzGuGlzg" base_Element="_0fKBFErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fKoIkrPEe2NP6AzGuGlzg" base_Element="_0fKoIUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fLPMkrPEe2NP6AzGuGlzg" base_Element="_0fLPMErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fL2QkrPEe2NP6AzGuGlzg" base_Element="_0fL2QErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fL2RUrPEe2NP6AzGuGlzg" base_Element="_0fL2Q0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fNEYErPEe2NP6AzGuGlzg" base_Element="_0fMdUErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fNrcUrPEe2NP6AzGuGlzg" base_Element="_0fNrcErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Array xmi:id="_0fOSgErPEe2NP6AzGuGlzg" dimensions="2" base_Element="_0fNrckrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fOSgUrPEe2NP6AzGuGlzg" base_Element="_0fNrckrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fO5kUrPEe2NP6AzGuGlzg" base_Element="_0fO5kErPEe2NP6AzGuGlzg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_0fO5k0rPEe2NP6AzGuGlzg" name="getEnemies" method="_0gA8tkrPEe2NP6AzGuGlzg">
      <ownedParameter xmi:id="_0fPgoErPEe2NP6AzGuGlzg" type="_0QqSEErPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0fPgoUrPEe2NP6AzGuGlzg" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fPgo0rPEe2NP6AzGuGlzg" base_Element="_0fPgokrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fQHsErPEe2NP6AzGuGlzg" base_Element="_0fPgpErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Array xmi:id="_0fRV00rPEe2NP6AzGuGlzg" dimensions="2" base_Element="_0fRV0UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fRV1ErPEe2NP6AzGuGlzg" base_Element="_0fRV0UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fR84ErPEe2NP6AzGuGlzg" base_Element="_0fRV1UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fR84krPEe2NP6AzGuGlzg" base_Element="_0fR84UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fR85ErPEe2NP6AzGuGlzg" base_Element="_0fR840rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fSj8UrPEe2NP6AzGuGlzg" base_Element="_0fSj8ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fSj80rPEe2NP6AzGuGlzg" base_Element="_0fSj8krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fUZIErPEe2NP6AzGuGlzg" base_Element="_0fTyEErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fVAMErPEe2NP6AzGuGlzg" base_Element="_0fUZIUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fVAMkrPEe2NP6AzGuGlzg" base_Element="_0fVAMUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fVnQkrPEe2NP6AzGuGlzg" base_Element="_0fVnQUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fWOUkrPEe2NP6AzGuGlzg" base_Element="_0fWOUUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fXccUrPEe2NP6AzGuGlzg" base_Element="_0fXccErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fXcc0rPEe2NP6AzGuGlzg" base_Element="_0fXcckrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fYDg0rPEe2NP6AzGuGlzg" base_Element="_0fYDgkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fZRoUrPEe2NP6AzGuGlzg" base_Element="_0fYqk0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fZ4sErPEe2NP6AzGuGlzg" base_Element="_0fZRpErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fZ4skrPEe2NP6AzGuGlzg" base_Element="_0fZ4sUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fafwkrPEe2NP6AzGuGlzg" base_Element="_0fafwErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fbG0ErPEe2NP6AzGuGlzg" base_Element="_0fafw0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fbG00rPEe2NP6AzGuGlzg" base_Element="_0fbG0UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fbt4UrPEe2NP6AzGuGlzg" base_Element="_0fbt4ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fcU8ErPEe2NP6AzGuGlzg" base_Element="_0fbt4krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fcU8krPEe2NP6AzGuGlzg" base_Element="_0fcU8UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fcU9ErPEe2NP6AzGuGlzg" base_Element="_0fcU80rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fc8AUrPEe2NP6AzGuGlzg" base_Element="_0fc8AErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Generics xmi:id="_0fc8A0rPEe2NP6AzGuGlzg" genericsValue="Direction" base_Element="_0fc8AkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fdjEkrPEe2NP6AzGuGlzg" base_Element="_0fdjEUrPEe2NP6AzGuGlzg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_0fdjE0rPEe2NP6AzGuGlzg" name="getLevel" isStatic="true" method="_0gPmOErPEe2NP6AzGuGlzg">
      <ownedParameter xmi:id="_0fdjFkrPEe2NP6AzGuGlzg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_0fdjFErPEe2NP6AzGuGlzg" name="setLevel" isStatic="true" method="_0gPmOkrPEe2NP6AzGuGlzg">
      <ownedParameter xmi:id="_0fdjFUrPEe2NP6AzGuGlzg" name="levelToSet">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0feKIUrPEe2NP6AzGuGlzg" base_Element="_0feKIErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fexMErPEe2NP6AzGuGlzg" base_Element="_0feKIkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fexMkrPEe2NP6AzGuGlzg" base_Element="_0fexMUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fexNErPEe2NP6AzGuGlzg" base_Element="_0fexM0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0ffYQErPEe2NP6AzGuGlzg" base_Element="_0fexNUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0ffYQkrPEe2NP6AzGuGlzg" base_Element="_0ffYQUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0ffYRErPEe2NP6AzGuGlzg" base_Element="_0ffYQ0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0ff_UErPEe2NP6AzGuGlzg" base_Element="_0ffYRUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0ff_UkrPEe2NP6AzGuGlzg" base_Element="_0ff_UUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0ff_VErPEe2NP6AzGuGlzg" base_Element="_0ff_U0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fgmYErPEe2NP6AzGuGlzg" base_Element="_0ff_VUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fgmYkrPEe2NP6AzGuGlzg" base_Element="_0fgmYUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fh0gErPEe2NP6AzGuGlzg" base_Element="_0fhNcErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fh0gkrPEe2NP6AzGuGlzg" base_Element="_0fh0gUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fibkErPEe2NP6AzGuGlzg" base_Element="_0fh0g0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fibkkrPEe2NP6AzGuGlzg" base_Element="_0fibkUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fjCoErPEe2NP6AzGuGlzg" base_Element="_0fibk0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fjCokrPEe2NP6AzGuGlzg" base_Element="_0fjCoUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fjCpErPEe2NP6AzGuGlzg" base_Element="_0fjCo0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fjpsUrPEe2NP6AzGuGlzg" base_Element="_0fjpsErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fjps0rPEe2NP6AzGuGlzg" base_Element="_0fjpskrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fkQwUrPEe2NP6AzGuGlzg" base_Element="_0fkQwErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fk30UrPEe2NP6AzGuGlzg" base_Element="_0fk30ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fk31ErPEe2NP6AzGuGlzg" base_Element="_0fk30krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fmF8UrPEe2NP6AzGuGlzg" base_Element="_0fle5krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fmF9ErPEe2NP6AzGuGlzg" base_Element="_0fmF8krPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fmtAErPEe2NP6AzGuGlzg" base_Element="_0fmF9UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fmtA0rPEe2NP6AzGuGlzg" base_Element="_0fmtAUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fnUEErPEe2NP6AzGuGlzg" base_Element="_0fmtBErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fnUE0rPEe2NP6AzGuGlzg" base_Element="_0fnUEUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fnUFkrPEe2NP6AzGuGlzg" base_Element="_0fnUFErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fn7IUrPEe2NP6AzGuGlzg" base_Element="_0fn7IErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0foiMUrPEe2NP6AzGuGlzg" base_Element="_0foiMErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0foiM0rPEe2NP6AzGuGlzg" base_Element="_0foiMkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fpwUUrPEe2NP6AzGuGlzg" base_Element="_0fpwUErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0fq-cUrPEe2NP6AzGuGlzg" base_Element="_0fqXZUrPEe2NP6AzGuGlzg"/>
  <uml:OpaqueBehavior xmi:id="_0gA8skrPEe2NP6AzGuGlzg" name="Direction" specification="_0QZMUErPEe2NP6AzGuGlzg">
    <ownedParameter xmi:id="_0gA8s0rPEe2NP6AzGuGlzg" name="dr">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <ownedParameter xmi:id="_0gA8tErPEe2NP6AzGuGlzg" name="dc">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <ownedParameter xmi:id="_0gA8tUrPEe2NP6AzGuGlzg" type="_0QX-MErPEe2NP6AzGuGlzg" direction="return"/>
    <language>java</language>
    <body>this.dr = dr;
     this.dc = dc;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_0gA8tkrPEe2NP6AzGuGlzg" name="getEnemies" specification="_0fO5k0rPEe2NP6AzGuGlzg">
    <ownedParameter xmi:id="_0gBjwErPEe2NP6AzGuGlzg" type="_0QqSEErPEe2NP6AzGuGlzg" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0gBjwUrPEe2NP6AzGuGlzg" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return Collections.unmodifiableList(enemies);
  </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_0gKGq0rPEe2NP6AzGuGlzg" name="colour" specification="_0RBecErPEe2NP6AzGuGlzg">
    <ownedParameter xmi:id="_0gKGrErPEe2NP6AzGuGlzg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return AuthenticationColour.NULL.name();
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_0gPmOErPEe2NP6AzGuGlzg" name="getLevel" specification="_0fdjE0rPEe2NP6AzGuGlzg">
    <ownedParameter xmi:id="_0gPmOUrPEe2NP6AzGuGlzg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>if(level == null) return &quot;level1.xml&quot;;
     return Recorder.level; 
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_0gPmOkrPEe2NP6AzGuGlzg" name="setLevel" specification="_0fdjFErPEe2NP6AzGuGlzg">
    <ownedParameter xmi:id="_0gPmO0rPEe2NP6AzGuGlzg" name="levelToSet">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>Recorder.level = levelToSet; 
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_0gTQnErPEe2NP6AzGuGlzg" name="Img" specification="_0RqXoErPEe2NP6AzGuGlzg">
    <ownedParameter xmi:id="_0gT3oErPEe2NP6AzGuGlzg" type="_0RoidErPEe2NP6AzGuGlzg" direction="return"/>
    <language>java</language>
    <body>image = loadImage(this.name());
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_0gT3oUrPEe2NP6AzGuGlzg" name="loadImage" specification="_0RqXpErPEe2NP6AzGuGlzg">
    <ownedParameter xmi:id="_0gT3okrPEe2NP6AzGuGlzg" name="name">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_0gT3o0rPEe2NP6AzGuGlzg" type="_0d4OsErPEe2NP6AzGuGlzg" direction="return"/>
    <language>java</language>
    <body>URL imagePath = Img.class.getResource(name + &quot;.png&quot;);
     try {
         return ImageIO.read(imagePath);
     } catch (IOException e) {
         throw new Error(e);
     }
 </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_0gxxsErPEe2NP6AzGuGlzg" base_Element="_0gxKoErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0gxxs0rPEe2NP6AzGuGlzg" base_Element="_0gxxsUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0gyYwErPEe2NP6AzGuGlzg" base_Element="_0gxxtErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0gyYw0rPEe2NP6AzGuGlzg" base_Element="_0gyYwUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0gy_0ErPEe2NP6AzGuGlzg" base_Element="_0gyYxErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0gy_00rPEe2NP6AzGuGlzg" base_Element="_0gy_0UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0gzm4ErPEe2NP6AzGuGlzg" base_Element="_0gy_1ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0gzm40rPEe2NP6AzGuGlzg" base_Element="_0gzm4UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g0N8ErPEe2NP6AzGuGlzg" base_Element="_0gzm5ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g0N80rPEe2NP6AzGuGlzg" base_Element="_0g0N8UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g01AErPEe2NP6AzGuGlzg" base_Element="_0g0N9ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g01A0rPEe2NP6AzGuGlzg" base_Element="_0g01AUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g01BkrPEe2NP6AzGuGlzg" base_Element="_0g01BErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g1cEErPEe2NP6AzGuGlzg" base_Element="_0g01B0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g1cE0rPEe2NP6AzGuGlzg" base_Element="_0g1cEUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g2DIErPEe2NP6AzGuGlzg" base_Element="_0g1cFErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g2DI0rPEe2NP6AzGuGlzg" base_Element="_0g2DIUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g2qMErPEe2NP6AzGuGlzg" base_Element="_0g2DJErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g2qM0rPEe2NP6AzGuGlzg" base_Element="_0g2qMUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g2qNkrPEe2NP6AzGuGlzg" base_Element="_0g2qNErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g3RQkrPEe2NP6AzGuGlzg" base_Element="_0g3RQErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g3RRUrPEe2NP6AzGuGlzg" base_Element="_0g3RQ0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g34UErPEe2NP6AzGuGlzg" base_Element="_0g3RRkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g34U0rPEe2NP6AzGuGlzg" base_Element="_0g34UUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g4fYErPEe2NP6AzGuGlzg" base_Element="_0g34VErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g4fY0rPEe2NP6AzGuGlzg" base_Element="_0g4fYUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g4fZkrPEe2NP6AzGuGlzg" base_Element="_0g4fZErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g5GckrPEe2NP6AzGuGlzg" base_Element="_0g5GcErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g5GdUrPEe2NP6AzGuGlzg" base_Element="_0g5Gc0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g5tgErPEe2NP6AzGuGlzg" base_Element="_0g5GdkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g5tg0rPEe2NP6AzGuGlzg" base_Element="_0g5tgUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g6UkErPEe2NP6AzGuGlzg" base_Element="_0g5thErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g6Uk0rPEe2NP6AzGuGlzg" base_Element="_0g6UkUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g67oErPEe2NP6AzGuGlzg" base_Element="_0g6UlErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g67o0rPEe2NP6AzGuGlzg" base_Element="_0g67oUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g67pkrPEe2NP6AzGuGlzg" base_Element="_0g67pErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g7isErPEe2NP6AzGuGlzg" base_Element="_0g67p0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g7is0rPEe2NP6AzGuGlzg" base_Element="_0g7isUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g8JwErPEe2NP6AzGuGlzg" base_Element="_0g7itErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g8Jw0rPEe2NP6AzGuGlzg" base_Element="_0g8JwUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g8JxkrPEe2NP6AzGuGlzg" base_Element="_0g8JxErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g8w0ErPEe2NP6AzGuGlzg" base_Element="_0g8Jx0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g8w00rPEe2NP6AzGuGlzg" base_Element="_0g8w0UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g9X4ErPEe2NP6AzGuGlzg" base_Element="_0g8w1ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g9X40rPEe2NP6AzGuGlzg" base_Element="_0g9X4UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g9-8ErPEe2NP6AzGuGlzg" base_Element="_0g9X5ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g9-80rPEe2NP6AzGuGlzg" base_Element="_0g9-8UrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g-mAErPEe2NP6AzGuGlzg" base_Element="_0g9-9ErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g-mA0rPEe2NP6AzGuGlzg" base_Element="_0g-mAUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g-mBkrPEe2NP6AzGuGlzg" base_Element="_0g-mBErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g_NEkrPEe2NP6AzGuGlzg" base_Element="_0g_NEErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g_NFUrPEe2NP6AzGuGlzg" base_Element="_0g_NE0rPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g_0IErPEe2NP6AzGuGlzg" base_Element="_0g_NFkrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0g_0I0rPEe2NP6AzGuGlzg" base_Element="_0g_0IUrPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Reference xmi:id="_0hAbMErPEe2NP6AzGuGlzg" base_Element="_0g_0JErPEe2NP6AzGuGlzg"/>
  <UMLLabProfile:Patch xmi:id="_2I0GgErPEe2NP6AzGuGlzg" base_Element="_0RgmoErPEe2NP6AzGuGlzg" patchText="@@ -1108,22 +1108,25 @@&#xA;  index;%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_2I2iwErPEe2NP6AzGuGlzg" base_Element="_0RoidErPEe2NP6AzGuGlzg" patchText="@@ -566,16 +566,129 @@&#xA;  ChapR;%0A&#xA;+%0A%0A    public final BufferedImage image;%0A    %0A    /**%0A    * Constructor for Image. %0A    * sets the image. %0A    */%0A&#xA;     Img(&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_2I3J0ErPEe2NP6AzGuGlzg" base_Element="_0QWwEErPEe2NP6AzGuGlzg" patchText="@@ -144,10 +144,8 @@&#xA; lour&#xA;-()&#xA;  %7B%0A &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_2I3w4ErPEe2NP6AzGuGlzg" base_Element="_0QX-MErPEe2NP6AzGuGlzg" patchText="@@ -243,16 +243,197 @@&#xA; (0, 0);%0A&#xA;+    %0A    public final int dr;%0A    public final int dc;%0A    %0A    /**%0A     * Direction constructor.%0A     * %0A     * @param dr Change in row.%0A     * @param dc Change in column.%0A     */%0A&#xA;     Dire&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_2I5mEErPEe2NP6AzGuGlzg" base_Element="_0RMdkErPEe2NP6AzGuGlzg" patchText="@@ -1155,22 +1155,26 @@&#xA; arser %7B%0A&#xA;-public&#xA;+%0A  private&#xA;  static &#xA;@@ -1194,22 +1194,25 @@&#xA; dLevel;%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
</xmi:XMI>
